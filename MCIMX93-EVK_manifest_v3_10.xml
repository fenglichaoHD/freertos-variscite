<?xml version="1.0" encoding="UTF-8"?>
<ksdk:manifest xmlns:ksdk="http://nxp.com/ksdk/2.0/ksdk_manifest_v3.0.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="SDK_2.x_MCIMX93-EVK" name="MCIMX93-EVK" brief="This is SDK version 2.13.1 manifest file. It describes the content of the MCIMX93-EVK and additional settings for tools that support SDK version 2.13.1" format_version="3.10" api_version="2.0.0" configuration="240c51d48eb26fba808033d5eb1f8ba3" xsi:schemaLocation="http://nxp.com/ksdk/2.0/ksdk_manifest_v3.0.xsd http://nxp.com/mcuxpresso/sdk/sdk_manifest_v3.10.xsd">
  <!--Timestamp (UTC): 2023-03-30 10:50:59.265614-->
  <!--This manifest is generated based on sdk repo commit: f6085d1438255f3c2c843265c22e308199486625-->
  <defines>
    <define name="CPU_$|package|" value=""/>
    <define name="CPU_$|package|_$|core|" value=""/>
  </defines>
  <externalDefinitions>
    <definition extID="com.crt.advproject.config.exe.debug"/>
    <definition extID="com.crt.advproject.config.exe.release"/>
  </externalDefinitions>
  <ksdk id="MCUXpresso2131" name="MCUXpresso2131" version="2.13.1" revision="683 2023-03-30"/>
  <compilers>
    <compiler id="compiler_gcc" name="gcc" type="gcc"/>
    <compiler id="compiler_iar" name="iar" type="iar"/>
  </compilers>
  <toolchains>
    <toolchain id="armgcc" name="GCC_ARM_Embedded_10-2021.10" version="10.3.1" full_name="GCC ARM Embedded 10-2021.10" compiler="compiler_gcc" type="armgcc" vendor="GCC ARM Embedded" vendor_url="http://launchpad.net/gcc-arm-embedded"/>
    <toolchain id="iar" name="IAR_Embedded_Workbench_for_ARM" version="9.30.1" full_name="IAR Embedded Workbench for ARM" compiler="compiler_iar" type="iar" vendor="IAR Systems" vendor_url="http://www.iar.com"/>
  </toolchains>
  <boards>
    <board id="mcimx93evk" name="MCIMX93-EVK" href="" version="1.0.0" package="MIMX9352DVUXM">
      <description>i.MX 93 Evaluation Kit</description>
      <image path="." type="image">
        <files mask=""/>
      </image>
      <examples>
        <example id="mcimx93evk_canfd_interrupt_transfer" name="canfd_interrupt_transfer" brief="The canfd_interrupt example shows how to use FlexCAN driver in none-blocking interrupt way:In this example, 2 boards are connected through CAN bus. Endpoint A(board A) send a CAN Message toEndpoint B(board B) when user press space key in terminal. Endpoint B receive the message, printthe message content to terminal and echo back the message. Endpoint A will increase the receivedmessage and waiting for the next transmission of the user initiated." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/canfd" path="boards/mcimx93evk/driver_examples/canfd/interrupt_transfer">
          <external path="boards/mcimx93evk/driver_examples/canfd/interrupt_transfer" type="xml">
            <files mask="canfd_interrupt_transfer_v3_10.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_canfd_loopback" name="canfd_loopback" brief="The canfd_loopback_functional example shows how to use the loopback test mode to debug your CAN Bus design:To demonstrates this example, only one board is needed. The example will config one FlexCAN MessageBuffer to Rx Message Buffer and the other FlexCAN Message Buffer to Tx Message Buffer with same ID.After that, the example will send a CAN Message from the Tx Message Buffer to the Rx Message Bufferthrouth internal loopback interconnect and print out the Message payload to terminal." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/canfd" path="boards/mcimx93evk/driver_examples/canfd/loopback">
          <external path="boards/mcimx93evk/driver_examples/canfd/loopback" type="xml">
            <files mask="canfd_loopback_v3_10.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_canfd_loopback_transfer" name="canfd_loopback_transfer" brief="The canfd_loopback example shows how to use the loopback test mode to debug your CAN Bus design:To demonstrates this example, only one board is needed. The example will config one FlexCAN MessageBuffer to Rx Message Buffer and the other FlexCAN Message Buffer to Tx Message Buffer with same ID.After that, the example will send a CAN Message from the Tx Message Buffer to the Rx Message Bufferthrough internal loopback interconnect and print out the Message payload to terminal." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/canfd" path="boards/mcimx93evk/driver_examples/canfd/loopback_transfer">
          <external path="boards/mcimx93evk/driver_examples/canfd/loopback_transfer" type="xml">
            <files mask="canfd_loopback_transfer_v3_10.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_canfd_ping_pong_buffer_transfer" name="canfd_ping_pong_buffer_transfer" brief="The canfd_ping_pong_buffer_transfer example shows how to use the FlexCAN queue feature to create 2 simulate FIFOs that can receive CANFD frames:In this example, 2 boards are connected through CAN bus. Endpoint A(board A) send CANFD messages to Endpoint B(board B) when user input the number of CAN messages to be send in terminal. Endpoint B uses two receiving queues to receive messages in turn, and prints the message content and the receiving queue number to the terminal after any queue is full." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/canfd" path="boards/mcimx93evk/driver_examples/canfd/ping_pong_buffer_transfer">
          <external path="boards/mcimx93evk/driver_examples/canfd/ping_pong_buffer_transfer" type="xml">
            <files mask="canfd_ping_pong_buffer_transfer_v3_10.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_cmsis_lpi2c_edma_b2b_transfer_master" name="cmsis_lpi2c_edma_b2b_transfer_master" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http://www.keil.com/pack/doc/cmsis/Driver/html/index.html.The cmsis_i2c_edma_b2b_transfer_master example shows how to use i2c driver as master to do board to board transfer with EDMA:In this example, one i2c instance as master and another i2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="cmsis_driver_examples/lpi2c" path="boards/mcimx93evk/cmsis_driver_examples/lpi2c/edma_b2b_transfer/master">
          <external path="boards/mcimx93evk/cmsis_driver_examples/lpi2c/edma_b2b_transfer/master" type="xml">
            <files mask="cmsis_lpi2c_edma_b2b_transfer_master_v3_10.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_cmsis_lpi2c_edma_b2b_transfer_slave" name="cmsis_lpi2c_edma_b2b_transfer_slave" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http://www.keil.com/pack/doc/cmsis/Driver/html/index.html.The cmsis_i2c_edma_b2b_transfer_master example shows how to use i2c driver as master to do board to board transfer with EDMA:In this example, one i2c instance as master and another i2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="cmsis_driver_examples/lpi2c" path="boards/mcimx93evk/cmsis_driver_examples/lpi2c/edma_b2b_transfer/slave">
          <external path="boards/mcimx93evk/cmsis_driver_examples/lpi2c/edma_b2b_transfer/slave" type="xml">
            <files mask="cmsis_lpi2c_edma_b2b_transfer_slave_v3_10.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_cmsis_lpi2c_int_b2b_transfer_master" name="cmsis_lpi2c_int_b2b_transfer_master" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http://www.keil.com/pack/doc/cmsis/Driver/html/index.html.The lpi2c_int_b2b_transfer_master example shows how to use CMSIS i2c driver as master to do board to board transfer with interrupt:In this example, one lpi2c instance as master and another lpi2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="cmsis_driver_examples/lpi2c" path="boards/mcimx93evk/cmsis_driver_examples/lpi2c/int_b2b_transfer/master">
          <external path="boards/mcimx93evk/cmsis_driver_examples/lpi2c/int_b2b_transfer/master" type="xml">
            <files mask="cmsis_lpi2c_int_b2b_transfer_master_v3_10.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_cmsis_lpi2c_int_b2b_transfer_slave" name="cmsis_lpi2c_int_b2b_transfer_slave" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http://www.keil.com/pack/doc/cmsis/Driver/html/index.html.The lpi2c_int_b2b_transfer_master example shows how to use CMSIS i2c driver as master to do board to board transfer with interrupt:In this example, one lpi2c instance as master and another lpi2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="cmsis_driver_examples/lpi2c" path="boards/mcimx93evk/cmsis_driver_examples/lpi2c/int_b2b_transfer/slave">
          <external path="boards/mcimx93evk/cmsis_driver_examples/lpi2c/int_b2b_transfer/slave" type="xml">
            <files mask="cmsis_lpi2c_int_b2b_transfer_slave_v3_10.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_cmsis_lpspi_int_b2b_transfer_master" name="cmsis_lpspi_int_b2b_transfer_master" brief="The cmsis_lpspi_int_b2b_transfer example shows how to use LPSPI CMSIS driver in interrupt way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'cmsis_lpspi_int_b2b_transfer_master.c' includes the LPSPI master code.This example uses the transactional API in LPSPI driver.1. LPSPI master send/received data to/from LPSPI slave in interrupt . " toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="cmsis_driver_examples/lpspi" path="boards/mcimx93evk/cmsis_driver_examples/lpspi/int_b2b_transfer/master">
          <external path="boards/mcimx93evk/cmsis_driver_examples/lpspi/int_b2b_transfer/master" type="xml">
            <files mask="cmsis_lpspi_int_b2b_transfer_master_v3_10.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_cmsis_lpspi_int_b2b_transfer_slave" name="cmsis_lpspi_int_b2b_transfer_slave" brief="The lpspi_int_b2b_transfer example shows how to use LPSPI CMSIS driver in interrupt way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'cmsis_lpspi_int_b2b_transfer_slave.c' includes the LPSPI slave code.This example uses the transactional API in LPSPI driver.1. LPSPI master send/received data to/from LPSPI slave in interrupt . " toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="cmsis_driver_examples/lpspi" path="boards/mcimx93evk/cmsis_driver_examples/lpspi/int_b2b_transfer/slave">
          <external path="boards/mcimx93evk/cmsis_driver_examples/lpspi/int_b2b_transfer/slave" type="xml">
            <files mask="cmsis_lpspi_int_b2b_transfer_slave_v3_10.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_cmsis_lpuart_edma_transfer" name="cmsis_lpuart_edma_transfer" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http://www.keil.com/pack/doc/cmsis/Driver/html/index.html.The cmsis_uart_edma_transfer example shows how to use uart cmsis  driver with EDMA:In this example, one uart instance connect to PC through uart, the board willsend back all characters that PC send to the board.Note: The example echo every 8 characters, so input 8 characters every time." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="cmsis_driver_examples/lpuart" path="boards/mcimx93evk/cmsis_driver_examples/lpuart/edma_transfer">
          <external path="boards/mcimx93evk/cmsis_driver_examples/lpuart/edma_transfer" type="xml">
            <files mask="cmsis_lpuart_edma_transfer_v3_10.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_cmsis_lpuart_interrupt_transfer" name="cmsis_lpuart_interrupt_transfer" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http://www.keil.com/pack/doc/cmsis/Driver/html/index.html.The cmsis_uart_interrupt_transfer example shows how to use uart cmsis driver in interrupt way:In this example, one uart instance connect to PC through uart, the board willsend back all characters that PC send to the board.Note: The example echo every 8 characters, so input 8 characters every time." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="cmsis_driver_examples/lpuart" path="boards/mcimx93evk/cmsis_driver_examples/lpuart/interrupt_transfer">
          <external path="boards/mcimx93evk/cmsis_driver_examples/lpuart/interrupt_transfer" type="xml">
            <files mask="cmsis_lpuart_interrupt_transfer_v3_10.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_dma3_memory_to_memory" name="dma3_memory_to_memory" brief="The EDMA memory to memory example is a simple demonstration program that uses the SDK software.It executes one shot transfer from source buffer to destination buffer using the SDK EDMA drivers.The purpose of this example is to show how to use the EDMA and to provide a simple example fordebugging and further development." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/edma" path="boards/mcimx93evk/driver_examples/edma/memory_to_memory">
          <external path="boards/mcimx93evk/driver_examples/edma/memory_to_memory" type="xml">
            <files mask="dma3_memory_to_memory_v3_10.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_dma3_scatter_gather" name="dma3_scatter_gather" brief="The EDMA memory to memory example is a simple demonstration program that uses the SDK software.It excuates one shot transfer from source buffer to destination buffer using the SDK EDMA drivers.The purpose of this example is to show how to use the EDMA and to provide a simple example fordebugging and further development." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/edma" path="boards/mcimx93evk/driver_examples/edma/scatter_gather">
          <external path="boards/mcimx93evk/driver_examples/edma/scatter_gather" type="xml">
            <files mask="dma3_scatter_gather_v3_10.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_edma4_channel_link" name="edma4_channel_link" brief="The EDMA4 channel link example is a simple demonstration program that uses the SDK software.The purpose of this example is to show how to use the EDMA4 and to provide a simple example for debugging and further development." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/edma4" path="boards/mcimx93evk/driver_examples/edma4/channel_link">
          <external path="boards/mcimx93evk/driver_examples/edma4/channel_link" type="xml">
            <files mask="edma4_channel_link_v3_10.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_edma4_interleave_transfer" name="edma4_interleave_transfer" brief="The EDMA4 interleave example is a simple demonstration program that uses the SDK software.The purpose of this example is to show how to use the EDMA4 and to provide a simple example for debugging and further development." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/edma4" path="boards/mcimx93evk/driver_examples/edma4/interleave_transfer">
          <external path="boards/mcimx93evk/driver_examples/edma4/interleave_transfer" type="xml">
            <files mask="edma4_interleave_transfer_v3_10.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_edma4_memory_to_memory" name="edma4_memory_to_memory" brief="The EDMA4 memory to memory example is a simple demonstration program that uses the SDK software.It executes one shot transfer from source buffer to destination buffer using the SDK EDMA4 drivers.The purpose of this example is to show how to use the EDMA4 and to provide a simple example for debugging and further development." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/edma4" path="boards/mcimx93evk/driver_examples/edma4/memory_to_memory">
          <external path="boards/mcimx93evk/driver_examples/edma4/memory_to_memory" type="xml">
            <files mask="edma4_memory_to_memory_v3_10.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_edma4_memory_to_memory_transfer" name="edma4_memory_to_memory_transfer" brief="The EDMA4 memory to memory transfer example is a simple demonstration program that uses the SDK software.It executes one shot transfer from source buffer to destination buffer using the SDK EDMA4 drivers.The purpose of this example is to show how to use the EDMA4 and to provide a simple example for debugging and further development." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/edma4" path="boards/mcimx93evk/driver_examples/edma4/memory_to_memory_transfer">
          <external path="boards/mcimx93evk/driver_examples/edma4/memory_to_memory_transfer" type="xml">
            <files mask="edma4_memory_to_memory_transfer_v3_10.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_edma4_memset" name="edma4_memset" brief="The EDMA4 memset example is a simple demonstration program that uses the SDK software.It executes one shot transfer from source buffer to destination buffer using the SDK EDMA4 drivers.The purpose of this example is to show how to use the EDMA4 and to provide a simple example for debugging and further development." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/edma4" path="boards/mcimx93evk/driver_examples/edma4/memset">
          <external path="boards/mcimx93evk/driver_examples/edma4/memset" type="xml">
            <files mask="edma4_memset_v3_10.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_edma4_ping_pong_transfer" name="edma4_ping_pong_transfer" brief="The EDMA4 ping pong transfer example is a simple demonstration program that uses the SDK software.The purpose of this example is to show how to use the EDMA4 and to provide a simple example for debugging and further development." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/edma4" path="boards/mcimx93evk/driver_examples/edma4/ping_pong_transfer">
          <external path="boards/mcimx93evk/driver_examples/edma4/ping_pong_transfer" type="xml">
            <files mask="edma4_ping_pong_transfer_v3_10.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_edma4_scatter_gather" name="edma4_scatter_gather" brief="The EDMA4 scatter gather example is a simple demonstration program that uses the SDK software.It executes one shot transfer from source buffer to destination buffer using the SDK EDMA4 drivers.The purpose of this example is to show how to use the EDMA4 and to provide a simple example for debugging and further development." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/edma4" path="boards/mcimx93evk/driver_examples/edma4/scatter_gather">
          <external path="boards/mcimx93evk/driver_examples/edma4/scatter_gather" type="xml">
            <files mask="edma4_scatter_gather_v3_10.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_edma4_wrap_transfer" name="edma4_wrap_transfer" brief="The EDMA4 wrap transfer example is a simple demonstration program that uses the SDK software.The purpose of this example is to show how to use the EDMA4 and to provide a simple example for debugging and further development." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/edma4" path="boards/mcimx93evk/driver_examples/edma4/wrap_transfer">
          <external path="boards/mcimx93evk/driver_examples/edma4/wrap_transfer" type="xml">
            <files mask="edma4_wrap_transfer_v3_10.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_enet_qos_txrx_multiring_transfer" name="enet_qos_txrx_multiring_transfer" brief="The example shows the way to use ENET QOS driver to receive and transmit frames supported multi-ring platforms. this example is only supported in multi-ring platform. 1. This example shows how to initialize the ENET MAC. 2. How to use ENET MAC to transmit frames in avb supported multiple-ring platforms. The example transmits 20 number frames. For simple demo, we create frames with some special definition. 1. Build transmission frames with broadcast mac address. 2. Build frames with unicast mac address 3. Send broadcast frames to ring 0 and unitcase frames to ring 1, then receive them back in associated rings." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/enet_qos" path="boards/mcimx93evk/driver_examples/enet_qos/txrx_multiring_transfer">
          <external path="boards/mcimx93evk/driver_examples/enet_qos/txrx_multiring_transfer" type="xml">
            <files mask="enet_qos_txrx_multiring_transfer_v3_10.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_enet_qos_txrx_ptp1588_transfer" name="enet_qos_txrx_ptp1588_transfer" brief="The example shows the way to use ENET QOS driver to receive and transmit frame in the 1588 feature required cases.1. This example shows how to initialize the ENET_QOS.2. How to get the time stamp of the PTP 1588 timer.3. How to use Get the ENET_QOS transmit and receive frame time stamp.The example transmits 20 number PTP event frame, shows the timestamp of the transmitted frame.The length, source MAC address and destination MAC address of the received frame will be print. The time stamp of the received timestamp will be print when the PTP message frame is received(the outside loopback cable can be used to see the right rx time-stamping log since we send the ptp message). " toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/enet_qos" path="boards/mcimx93evk/driver_examples/enet_qos/txrx_ptp1588_transfer">
          <external path="boards/mcimx93evk/driver_examples/enet_qos/txrx_ptp1588_transfer" type="xml">
            <files mask="enet_qos_txrx_ptp1588_transfer_v3_10.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_enet_txrx_multiring_transfer" name="enet_txrx_multiring_transfer" brief="The enet_txrx_multiring_transfer example shows the way to use ENET driver to   receive and transmit avb frame in the avb feature supported multi-ring platforms. this example is only supported in multi-ring platform.1. This example shows how to initialize the ENET MAC.2. How to use ENET MAC to transmit frames in avb supported multiple-ring platforms.The example transmits 30 number frames. For simple demo, we create frames with some special definition.1. Build transmission frames with broadcast mac address.2. Build different frames for each ring: 10 normal ethernet frame, 10 similar IEC 61883-6 type frames,10 similar IEC 61883-8 type frames and the two IEC 1722 avb frames are set with different vlan priority . Notice, To simply show how to use three different rings in rx/tx on one board. This example set PHY local loop and you will see there will be PHY init auto-negotiation fail and this is normal. because phy can not finishauto-negotiation when phy is in loop back mode. However, the auto-negotiation fail has no impact on this loop back example, so just forget about the failure auto-negotiation." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/enet" path="boards/mcimx93evk/driver_examples/enet/txrx_multiring_transfer">
          <external path="boards/mcimx93evk/driver_examples/enet/txrx_multiring_transfer" type="xml">
            <files mask="enet_txrx_multiring_transfer_v3_10.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_enet_txrx_ptp1588_transfer" name="enet_txrx_ptp1588_transfer" brief="The enet_rxtx_ptp1588 example shows the way to use ENET driver to   receive and transmit frame in the 1588 feature required cases.1. This example shows how to initialize the ENET MAC.2. How to use ENET MAC to receive and transmit frame.3. How to add to the multicast group to receive PTP 1588 message.4. How to get the time stamp of the PTP 1588 timer.4. How to use Get the ENET transmit and receive frame time stamp.The example transmits 20 number PTP event frame, shows the timestamp of the transmitted frame.The length, source MAC address and destination MAC address of the received frame will be print. The time stamp of the received timestamp will be print when the PTP message frame is received. Note, The RMII mode is used for default setting to initialize the ENET interface between MAC and the external PHY. you can change it to MII mode as you wish. Please make sure the MII Mode setting in the MAC is synchronize to the settingin TWR-SERIAL board for the external PHY." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/enet" path="boards/mcimx93evk/driver_examples/enet/txrx_ptp1588_transfer">
          <external path="boards/mcimx93evk/driver_examples/enet/txrx_ptp1588_transfer" type="xml">
            <files mask="enet_txrx_ptp1588_transfer_v3_10.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_enet_txrx_transfer" name="enet_txrx_transfer" brief="The enet_rxtx example shows the simplest way to use ENET driver for simple frame receive and transmit.1. This example shows how to initialize the ENET MAC.2. How to use ENET MAC to receive and transmit frame.The example transmits 20 number broadcast frame, print the frame length, source MAC addressand destination MAC address when receive frame.Note, The RMII mode is used for default setting to initialize the ENET interface between MAC and the external PHY. youcan change it to MII mode as you wish. Please make sure the MII Mode setting in the MAC is synchronize to the settingin TWR-SERIAL board for the external PHY." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/enet" path="boards/mcimx93evk/driver_examples/enet/txrx_transfer">
          <external path="boards/mcimx93evk/driver_examples/enet/txrx_transfer" type="xml">
            <files mask="enet_txrx_transfer_v3_10.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_ethosu_apps" name="ethosu_apps" brief="ethosu_apps" toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="ethosu_examples" path="boards/mcimx93evk/demo_apps/ethosu_apps">
          <external path="boards/mcimx93evk/demo_apps/ethosu_apps" type="xml">
            <files mask="ethosu_apps_v3_10.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_ethosu_apps_rpmsg" name="ethosu_apps_rpmsg" brief="ethosu_apps_rpmsg" toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="ethosu_examples" path="boards/mcimx93evk/demo_apps/ethosu_apps_rpmsg">
          <external path="boards/mcimx93evk/demo_apps/ethosu_apps_rpmsg" type="xml">
            <files mask="ethosu_apps_rpmsg_v3_10.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_flexcan_efifo_interrupt_transfer" name="flexcan_efifo_interrupt_transfer" brief="flexcan_efifo_interrupt_transfer example shows how to use FlexCAN Enhanced Rx FIFO in none-blocking interrupt way:In this example, when set ENABLE_LOOPBACK macro, only one board is needed. The example will config one FlexCAN Message Buffer to Tx Message Buffer and setup Enhanced Rx FIFO. After that, the example will send 4 CAN FD Messages from Tx Message Buffer to Enhanced Rx FIFO through internal loopback interconnect. The send and received message will be print out to terminal When not define ENABLE_LOOPBACK, need 2 boards are connected through CAN bus. Endpoint A(board A) send a CAN Message to Endpoint B(board B) when user press space key in terminal. Endpoint B receive the message by Enhanced Rx FIFO, and print the message content to terminal after receive 4 CAN FD messages." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/flexcan" path="boards/mcimx93evk/driver_examples/flexcan/efifo_interrupt_transfer">
          <external path="boards/mcimx93evk/driver_examples/flexcan/efifo_interrupt_transfer" type="xml">
            <files mask="flexcan_efifo_interrupt_transfer_v3_10.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_flexcan_interrupt_transfer" name="flexcan_interrupt_transfer" brief="The flexcan_interrupt example shows how to use FlexCAN driver in none-blocking interrupt way:In this example, 2 boards are connected through CAN bus. Endpoint A(board A) send a CAN Message toEndpoint B(board B) when user press space key in terminal. Endpoint B receive the message, printthe message content to terminal and echo back the message. Endpoint A will increase the receivedmessage and waiting for the next transmission of the user initiated." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/flexcan" path="boards/mcimx93evk/driver_examples/flexcan/interrupt_transfer">
          <external path="boards/mcimx93evk/driver_examples/flexcan/interrupt_transfer" type="xml">
            <files mask="flexcan_interrupt_transfer_v3_10.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_flexcan_loopback" name="flexcan_loopback" brief="The flexcan_loopback_functional example shows how to use the loopback test mode to debug your CAN Bus design:To demonstrates this example, only one board is needed. The example will config one FlexCAN MessageBuffer to Rx Message Buffer and the other FlexCAN Message Buffer to Tx Message Buffer with same ID.After that, the example will send a CAN Message from the Tx Message Buffer to the Rx Message Bufferthrouth internal loopback interconnect and print out the Message payload to terminal." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/flexcan" path="boards/mcimx93evk/driver_examples/flexcan/loopback">
          <external path="boards/mcimx93evk/driver_examples/flexcan/loopback" type="xml">
            <files mask="flexcan_loopback_v3_10.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_flexcan_loopback_edma_transfer" name="flexcan_loopback_edma_transfer" brief="The flexcan_loopback_edma example shows how to use the EDMA version transactional driver to receiveCAN Message from Rx FIFO:To demonstrates this example, only one board is needed. The example will config one FlexCAN MessageBuffer to Tx Message Buffer and also setup Rx FIFO. After that, the example will send 4 CAN Messagesfrom Tx Message Buffer to Rx FIFO through internal loopback interconnect and read them out usingEDMA version FlexCAN transactional driver. The Sent and received message will be print out to terminalat last." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/flexcan" path="boards/mcimx93evk/driver_examples/flexcan/loopback_edma_transfer">
          <external path="boards/mcimx93evk/driver_examples/flexcan/loopback_edma_transfer" type="xml">
            <files mask="flexcan_loopback_edma_transfer_v3_10.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_flexcan_loopback_transfer" name="flexcan_loopback_transfer" brief="The flexcan_loopback example shows how to use the loopback test mode to debug your CAN Bus design:To demonstrates this example, only one board is needed. The example will config one FlexCAN MessageBuffer to Rx Message Buffer and the other FlexCAN Message Buffer to Tx Message Buffer with same ID.After that, the example will send a CAN Message from the Tx Message Buffer to the Rx Message Bufferthrough internal loopback interconnect and print out the Message payload to terminal." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/flexcan" path="boards/mcimx93evk/driver_examples/flexcan/loopback_transfer">
          <external path="boards/mcimx93evk/driver_examples/flexcan/loopback_transfer" type="xml">
            <files mask="flexcan_loopback_transfer_v3_10.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_flexcan_ping_pong_buffer_transfer" name="flexcan_ping_pong_buffer_transfer" brief="The flexcan_ping_pong_buffer_transfer example shows how to use the FlexCAN queue feature to create 2 simulate FIFOs that can receive CAN frames:In this example, 2 boards are connected through CAN bus. Endpoint A(board A) send CAN messages to Endpoint B(board B) when user input the number of CAN messages to be send in terminal. Endpoint B uses two receiving queues to receive messages in turn, and prints the message content and the receiving queue number to the terminal after any queue is full." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/flexcan" path="boards/mcimx93evk/driver_examples/flexcan/ping_pong_buffer_transfer">
          <external path="boards/mcimx93evk/driver_examples/flexcan/ping_pong_buffer_transfer" type="xml">
            <files mask="flexcan_ping_pong_buffer_transfer_v3_10.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_flexio_i2c_interrupt_lpi2c_transfer" name="flexio_i2c_interrupt_lpi2c_transfer" brief="The flexio_lpi2c_interrupt example shows how to use flexio i2c master  driver in interrupt way:In this example, a flexio simulated i2c master connect to a LPI2C slave" toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/flexio" path="boards/mcimx93evk/driver_examples/flexio/i2c/interrupt_lpi2c_transfer">
          <external path="boards/mcimx93evk/driver_examples/flexio/i2c/interrupt_lpi2c_transfer" type="xml">
            <files mask="flexio_i2c_interrupt_lpi2c_transfer_v3_10.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_flexio_i2c_read_accel_value_transfer" name="flexio_i2c_read_accel_value_transfer" brief="The flexio_i2c_read_accel_value example shows how to use FLEXIO I2C  Master driver to communicate with an i2c device: 1. How to use the flexio i2c master driver to read a i2c device who_am_I register. 2. How to use the flexio i2c master driver to write/read the device registers.In this example, the values of three-axis accelerometer print to the serial terminal on PC throughthe virtual serial port on board." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/flexio" path="boards/mcimx93evk/driver_examples/flexio/i2c/read_accel_value_transfer">
          <external path="boards/mcimx93evk/driver_examples/flexio/i2c/read_accel_value_transfer" type="xml">
            <files mask="flexio_i2c_read_accel_value_transfer_v3_10.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_freertos_event" name="freertos_event" brief="This document explains the freertos_event example. It shows how task waits for an event (defined setof bits in event group). This event can be set by any other process or interrupt in the system.The example application creates three tasks. Two write tasks write_task_1 and write_task_2continuously setting event bit 0 and bit 1.Read_task is waiting for any event bit and printing actual state on console. Event bits areautomatically cleared after read task is entered.Three possible states can occurre:Both bits are set.zBit B0 is set.Bit B1 is set." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="rtos_examples" path="boards/mcimx93evk/rtos_examples/freertos_event">
          <external path="boards/mcimx93evk/rtos_examples/freertos_event" type="xml">
            <files mask="freertos_event_v3_10.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_freertos_generic" name="freertos_generic" brief="This document explains the freertos_generic example. It is based on code FreeRTOS documentation fromhttp://www.freertos.org/Hardware-independent-RTOS-example.html. It shows combination of severaltasks with queue, software timer, tick hook and semaphore.The example application creates three tasks. The prvQueueSendTask periodically sending data toxQueue queue. The prvQueueReceiveTask is waiting for incoming message and counting number ofreceived messages. Task prvEventSemaphoreTask is waiting for xEventSemaphore semaphore given fromvApplicationTickHook. Tick hook give semaphore every 500 ms.Other hook types used for RTOS and resource statistics are also demonstrated in example:* vApplicationIdleHook* vApplicationStackOverflowHook* vApplicationMallocFailedHook" toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="rtos_examples" path="boards/mcimx93evk/rtos_examples/freertos_generic">
          <external path="boards/mcimx93evk/rtos_examples/freertos_generic" type="xml">
            <files mask="freertos_generic_v3_10.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_freertos_hello" name="freertos_hello" brief="The Hello World project is a simple demonstration program that uses the SDK UART drivere incombination with FreeRTOS. The purpose of this demo is to show how to use the debug console and toprovide a simple project for debugging and further development.The example application creates one task called hello_task. This task print &quot;Hello world.&quot; messagevia debug console utility and suspend itself." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="rtos_examples" path="boards/mcimx93evk/rtos_examples/freertos_hello">
          <external path="boards/mcimx93evk/rtos_examples/freertos_hello" type="xml">
            <files mask="freertos_hello_v3_10.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_freertos_lpi2c_b2b_master" name="freertos_lpi2c_b2b_master" brief="The LPI2C Example project is a demonstration program that uses the KSDK software to manipulate the Low Power Inter-Integrated Circuit.The example uses two instances of LPI2C, one in configured as master and the other one as slave.The LPI2C master sends data to LPI2C slave. The slave will check the data it receives and shows the log." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="rtos_examples" path="boards/mcimx93evk/rtos_examples/freertos_lpi2c_b2b/master">
          <external path="boards/mcimx93evk/rtos_examples/freertos_lpi2c_b2b/master" type="xml">
            <files mask="freertos_lpi2c_b2b_master_v3_10.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_freertos_lpi2c_b2b_slave" name="freertos_lpi2c_b2b_slave" brief="The LPI2C Example project is a demonstration program that uses the KSDK software to manipulate the Low Power Inter-Integrated Circuit.The example uses two instances of LPI2C, one in configured as master and the other one as slave.The LPI2C master sends data to LPI2C slave. The slave will check the data it receives and shows the log." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="rtos_examples" path="boards/mcimx93evk/rtos_examples/freertos_lpi2c_b2b/slave">
          <external path="boards/mcimx93evk/rtos_examples/freertos_lpi2c_b2b/slave" type="xml">
            <files mask="freertos_lpi2c_b2b_slave_v3_10.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_freertos_lpspi_b2b_master" name="freertos_lpspi_b2b_master" brief="The freertos_lpspi_b2b_master example shows how to use LPSPI driver in FreeRTOS." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="rtos_examples" path="boards/mcimx93evk/rtos_examples/freertos_lpspi_b2b/master">
          <external path="boards/mcimx93evk/rtos_examples/freertos_lpspi_b2b/master" type="xml">
            <files mask="freertos_lpspi_b2b_master_v3_10.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_freertos_lpspi_b2b_slave" name="freertos_lpspi_b2b_slave" brief="The freertos_lpspi_b2b_slave example shows how to use LPSPI driver in FreeRTOS." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="rtos_examples" path="boards/mcimx93evk/rtos_examples/freertos_lpspi_b2b/slave">
          <external path="boards/mcimx93evk/rtos_examples/freertos_lpspi_b2b/slave" type="xml">
            <files mask="freertos_lpspi_b2b_slave_v3_10.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_freertos_lpuart" name="freertos_lpuart" brief="The LPUART example for FreeRTOS demonstrates the possibility to use the LPUART driver in the RTOS.The example uses single instance of LPUART IP and writes string into, then reads back chars.After every 4B received, these are sent back on LPUART." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="rtos_examples" path="boards/mcimx93evk/rtos_examples/freertos_lpuart">
          <external path="boards/mcimx93evk/rtos_examples/freertos_lpuart" type="xml">
            <files mask="freertos_lpuart_v3_10.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_freertos_mutex" name="freertos_mutex" brief="This document explains the freertos_mutex example. It shows how mutex manage access to commonresource (terminal output).The example application creates two identical instances of write_task. Each task will lock the mutexbefore printing and unlock it after printing to ensure that the outputs from tasks are not mixedtogether.The test_task accept output message during creation as function parameter. Output message have twoparts. If xMutex is unlocked, the write_task_1 acquire xMutex and print first part of message. Thenrescheduling is performed. In this moment scheduler check if some other task could run, but secondtask write_task+_2 is blocked because xMutex is already locked by first write task. The firstwrite_task_1 continue from last point by printing of second message part. Finaly the xMutex isunlocked and second instance of write_task_2 is executed." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="rtos_examples" path="boards/mcimx93evk/rtos_examples/freertos_mutex">
          <external path="boards/mcimx93evk/rtos_examples/freertos_mutex" type="xml">
            <files mask="freertos_mutex_v3_10.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_freertos_queue" name="freertos_queue" brief="This document explains the freertos_queue example. This example introduce simple logging mechanismbased on message passing.Example could be devided in two parts. First part is logger. It contain three tasks:log_add().....Add new message into the log. Call xQueueSend function to pass new message into              message queue.log_init()....Initialize logger (create logging task and message queue log_queue).log_task()....Task responsible for printing of log output.Second part is application of this simple logging mechanism. Each of two tasks write_task_1 andwrite_task_2 print 5 messages into log." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="rtos_examples" path="boards/mcimx93evk/rtos_examples/freertos_queue">
          <external path="boards/mcimx93evk/rtos_examples/freertos_queue" type="xml">
            <files mask="freertos_queue_v3_10.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_freertos_sem" name="freertos_sem" brief="This document explains the freertos_sem example, what to expect when running it and a briefintroduction to the API. The freertos_sem example code shows how semaphores works. Two differenttasks are synchronized in bilateral rendezvous model.The example uses four tasks. One producer_task and three consumer_tasks. The producer_task starts bycreating of two semaphores (xSemaphore_producer and xSemaphore_consumer). These semaphores controlaccess to virtual item. The synchronization is based on bilateral rendezvous pattern. Both ofconsumer and producer must be prepared to enable transaction." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="rtos_examples" path="boards/mcimx93evk/rtos_examples/freertos_sem">
          <external path="boards/mcimx93evk/rtos_examples/freertos_sem" type="xml">
            <files mask="freertos_sem_v3_10.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_freertos_swtimer" name="freertos_swtimer" brief="This document explains the freertos_swtimer example. It shows usage of software timer and itscallback.The example application creates one software timer SwTimer. The timer's callback SwTimerCallback isperiodically executed and text &quot;Tick.&quot; is printed to terminal." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="rtos_examples" path="boards/mcimx93evk/rtos_examples/freertos_swtimer">
          <external path="boards/mcimx93evk/rtos_examples/freertos_swtimer" type="xml">
            <files mask="freertos_swtimer_v3_10.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_hello_world" name="hello_world" brief="The HelloWorld demo prints the &quot;Hello World&quot; string to the terminal using the SDK UART drivers and repeat what user input. The purpose of this demo is to show how to use the UART, and to provide a simple project for debugging and further development." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="demo_apps" path="boards/mcimx93evk/demo_apps/hello_world">
          <external path="boards/mcimx93evk/demo_apps/hello_world" type="xml">
            <files mask="hello_world_v3_10.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_hello_world_ns" name="hello_world_ns" brief="The Hello World demo application provides a sanity check for the new SDK build environments and board bring up. This demo application also utilizes TrustZone, so it demonstrates basic techniques for TrustZone applications development. This is non-secure part of the application." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="trustzone_examples" linked_projects="mcimx93evk_hello_world_s" path="boards/mcimx93evk/trustzone_examples/hello_world/hello_world_ns">
          <external path="boards/mcimx93evk/trustzone_examples/hello_world/hello_world_ns" type="xml">
            <files mask="hello_world_ns_v3_10.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_hello_world_s" name="hello_world_s" brief="The Hello World demo application provides a sanity check for the new SDK build environments and board bring up. This demo application also utilizes TrustZone, so it demonstrates basic techniques for TrustZone applications development. This is secure part of the application." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="trustzone_examples" linked_projects="mcimx93evk_hello_world_ns" path="boards/mcimx93evk/trustzone_examples/hello_world/hello_world_s">
          <external path="boards/mcimx93evk/trustzone_examples/hello_world/hello_world_s" type="xml">
            <files mask="hello_world_s_v3_10.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_i3c_interrupt_b2b_transfer_master" name="i3c_interrupt_b2b_transfer_master" brief="The i3c_interrupt_b2b_transfer_master example shows how to use i3c driver as master to do board to board transfer using interrupt method:In this example, one i3c instance as master and another i3c instance on the other board as slave. Master will assign dynamic address to slave, then sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/i3c" path="boards/mcimx93evk/driver_examples/i3c/interrupt_b2b_transfer/master">
          <external path="boards/mcimx93evk/driver_examples/i3c/interrupt_b2b_transfer/master" type="xml">
            <files mask="i3c_interrupt_b2b_transfer_master_v3_10.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_i3c_interrupt_b2b_transfer_slave" name="i3c_interrupt_b2b_transfer_slave" brief="The i3c_interrupt_b2b_transfer_slave example shows how to use i3c driver as slave to do board to board transfer with a interrupt master:In this example, one i3c instance as slave and another i3c instance on the other board as master. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/i3c" path="boards/mcimx93evk/driver_examples/i3c/interrupt_b2b_transfer/slave">
          <external path="boards/mcimx93evk/driver_examples/i3c/interrupt_b2b_transfer/slave" type="xml">
            <files mask="i3c_interrupt_b2b_transfer_slave_v3_10.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_i3c_master_read_sensor_lsm6dso" name="i3c_master_read_sensor_lsm6dso" brief="The i3c_master_read_sensor_lsm6dso example shows how to use i3c driver as master to communicate with sensor LSM6DSO" toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/i3c" path="boards/mcimx93evk/driver_examples/i3c/master_read_sensor_lsm6dso">
          <external path="boards/mcimx93evk/driver_examples/i3c/master_read_sensor_lsm6dso" type="xml">
            <files mask="i3c_master_read_sensor_lsm6dso_v3_10.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_i3c_polling_b2b_transfer_master" name="i3c_polling_b2b_transfer_master" brief="The i3c_polling_b2b_transfer_master example shows how to use i3c driver as master to do board to board transfer using polling method:In this example, one i3c instance as master and another i3c instance on the other board as slave. Master will assign dynamic address to slave, then sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/i3c" path="boards/mcimx93evk/driver_examples/i3c/polling_b2b_transfer/master">
          <external path="boards/mcimx93evk/driver_examples/i3c/polling_b2b_transfer/master" type="xml">
            <files mask="i3c_polling_b2b_transfer_master_v3_10.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_i3c_polling_b2b_transfer_slave" name="i3c_polling_b2b_transfer_slave" brief="The i3c_polling_b2b_transfer_slave example shows how to use i3c driver as slave to do board to board transfer with a polling master:In this example, one i3c instance as slave and another i3c instance on the other board as master. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/i3c" path="boards/mcimx93evk/driver_examples/i3c/polling_b2b_transfer/slave">
          <external path="boards/mcimx93evk/driver_examples/i3c/polling_b2b_transfer/slave" type="xml">
            <files mask="i3c_polling_b2b_transfer_slave_v3_10.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_lpi2c_edma_b2b_transfer_master" name="lpi2c_edma_b2b_transfer_master" brief="The lpi2c_edma_b2b_transfer_master example shows how to use lpi2c driver as master to do board to board transfer with EDMA:In this example, one lpi2c instance as master and another lpi2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/lpi2c" path="boards/mcimx93evk/driver_examples/lpi2c/edma_b2b_transfer/master">
          <external path="boards/mcimx93evk/driver_examples/lpi2c/edma_b2b_transfer/master" type="xml">
            <files mask="lpi2c_edma_b2b_transfer_master_v3_10.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_lpi2c_edma_b2b_transfer_slave" name="lpi2c_edma_b2b_transfer_slave" brief="The lpi2c_edma_b2b_transfer_slave example shows how to use lpi2c driver as slave to do board to board transfer with a EDMA master:In this example, one lpi2c instance as slave and another lpi2c instance on the other board as master. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/lpi2c" path="boards/mcimx93evk/driver_examples/lpi2c/edma_b2b_transfer/slave">
          <external path="boards/mcimx93evk/driver_examples/lpi2c/edma_b2b_transfer/slave" type="xml">
            <files mask="lpi2c_edma_b2b_transfer_slave_v3_10.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_lpi2c_interrupt_b2b_transfer_master" name="lpi2c_interrupt_b2b_transfer_master" brief="The lpi2c_interrupt_b2b_transfer_master example shows how to use lpi2c driver as master to do board to board transfer with interrupt:In this example, one lpi2c instance as master and another lpi2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/lpi2c" path="boards/mcimx93evk/driver_examples/lpi2c/interrupt_b2b_transfer/master">
          <external path="boards/mcimx93evk/driver_examples/lpi2c/interrupt_b2b_transfer/master" type="xml">
            <files mask="lpi2c_interrupt_b2b_transfer_master_v3_10.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_lpi2c_interrupt_b2b_transfer_slave" name="lpi2c_interrupt_b2b_transfer_slave" brief="The lpi2c_interrupt_b2b_transfer_slave example shows how to use lpi2c driver as slave to do board to board transfer with interrupt:In this example, one lpi2c instance as slave and another lpi2c instance on the other board as master. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/lpi2c" path="boards/mcimx93evk/driver_examples/lpi2c/interrupt_b2b_transfer/slave">
          <external path="boards/mcimx93evk/driver_examples/lpi2c/interrupt_b2b_transfer/slave" type="xml">
            <files mask="lpi2c_interrupt_b2b_transfer_slave_v3_10.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_lpi2c_polling_b2b_master" name="lpi2c_polling_b2b_master" brief="The lpi2c_polling_b2b_master example shows how to use lpi2c driver as master to do board to board transfer using polling method:In this example, one lpi2c instance as master and another lpi2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/lpi2c" path="boards/mcimx93evk/driver_examples/lpi2c/polling_b2b/master">
          <external path="boards/mcimx93evk/driver_examples/lpi2c/polling_b2b/master" type="xml">
            <files mask="lpi2c_polling_b2b_master_v3_10.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_lpi2c_polling_b2b_slave" name="lpi2c_polling_b2b_slave" brief="The lpi2c_polling_b2b_slave example shows how to use lpi2c driver as slave to do board to board transfer with a polling master:In this example, one lpi2c instance as slave and another lpi2c instance on the other board as master. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/lpi2c" path="boards/mcimx93evk/driver_examples/lpi2c/polling_b2b/slave">
          <external path="boards/mcimx93evk/driver_examples/lpi2c/polling_b2b/slave" type="xml">
            <files mask="lpi2c_polling_b2b_slave_v3_10.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_lpi2c_read_accel_value_transfer" name="lpi2c_read_accel_value_transfer" brief="The lpi2c_read_accel_value example shows how to use LPI2C driver to communicate with an lpi2c device: 1. How to use the lpi2c driver to read a lpi2c device who_am_I register. 2. How to use the lpi2c driver to write/read the device registers.In this example, the values of three-axis accelerometer print to the serial terminal on PC throughthe virtual serial port on board." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/lpi2c" path="boards/mcimx93evk/driver_examples/lpi2c/read_accel_value_transfer">
          <external path="boards/mcimx93evk/driver_examples/lpi2c/read_accel_value_transfer" type="xml">
            <files mask="lpi2c_read_accel_value_transfer_v3_10.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_lpit_chained_channel" name="lpit_chained_channel" brief="The LPIT chained channel project is a simple example of the SDK LPIT driver. It sets up the LPIT hardware block to trigger a periodic interrupt after every 1 second in the channel No.0, the channel No.1 chained with channel No.0, if LPIT contain more than two channels, the channel No.2 chained with channel No.1....the channel No.N chained with Channel No.N-1. When the LPIT interrupt is triggered." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/lpit" path="boards/mcimx93evk/driver_examples/lpit/chained_channel">
          <external path="boards/mcimx93evk/driver_examples/lpit/chained_channel" type="xml">
            <files mask="lpit_chained_channel_v3_10.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_lpit_single_channel" name="lpit_single_channel" brief="The LPIT single channel project is a simple example of the SDK LPIT driver. It sets up the LPIThardware block to trigger a periodic interrupt after every 1 second. When the LPIT interrupt is triggereda message a printed on the serial terminal and an LED is toggled on the board." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/lpit" path="boards/mcimx93evk/driver_examples/lpit/single_channel">
          <external path="boards/mcimx93evk/driver_examples/lpit/single_channel" type="xml">
            <files mask="lpit_single_channel_v3_10.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_lpspi_interrupt_b2b_master" name="lpspi_interrupt_b2b_master" brief="The lpspi_interrupt_b2b example shows how to use LPSPI driver in interrupt way:In this example , we need two boards , one board used as LPSPI master and another board used as LPSPI slave.The file 'lpspi_interrupt_b2b_master.c' includes the LPSPI master code.This example does not use the transactional API in LPSPI driver. It's a demonstration that how to use the interrupt in KSDK driver.1. LPSPI master send/received data to/from LPSPI slave in interrupt . (LPSPI Slave using interrupt to receive/send the data)" toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/lpspi" path="boards/mcimx93evk/driver_examples/lpspi/interrupt_b2b/master">
          <external path="boards/mcimx93evk/driver_examples/lpspi/interrupt_b2b/master" type="xml">
            <files mask="lpspi_interrupt_b2b_master_v3_10.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_lpspi_interrupt_b2b_slave" name="lpspi_interrupt_b2b_slave" brief="The lpspi_interrupt_b2b example shows how to use LPSPI driver in interrupt way:In this example , we need two boards , one board used as LPSPI master and another board used as LPSPI slave.The file 'dspi_interrupt_b2b_slave.c' includes the LPSPI slave code.This example does not use the transactional API in LPSPI driver. It's a demonstration that how to use the interrupt in KSDK driver.1. LPSPI master send/received data to/from LPSPI slave in interrupt . (LPSPI Slave using interrupt to receive/send the data)" toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/lpspi" path="boards/mcimx93evk/driver_examples/lpspi/interrupt_b2b/slave">
          <external path="boards/mcimx93evk/driver_examples/lpspi/interrupt_b2b/slave" type="xml">
            <files mask="lpspi_interrupt_b2b_slave_v3_10.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_lpspi_interrupt_b2b_transfer_master" name="lpspi_interrupt_b2b_transfer_master" brief="The lpspi_interrupt_b2b_transfer example shows how to use LPSPI driver in interrupt way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'lpspi_interrupt_b2b_transfer_master.c' includes the LPSPI master code.This example uses the transactional API in LPSPI driver.1. LPSPI master send/received data to/from LPSPI slave in interrupt . (LPSPI Slave using interrupt to receive/send the data)" toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/lpspi" path="boards/mcimx93evk/driver_examples/lpspi/interrupt_b2b_transfer/master">
          <external path="boards/mcimx93evk/driver_examples/lpspi/interrupt_b2b_transfer/master" type="xml">
            <files mask="lpspi_interrupt_b2b_transfer_master_v3_10.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_lpspi_interrupt_b2b_transfer_slave" name="lpspi_interrupt_b2b_transfer_slave" brief="The lpspi_interrupt_b2b_transfer example shows how to use LPSPI driver in interrupt way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'lpspi_interrupt_b2b_transfer_slave.c' includes the LPSPI slave code.This example uses the transactional API in LPSPI driver.1. LPSPI master send/received data to/from LPSPI slave in interrupt . (LPSPI Slave using interrupt to receive/send the data)" toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/lpspi" path="boards/mcimx93evk/driver_examples/lpspi/interrupt_b2b_transfer/slave">
          <external path="boards/mcimx93evk/driver_examples/lpspi/interrupt_b2b_transfer/slave" type="xml">
            <files mask="lpspi_interrupt_b2b_transfer_slave_v3_10.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_lpspi_polling_b2b_transfer_master" name="lpspi_polling_b2b_transfer_master" brief="The lpspi_polling_b2b_transfer example shows how to use LPSPI driver in polling way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'lpspi_polling_b2b_transfer_master.c' includes the LPSPI master code.1. LPSPI master send/received data to/from LPSPI slave in polling . (LPSPI Slave using interrupt to receive/send the data)" toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/lpspi" path="boards/mcimx93evk/driver_examples/lpspi/polling_b2b_transfer/master">
          <external path="boards/mcimx93evk/driver_examples/lpspi/polling_b2b_transfer/master" type="xml">
            <files mask="lpspi_polling_b2b_transfer_master_v3_10.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_lpspi_polling_b2b_transfer_slave" name="lpspi_polling_b2b_transfer_slave" brief="The lpspi_polling_b2b_transfer example shows how to use LPSPI driver in polling way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'lpspi_polling_b2b_transfer_slave.c' includes the LPSPI slave code.1. LPSPI master send/received data to/from LPSPI slave in polling . (LPSPI Slave using interrupt to receive/send the data)" toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/lpspi" path="boards/mcimx93evk/driver_examples/lpspi/polling_b2b_transfer/slave">
          <external path="boards/mcimx93evk/driver_examples/lpspi/polling_b2b_transfer/slave" type="xml">
            <files mask="lpspi_polling_b2b_transfer_slave_v3_10.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_lptmr" name="lptmr" brief="The LPTMR project is a simple demonstration program of the SDK LPTMR driver. It sets up the LPTMRhardware block to trigger a periodic interrupt after every 1 second. When the LPTMR interrupt is triggereda message a printed on the UART terminal and an LED is toggled on the board." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/lptmr" path="boards/mcimx93evk/driver_examples/lptmr">
          <external path="boards/mcimx93evk/driver_examples/lptmr" type="xml">
            <files mask="lptmr_v3_10.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_lpuart_edma_transfer" name="lpuart_edma_transfer" brief="The lpuart_edma Example project is to demonstrate usage of the KSDK lpuart driver.In the example, you can send characters to the console back and they will be printed out onto console in a group of 8 characters." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/lpuart" path="boards/mcimx93evk/driver_examples/lpuart/edma_transfer">
          <external path="boards/mcimx93evk/driver_examples/lpuart/edma_transfer" type="xml">
            <files mask="lpuart_edma_transfer_v3_10.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_lpuart_interrupt" name="lpuart_interrupt" brief="The lpuart_functioncal_interrupt example shows how to use lpuart driver functionalAPI to receive data with interrupt method:In this example, one lpuart instance connect to PC, the board willsend back all characters that PC send to the board." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/lpuart" path="boards/mcimx93evk/driver_examples/lpuart/interrupt">
          <external path="boards/mcimx93evk/driver_examples/lpuart/interrupt" type="xml">
            <files mask="lpuart_interrupt_v3_10.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_lpuart_interrupt_rb_transfer" name="lpuart_interrupt_rb_transfer" brief="The lpuart_interrupt_ring_buffer Example project is to demonstrate usage of the KSDK lpuart driver.In the example, you can send characters to the console back and they will be printed out onto console in a group of 8 characters." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/lpuart" path="boards/mcimx93evk/driver_examples/lpuart/interrupt_rb_transfer">
          <external path="boards/mcimx93evk/driver_examples/lpuart/interrupt_rb_transfer" type="xml">
            <files mask="lpuart_interrupt_rb_transfer_v3_10.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_lpuart_interrupt_transfer" name="lpuart_interrupt_transfer" brief="The lpuart_interrupt Example project is to demonstrate usage of the KSDK lpuart driver.In the example, you can send characters to the console back and they will be printed out onto console in a group of 8 characters." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/lpuart" path="boards/mcimx93evk/driver_examples/lpuart/interrupt_transfer">
          <external path="boards/mcimx93evk/driver_examples/lpuart/interrupt_transfer" type="xml">
            <files mask="lpuart_interrupt_transfer_v3_10.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_lpuart_polling" name="lpuart_polling" brief="The lpuart_polling Example project is to demonstrate usage of the KSDK lpuart driver.In the example, you can send characters to the console back and they will be printed out onto console instantly." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/lpuart" path="boards/mcimx93evk/driver_examples/lpuart/polling">
          <external path="boards/mcimx93evk/driver_examples/lpuart/polling" type="xml">
            <files mask="lpuart_polling_v3_10.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_lwip_dhcp_bm" name="lwip_dhcp_bm" brief="The lwip_dhcp demo application demonstrates a DHCP demo on the lwIP TCP/IP stack.The application acts as a DHCP client and prints the status as it is progressing.Once the interface is being bound to an IP address obtained from DHCP server, address information is printed." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="lwip_examples" path="boards/mcimx93evk/lwip_examples/lwip_dhcp/bm">
          <external path="boards/mcimx93evk/lwip_examples/lwip_dhcp/bm" type="xml">
            <files mask="lwip_dhcp_bm_v3_10.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_lwip_dhcp_enet_qos_bm" name="lwip_dhcp_enet_qos_bm" brief="The lwip_dhcp demo application demonstrates a DHCP demo on the lwIP TCP/IP stack.The application acts as a DHCP client and prints the status as it is progressing.Once the interface is being bound to an IP address obtained from DHCP server, address information is printed." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="lwip_examples" path="boards/mcimx93evk/lwip_examples/lwip_dhcp_enet_qos/bm">
          <external path="boards/mcimx93evk/lwip_examples/lwip_dhcp_enet_qos/bm" type="xml">
            <files mask="lwip_dhcp_enet_qos_bm_v3_10.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_lwip_dhcp_enet_qos_freertos" name="lwip_dhcp_enet_qos_freertos" brief="The lwip_dhcp demo application demonstrates a DHCP demo on the lwIP TCP/IP stack.The application acts as a DHCP client and prints the status as it is progressing.Once the interface is being bound to an IP address obtained from DHCP server, address information is printed." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="lwip_examples" path="boards/mcimx93evk/lwip_examples/lwip_dhcp_enet_qos/freertos">
          <external path="boards/mcimx93evk/lwip_examples/lwip_dhcp_enet_qos/freertos" type="xml">
            <files mask="lwip_dhcp_enet_qos_freertos_v3_10.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_lwip_dhcp_freertos" name="lwip_dhcp_freertos" brief="The lwip_dhcp demo application demonstrates a DHCP demo on the lwIP TCP/IP stack.The application acts as a DHCP client and prints the status as it is progressing.Once the interface is being bound to an IP address obtained from DHCP server, address information is printed." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="lwip_examples" path="boards/mcimx93evk/lwip_examples/lwip_dhcp/freertos">
          <external path="boards/mcimx93evk/lwip_examples/lwip_dhcp/freertos" type="xml">
            <files mask="lwip_dhcp_freertos_v3_10.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_lwip_httpsrv_bm" name="lwip_httpsrv_bm" brief="The lwip_httpsrv demo application demonstrates an HTTPServer on the lwIP TCP/IP stack with bare metal SDK or FreeRTOS.The user uses an Internet browser to send a request for connection. The board acts as an HTTP server and sends a Webpage back to the PC." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="lwip_examples" path="boards/mcimx93evk/lwip_examples/lwip_httpsrv/bm">
          <external path="boards/mcimx93evk/lwip_examples/lwip_httpsrv/bm" type="xml">
            <files mask="lwip_httpsrv_bm_v3_10.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_lwip_httpsrv_enet_qos_bm" name="lwip_httpsrv_enet_qos_bm" brief="The lwip_httpsrv demo application demonstrates an HTTPServer on the lwIP TCP/IP stack with bare metal SDK or FreeRTOS.The user uses an Internet browser to send a request for connection. The board acts as an HTTP server and sends a Webpage back to the PC." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="lwip_examples" path="boards/mcimx93evk/lwip_examples/lwip_httpsrv_enet_qos/bm">
          <external path="boards/mcimx93evk/lwip_examples/lwip_httpsrv_enet_qos/bm" type="xml">
            <files mask="lwip_httpsrv_enet_qos_bm_v3_10.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_lwip_iperf_bm" name="lwip_iperf_bm" brief="This is the IPerf server example to check your bandwidth using the network performance measurement IPerf application on a PC as a client.It is currently a minimal implementation providing an IPv4 TCP server only.Instead of the command line IPerf application, for more convenience, it is recommended to use the JPerf2 graphical tool, which can be downloaded here: https://sourceforge.net/projects/iperf/files/jperf/jperf%202.0.0/jperf-2.0.0.zip/download" toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="lwip_examples" path="boards/mcimx93evk/lwip_examples/lwip_iperf/bm">
          <external path="boards/mcimx93evk/lwip_examples/lwip_iperf/bm" type="xml">
            <files mask="lwip_iperf_bm_v3_10.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_lwip_iperf_enet_qos_bm" name="lwip_iperf_enet_qos_bm" brief="This is the IPerf server example to check your bandwidth using the network performance measurement IPerf application on a PC as a client.It is currently a minimal implementation providing an IPv4 TCP server only.Instead of the command line IPerf application, for more convenience, it is recommended to use the JPerf2 graphical tool, which can be downloaded here: https://sourceforge.net/projects/iperf/files/jperf/jperf%202.0.0/jperf-2.0.0.zip/download" toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="lwip_examples" path="boards/mcimx93evk/lwip_examples/lwip_iperf_enet_qos/bm">
          <external path="boards/mcimx93evk/lwip_examples/lwip_iperf_enet_qos/bm" type="xml">
            <files mask="lwip_iperf_enet_qos_bm_v3_10.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_lwip_ping_bm" name="lwip_ping_bm" brief="The lwip_ping demo application demonstrates a Ping Demo on the lwIP TCP/IP stack, which uses the ICMP protocol. Theapplication periodically sends the ICMP echo request to a PC, and processes the PC reply. Type &quot;ping $board_address&quot;in the PC command window to send an ICMP echo request to the board. The lwIP stack sends the ICMP echo reply back to thePC." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="lwip_examples" path="boards/mcimx93evk/lwip_examples/lwip_ping/bm">
          <external path="boards/mcimx93evk/lwip_examples/lwip_ping/bm" type="xml">
            <files mask="lwip_ping_bm_v3_10.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_lwip_ping_enet_qos_bm" name="lwip_ping_enet_qos_bm" brief="The lwip_ping_enet_qos demo application demonstrates a Ping Demo on the lwIP TCP/IP stack, which uses the ICMP protocol. Theapplication periodically sends the ICMP echo request to a PC, and processes the PC reply. Type &quot;ping $board_address&quot;in the PC command window to send an ICMP echo request to the board. The lwIP stack sends the ICMP echo reply back to thePC." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="lwip_examples" path="boards/mcimx93evk/lwip_examples/lwip_ping_enet_qos/bm">
          <external path="boards/mcimx93evk/lwip_examples/lwip_ping_enet_qos/bm" type="xml">
            <files mask="lwip_ping_enet_qos_bm_v3_10.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_lwip_ping_enet_qos_freertos" name="lwip_ping_enet_qos_freertos" brief="The lwip_ping demo application demonstrates a Ping Demo on the lwIP TCP/IP stack which using the ICMP protocol. Theapplication periodically sends the ICMP echo request to a PC and processes the PC reply. Type the &quot;ping $board_address&quot;in the PC command window to send an ICMP echo request to the board. The lwIP stack sends the ICMP echo reply back to thePC." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="lwip_examples" path="boards/mcimx93evk/lwip_examples/lwip_ping_enet_qos/freertos">
          <external path="boards/mcimx93evk/lwip_examples/lwip_ping_enet_qos/freertos" type="xml">
            <files mask="lwip_ping_enet_qos_freertos_v3_10.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_lwip_ping_freertos" name="lwip_ping_freertos" brief="The lwip_ping demo application demonstrates a Ping Demo on the lwIP TCP/IP stack which using the ICMP protocol. Theapplication periodically sends the ICMP echo request to a PC and processes the PC reply. Type the &quot;ping $board_address&quot;in the PC command window to send an ICMP echo request to the board. The lwIP stack sends the ICMP echo reply back to thePC." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="lwip_examples" path="boards/mcimx93evk/lwip_examples/lwip_ping/freertos">
          <external path="boards/mcimx93evk/lwip_examples/lwip_ping/freertos" type="xml">
            <files mask="lwip_ping_freertos_v3_10.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_pdm_edma_transfer" name="pdm_edma_transfer" brief="pdm_edma_transfer" toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/pdm" path="boards/mcimx93evk/driver_examples/pdm/pdm_edma_transfer">
          <external path="boards/mcimx93evk/driver_examples/pdm/pdm_edma_transfer" type="xml">
            <files mask="pdm_edma_transfer_v3_10.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_pdm_hwvad" name="pdm_hwvad" brief="The pdm_hwvad example shows how to use pdm driver with interrupt:In this example, one pdm instance playbacks the audio data stored in flash using interrupt." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/pdm" path="boards/mcimx93evk/driver_examples/pdm/pdm_hwvad">
          <external path="boards/mcimx93evk/driver_examples/pdm/pdm_hwvad" type="xml">
            <files mask="pdm_hwvad_v3_10.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_pdm_interrupt" name="pdm_interrupt" brief="The pdm_interrupt example shows how to use pdm driver with interrupt:In this example, one pdm instance playbacks the audio data stored in flash using interrupt." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/pdm" path="boards/mcimx93evk/driver_examples/pdm/pdm_interrupt">
          <external path="boards/mcimx93evk/driver_examples/pdm/pdm_interrupt" type="xml">
            <files mask="pdm_interrupt_v3_10.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_power_mode_switch" name="power_mode_switch" brief="The Power mode switch demo application demonstrates the use of power modes in the KSDK. The demo prints the power mode menuthrough the debug console, where the user can set the MCU to a specific power mode. The user can also set the wakeupsource by following the debug console prompts. The purpose of this demo is to show how to switch between different power modes, and how to configure a wakeup source and wakeup the MCU from low power modes. Tips: This demo is to show how the various power mode can switch to each other. However, in actual low power use case, to save energy and reduce the consumption even more, many things can be done including: - Disable the clock for unnecessary module during low power mode. That means, programmer can disable the clocks before entering the low power mode and re-enable them after exiting the low power mode when necessary. - Disable the function for unnecessary part of a module when other part would keep working in low power mode. At the most time, more powerful function means more power consumption. For example, disable the digital function for the unnecessary pin mux, and so on. - Set the proper pin state (direction and logic level) according to the actual application hardware. Otherwise, the pin cirrent would be activied unexpectedly waste some energy. - Other low power consideration based on the actual application hardware. - Debug pins(e.g SWD_DIO) would consume addtional power, had better to disable related pins or disconnect them. " toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="demo_apps" path="boards/mcimx93evk/demo_apps/power_mode_switch">
          <external path="boards/mcimx93evk/demo_apps/power_mode_switch" type="xml">
            <files mask="power_mode_switch_v3_10.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_rgpio_led_output" name="rgpio_led_output" brief="The RGPIO Example project is a demonstration program that uses the SDK software to manipulate the general-purposeoutputs.The example is supported by the set, clear, and toggle write-only registers for each port output data register. The example take turns to shine the LED." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/rgpio" path="boards/mcimx93evk/driver_examples/rgpio/led_output">
          <external path="boards/mcimx93evk/driver_examples/rgpio/led_output" type="xml">
            <files mask="rgpio_led_output_v3_10.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_rpmsg_lite_pingpong_rtos_linux_remote" name="rpmsg_lite_pingpong_rtos_linux_remote" brief="The Multicore RPMsg-Lite pingpong RTOS project is a simple demonstration program that uses theMCUXpresso SDK software and the RPMsg-Lite library and shows how to implement the inter-corecommunicaton between cores of the multicore system. The primary core releases the secondary corefrom the reset and then the inter-core communication is established. Once the RPMsg is initializedand endpoints are created the message exchange starts, incrementing a virtual counter that is partof the message payload. The message pingpong finishes when the counter reaches the value of 100.Then the RPMsg-Lite is deinitialized and the procedure of the data exchange is repeated again.Shared memory usageThis multicore example uses the shared memory for data exchange. The shared memory region isdefined and the size can be adjustable in the linker file. The shared memory region start addressand the size have to be defined in linker file for each core equally. The shared memory startaddress is then exported from the linker to the application." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="multicore_examples" path="boards/mcimx93evk/multicore_examples/rpmsg_lite_pingpong_rtos/linux_remote">
          <external path="boards/mcimx93evk/multicore_examples/rpmsg_lite_pingpong_rtos/linux_remote" type="xml">
            <files mask="rpmsg_lite_pingpong_rtos_linux_remote_v3_10.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_rpmsg_lite_str_echo_rtos_imxcm33" name="rpmsg_lite_str_echo_rtos_imxcm33" brief="The Multicore RPMsg-Lite string echo project is a simple demonstration program that uses the MCUXpresso SDK software and the RPMsg-Lite library and shows how to implement the inter-corecommunicaton between cores of the multicore system.It works with Linux RPMsg master peer to transfer string content back and forth. The name servicehandshake is performed first to create the communication channels. Next, Linux OS waits for userinput to the RPMsg virtual tty. Anything which is received is sent to M33. M33 displays what is received, and echoes back the same message as an acknowledgement. The tty reader on the Linux side can get the message, and start another transaction. The demo demonstrates RPMsg’s ability to send arbitrary content back and forth. Note: The maximum message length supported by RPMsg is now 496 bytes. String longer than 496 will be divided by virtual tty into several messages.Shared memory usage:this multicore example uses the shared memory for data exchange. The shared memory region is defined and the size can be adjustable in the linker file. The shared memory region start address and the size have to be defined in linker file for each core equally. The shared memory start address is then exported from the linker to the application." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="multicore_examples" path="boards/mcimx93evk/multicore_examples/rpmsg_lite_str_echo_rtos">
          <external path="boards/mcimx93evk/multicore_examples/rpmsg_lite_str_echo_rtos" type="xml">
            <files mask="rpmsg_lite_str_echo_rtos_imxcm33_v3_10.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_sai_edma_transfer" name="sai_edma_transfer" brief="The sai_edma_transfer example shows how to use sai driver with EDMA:In this example, one sai instance playbacks the audio data stored in flash/SRAM using EDMA channel." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/sai" path="boards/mcimx93evk/driver_examples/sai/edma_transfer">
          <external path="boards/mcimx93evk/driver_examples/sai/edma_transfer" type="xml">
            <files mask="sai_edma_transfer_v3_10.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_sai_interrupt" name="sai_interrupt" brief="The sai_interrupt example shows how to use sai functional API to implement interrupt playback:In this example, one sai instance playbacks the audio data stored in flash/SRAM using interrupt." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/sai" path="boards/mcimx93evk/driver_examples/sai/interrupt">
          <external path="boards/mcimx93evk/driver_examples/sai/interrupt" type="xml">
            <files mask="sai_interrupt_v3_10.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_sai_interrupt_transfer" name="sai_interrupt_transfer" brief="The sai_interrupt_transfer example shows how to use sai driver with interrupt:In this example, one sai instance playbacks the audio data stored in flash/SRAM using interrupt." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/sai" path="boards/mcimx93evk/driver_examples/sai/interrupt_transfer">
          <external path="boards/mcimx93evk/driver_examples/sai/interrupt_transfer" type="xml">
            <files mask="sai_interrupt_transfer_v3_10.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_secure_faults_trdc_ns" name="secure_faults_trdc_ns" brief="The Hello World demo application provides a sanity check for the new SDK build environments and board bring up. This demo application also utilizes TrustZone, so it demonstrates basic techniques for TrustZone applications development. This is non-secure part of the application." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="trustzone_examples" linked_projects="mcimx93evk_secure_faults_trdc_s" path="boards/mcimx93evk/trustzone_examples/secure_faults_trdc/secure_faults_trdc_ns">
          <external path="boards/mcimx93evk/trustzone_examples/secure_faults_trdc/secure_faults_trdc_ns" type="xml">
            <files mask="secure_faults_trdc_ns_v3_10.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_secure_faults_trdc_s" name="secure_faults_trdc_s" brief="The Hello World demo application provides a sanity check for the new SDK build environments and board bring up. This demo application also utilizes TrustZone, so it demonstrates basic techniques for TrustZone applications development. This is secure part of the application." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="trustzone_examples" linked_projects="mcimx93evk_secure_faults_trdc_ns" path="boards/mcimx93evk/trustzone_examples/secure_faults_trdc/secure_faults_trdc_s">
          <external path="boards/mcimx93evk/trustzone_examples/secure_faults_trdc/secure_faults_trdc_s" type="xml">
            <files mask="secure_faults_trdc_s_v3_10.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_tmu_monitor_report" name="tmu_monitor_report" brief="The TMU example shows how to configure TMU register to monitor and report the temperature from one remote temperature measurement sites located on the chip.TMU has access to temperature measurement site strategically located on thechip. It monitors the site and can signal an alarm if a programmed threshold is everexceeded.Note: Before monitoring the temperature, we must programming the calibration table." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/tmu" path="boards/mcimx93evk/driver_examples/tmu/tmu_monitor_report">
          <external path="boards/mcimx93evk/driver_examples/tmu/tmu_monitor_report" type="xml">
            <files mask="tmu_monitor_report_v3_10.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_tpm_combine_pwm" name="tpm_combine_pwm" brief="The TPM project is a demonstration program of generating a combined PWM signal by the SDK TPM driver. It sets up the TPMhardware block to output PWM signals on two TPM channels. The example also show's the complementary mode of operationand deadtime insertion.On boards that have 2 LEDs connected to the TPM pins, the user will seea change in LED brightness if user enter different values.And if the board do not support LEDs to show, the outputs can be observed by oscilloscope." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/tpm" path="boards/mcimx93evk/driver_examples/tpm/combine_pwm">
          <external path="boards/mcimx93evk/driver_examples/tpm/combine_pwm" type="xml">
            <files mask="tpm_combine_pwm_v3_10.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_tpm_dual_edge_capture" name="tpm_dual_edge_capture" brief="The TPM project is a demonstration program of the SDK TPM driver's dual-edge capture feature.This feature is available only on certain SoC's.The example sets up a TPM channel-pair for dual-edge capture. Once the input signal is received,this example will print the capture values and period of the input signal on the terminal window." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/tpm" path="boards/mcimx93evk/driver_examples/tpm/dual_edge_capture">
          <external path="boards/mcimx93evk/driver_examples/tpm/dual_edge_capture" type="xml">
            <files mask="tpm_dual_edge_capture_v3_10.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_tpm_input_capture" name="tpm_input_capture" brief="The TPM project is a demonstration program of the SDK TPM driver's input capture feature.The example sets up a TPM channel for dual-edge capture. Once the input signal is received,this example will print the capture value." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/tpm" path="boards/mcimx93evk/driver_examples/tpm/input_capture">
          <external path="boards/mcimx93evk/driver_examples/tpm/input_capture" type="xml">
            <files mask="tpm_input_capture_v3_10.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_tpm_output_compare" name="tpm_output_compare" brief="The TPM project is a demonstration program of the SDK TPM driver's output compare feature.It sets up one TPM channel to toggle the output when a match occurs with the channel value. The usershould probe the TPM output with a oscilloscope to see the signal toggling." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/tpm" path="boards/mcimx93evk/driver_examples/tpm/output_compare">
          <external path="boards/mcimx93evk/driver_examples/tpm/output_compare" type="xml">
            <files mask="tpm_output_compare_v3_10.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_tpm_pwm_twochannel" name="tpm_pwm_twochannel" brief="The TPM project is a simple demonstration program of the SDK TPM driver. It sets up the TPMhardware block to output PWM signals on two TPM channels. The PWM dutycycle on both channelsis manually updated. On boards that have an LED connected to the TPM pins, the user will seea change in LED brightness if user enter different values." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/tpm" path="boards/mcimx93evk/driver_examples/tpm/pwm_twochannel">
          <external path="boards/mcimx93evk/driver_examples/tpm/pwm_twochannel" type="xml">
            <files mask="tpm_pwm_twochannel_v3_10.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_tpm_simple_pwm" name="tpm_simple_pwm" brief="The TPM project is a simple demonstration program of the SDK TPM driver. It sets up the TPMhardware block to output a center-aligned PWM signal. The PWM dutycycle is manually updated.On boards that have an LED connected to the TPM pins, the user will see a change in LEDbrightness if user enter different values." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/tpm" path="boards/mcimx93evk/driver_examples/tpm/simple_pwm">
          <external path="boards/mcimx93evk/driver_examples/tpm/simple_pwm" type="xml">
            <files mask="tpm_simple_pwm_v3_10.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_tpm_timer" name="tpm_timer" brief="The TPM project is a simple demonstration program of the SDK TPM driver to use TPM as a timer.It sets up the TPM hardware block to trigger an interrupt every 1 millisecond.When the TPM interrupt is triggered a message a printed on the UART terminal." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/tpm" path="boards/mcimx93evk/driver_examples/tpm/timer">
          <external path="boards/mcimx93evk/driver_examples/tpm/timer" type="xml">
            <files mask="tpm_timer_v3_10.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_trdc" name="trdc" brief="The trdc example shows how to control the memory block checker(MBC) and memory region checker(MRC) access policy using TRDC. In this example, a MRC memory region and a MBC memory block are set to unaccessible, then the hardfault occurs." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/trdc" path="boards/mcimx93evk/driver_examples/trdc">
          <external path="boards/mcimx93evk/driver_examples/trdc" type="xml">
            <files mask="trdc_v3_10.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_tstmr" name="tstmr" brief="The tstmr example shows the usage of TSTMR driver in application. The TSTMR module is a free running incrementing counter that starts running after system reset de-assertion and can be read at any time by the software for determining the software ticks.The TSTMR runs off the 1 MHz clock and resets on every system reset.In this example, it would output a time stamp information when the application is ready. And then, delay for 1 second with TSTMR_DelayUs() function. Before and after the delay, it would output the two time stamps information again." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/tstmr" path="boards/mcimx93evk/driver_examples/tstmr">
          <external path="boards/mcimx93evk/driver_examples/tstmr" type="xml">
            <files mask="tstmr_v3_10.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_wdog32" name="wdog32" brief="The WDOG32 Example project is to demonstrate usage of the KSDK wdog32 driver.In this example, fast testing is first implemented to test the wdog32.After this, refreshing the watchdog in None-window mode and window mode is executed.Note wdog32 is disabled in SystemInit function which means wdog32 is disabledafter chip emerges from reset." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/wdog32" path="boards/mcimx93evk/driver_examples/wdog32">
          <external path="boards/mcimx93evk/driver_examples/wdog32" type="xml">
            <files mask="wdog32_v3_10.xml"/>
          </external>
        </example>
      </examples>
    </board>
  </boards>
  <devices>
    <device id="MIMX9352xxxxM" name="MIMX9352" version="1.0.0" full_name="MIMX9352xxxxM" family="MIMX93xx" platform="i.MX">
      <description>i.MX93</description>
      <metadataSet>
        <metadata key="vendor" value="NXP"/>
        <metadata key="compatible_device.segger" value="MIMX9352_M33"/>
        <metadata key="compatible_device.pemicro" value="MIMX9352"/>
      </metadataSet>
      <core id="cm33_MIMX9352xxxxM" name="cm33" fpu="true" type="cm33" dsp="true"/>
      <memory>
        <memoryBlock id="SRAM_UPPER_MIMX9352xxxxM" name="SRAM_UPPER" addr="20000000" size="00020000" type="RAM" access="RW"/>
        <memoryBlock id="SRAM_LOWER_MIMX9352xxxxM" name="SRAM_LOWER" addr="0ffe0000" size="00020000" type="RAM" access="RW"/>
      </memory>
      <total_memory flash_size_kb="0" ram_size_kb="256"/>
      <package id="MIMX9352DVUXM" name="MIMX9352DVUXM"/>
      <package id="MIMX9352AVTXM" name="MIMX9352AVTXM"/>
      <evaluation_boards>
        <evaluation_board name="mcimx93evk"/>
      </evaluation_boards>
      <debug_configurations>
        <debug_configuration id_refs="com.crt.advproject.config.exe.debug com.crt.advproject.config.exe.release">
          <params>
            <params id="internal.wiretype.release.MIMX9352xxxxM" name="internal.wiretype" value="SWD"/>
            <params id="internal.has_swo.release.MIMX9352xxxxM" name="internal.has_swo" value="true"/>
          </params>
        </debug_configuration>
      </debug_configurations>
      <linkerSettings nature="c_nature">
        <linker property="start_symbol" value="ResetISR"/>
        <linker property="text_align" value="4"/>
        <linker property="data_align" value="4"/>
        <linker property="bss_align" value="4"/>
        <linker property="mtb_supported" value="false"/>
      </linkerSettings>
      <linkerSettings nature="cpp_nature">
        <linker property="start_symbol" value="ResetISR"/>
        <linker property="text_align" value="4"/>
        <linker property="data_align" value="4"/>
        <linker property="bss_align" value="4"/>
        <linker property="mtb_supported" value="false"/>
      </linkerSettings>
    </device>
  </devices>
  <components>
    <component id="project_template.mcimx93evk.MIMX9352" name="mcimx93evk" brief="Board_project_template mcimx93evk" version="1.0.0" full_name="Board_project_template mcimx93evk" devices="MIMX9352xxxxM" device_cores="cm33_MIMX9352xxxxM" category="Board Support/SDK Project Template" user_visible="true" type="project_template" package_base_path="boards/mcimx93evk/project_template" project_base_path="board">
      <defines>
        <define name="FSL_SDK_DRIVER_QUICK_ACCESS_ENABLE" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.lpuart_adapter.MIMX9352"/>
          <component_dependency value="platform.devices.MIMX9352_startup.MIMX9352"/>
          <component_dependency value="platform.drivers.cache_xcache.MIMX9352"/>
          <component_dependency value="platform.drivers.clock.MIMX9352"/>
          <component_dependency value="platform.drivers.common.MIMX9352"/>
          <component_dependency value="platform.drivers.iomuxc.MIMX9352"/>
          <component_dependency value="platform.drivers.lpuart.MIMX9352"/>
          <component_dependency value="platform.drivers.rgpio.MIMX9352"/>
          <any_of>
            <all>
              <component_dependency value="component.serial_manager.MIMX9352"/>
              <component_dependency value="platform.utilities.assert.MIMX9352"/>
              <component_dependency value="utility.debug_console.MIMX9352"/>
            </all>
            <all>
              <component_dependency value="platform.utilities.assert_lite.MIMX9352"/>
              <component_dependency value="utility.debug_console_lite.MIMX9352"/>
            </all>
          </any_of>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="board.h"/>
        <files mask="clock_config.h"/>
        <files mask="pin_mux.h"/>
        <files mask="peripherals.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="board.c"/>
        <files mask="clock_config.c"/>
        <files mask="pin_mux.c"/>
        <files mask="peripherals.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_DSP_Include.MIMX9352" name="CMSIS_DSP_Library_Header" brief="CMSIS-DSP Library Header" version="1.9.0" full_name="CMSIS DSP Library Header" devices="MIMX9352xxxxM" user_visible="true" type="CMSIS_driver" package_base_path="CMSIS/DSP" project_base_path="CMSIS/DSP">
      <source exclude="true" relative_path="./" type="other">
        <files mask="README.md" hidden="true"/>
      </source>
      <source relative_path="Include" type="c_include">
        <files mask="arm_common_tables.h"/>
        <files mask="arm_const_structs.h"/>
        <files mask="arm_math.h"/>
        <files mask="arm_common_tables_f16.h"/>
        <files mask="arm_const_structs_f16.h"/>
        <files mask="arm_helium_utils.h"/>
        <files mask="arm_math_f16.h"/>
        <files mask="arm_math_memory.h"/>
        <files mask="arm_math_types.h"/>
        <files mask="arm_math_types_f16.h"/>
        <files mask="arm_mve_tables.h"/>
        <files mask="arm_mve_tables_f16.h"/>
        <files mask="arm_vec_math.h"/>
        <files mask="arm_vec_math_f16.h"/>
      </source>
      <source relative_path="Include/dsp" type="c_include">
        <files mask="basic_math_functions.h"/>
        <files mask="basic_math_functions_f16.h"/>
        <files mask="bayes_functions.h"/>
        <files mask="bayes_functions_f16.h"/>
        <files mask="complex_math_functions.h"/>
        <files mask="complex_math_functions_f16.h"/>
        <files mask="controller_functions.h"/>
        <files mask="controller_functions_f16.h"/>
        <files mask="distance_functions.h"/>
        <files mask="distance_functions_f16.h"/>
        <files mask="fast_math_functions.h"/>
        <files mask="fast_math_functions_f16.h"/>
        <files mask="filtering_functions.h"/>
        <files mask="filtering_functions_f16.h"/>
        <files mask="interpolation_functions.h"/>
        <files mask="interpolation_functions_f16.h"/>
        <files mask="matrix_functions.h"/>
        <files mask="matrix_functions_f16.h"/>
        <files mask="none.h"/>
        <files mask="quaternion_math_functions.h"/>
        <files mask="statistics_functions.h"/>
        <files mask="statistics_functions_f16.h"/>
        <files mask="support_functions.h"/>
        <files mask="support_functions_f16.h"/>
        <files mask="svm_defines.h"/>
        <files mask="svm_functions.h"/>
        <files mask="svm_functions_f16.h"/>
        <files mask="transform_functions.h"/>
        <files mask="transform_functions_f16.h"/>
        <files mask="utils.h"/>
      </source>
      <source relative_path="PrivateInclude" type="c_include">
        <files mask="arm_sorting.h"/>
        <files mask="arm_vec_fft.h"/>
        <files mask="arm_vec_filtering.h"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
        <include_path relative_path="PrivateInclude" type="c_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_DSP_Source.MIMX9352" name="CMSIS_DSP_Library_Source" brief="CMSIS-DSP Library" version="1.9.0" full_name="CMSIS DSP Library Source" devices="MIMX9352xxxxM" user_visible="true" type="CMSIS_driver" package_base_path="CMSIS/DSP" project_base_path="CMSIS/DSP">
      <source exclude="true" relative_path="./" type="other">
        <files mask="README.md" hidden="true"/>
      </source>
      <source relative_path="Include" type="c_include">
        <files mask="arm_common_tables.h"/>
        <files mask="arm_const_structs.h"/>
        <files mask="arm_math.h"/>
        <files mask="arm_common_tables_f16.h"/>
        <files mask="arm_const_structs_f16.h"/>
        <files mask="arm_helium_utils.h"/>
        <files mask="arm_math_f16.h"/>
        <files mask="arm_math_memory.h"/>
        <files mask="arm_math_types.h"/>
        <files mask="arm_math_types_f16.h"/>
        <files mask="arm_mve_tables.h"/>
        <files mask="arm_mve_tables_f16.h"/>
        <files mask="arm_vec_math.h"/>
        <files mask="arm_vec_math_f16.h"/>
      </source>
      <source relative_path="Include/dsp" type="c_include">
        <files mask="basic_math_functions.h"/>
        <files mask="basic_math_functions_f16.h"/>
        <files mask="bayes_functions.h"/>
        <files mask="bayes_functions_f16.h"/>
        <files mask="complex_math_functions.h"/>
        <files mask="complex_math_functions_f16.h"/>
        <files mask="controller_functions.h"/>
        <files mask="controller_functions_f16.h"/>
        <files mask="distance_functions.h"/>
        <files mask="distance_functions_f16.h"/>
        <files mask="fast_math_functions.h"/>
        <files mask="fast_math_functions_f16.h"/>
        <files mask="filtering_functions.h"/>
        <files mask="filtering_functions_f16.h"/>
        <files mask="interpolation_functions.h"/>
        <files mask="interpolation_functions_f16.h"/>
        <files mask="matrix_functions.h"/>
        <files mask="matrix_functions_f16.h"/>
        <files mask="none.h"/>
        <files mask="quaternion_math_functions.h"/>
        <files mask="statistics_functions.h"/>
        <files mask="statistics_functions_f16.h"/>
        <files mask="support_functions.h"/>
        <files mask="support_functions_f16.h"/>
        <files mask="svm_defines.h"/>
        <files mask="svm_functions.h"/>
        <files mask="svm_functions_f16.h"/>
        <files mask="transform_functions.h"/>
        <files mask="transform_functions_f16.h"/>
        <files mask="utils.h"/>
      </source>
      <source relative_path="PrivateInclude" type="c_include">
        <files mask="arm_sorting.h"/>
        <files mask="arm_vec_fft.h"/>
        <files mask="arm_vec_filtering.h"/>
      </source>
      <source relative_path="Source/BasicMathFunctions" type="src">
        <files mask="BasicMathFunctions.c"/>
        <files mask="BasicMathFunctionsF16.c"/>
      </source>
      <source exclude="true" relative_path="Source/BasicMathFunctions" type="src">
        <files mask="arm_abs_f32.c" hidden="true"/>
        <files mask="arm_abs_q15.c" hidden="true"/>
        <files mask="arm_abs_q31.c" hidden="true"/>
        <files mask="arm_abs_q7.c" hidden="true"/>
        <files mask="arm_add_f32.c" hidden="true"/>
        <files mask="arm_add_q15.c" hidden="true"/>
        <files mask="arm_add_q31.c" hidden="true"/>
        <files mask="arm_add_q7.c" hidden="true"/>
        <files mask="arm_and_u16.c" hidden="true"/>
        <files mask="arm_and_u32.c" hidden="true"/>
        <files mask="arm_and_u8.c" hidden="true"/>
        <files mask="arm_clip_f32.c" hidden="true"/>
        <files mask="arm_clip_q15.c" hidden="true"/>
        <files mask="arm_clip_q31.c" hidden="true"/>
        <files mask="arm_clip_q7.c" hidden="true"/>
        <files mask="arm_dot_prod_f32.c" hidden="true"/>
        <files mask="arm_dot_prod_q15.c" hidden="true"/>
        <files mask="arm_dot_prod_q31.c" hidden="true"/>
        <files mask="arm_dot_prod_q7.c" hidden="true"/>
        <files mask="arm_mult_f32.c" hidden="true"/>
        <files mask="arm_mult_q15.c" hidden="true"/>
        <files mask="arm_mult_q31.c" hidden="true"/>
        <files mask="arm_mult_q7.c" hidden="true"/>
        <files mask="arm_negate_f32.c" hidden="true"/>
        <files mask="arm_negate_q15.c" hidden="true"/>
        <files mask="arm_negate_q31.c" hidden="true"/>
        <files mask="arm_negate_q7.c" hidden="true"/>
        <files mask="arm_not_u16.c" hidden="true"/>
        <files mask="arm_not_u32.c" hidden="true"/>
        <files mask="arm_not_u8.c" hidden="true"/>
        <files mask="arm_offset_f32.c" hidden="true"/>
        <files mask="arm_offset_q15.c" hidden="true"/>
        <files mask="arm_offset_q31.c" hidden="true"/>
        <files mask="arm_offset_q7.c" hidden="true"/>
        <files mask="arm_or_u16.c" hidden="true"/>
        <files mask="arm_or_u32.c" hidden="true"/>
        <files mask="arm_or_u8.c" hidden="true"/>
        <files mask="arm_scale_f32.c" hidden="true"/>
        <files mask="arm_scale_q15.c" hidden="true"/>
        <files mask="arm_scale_q31.c" hidden="true"/>
        <files mask="arm_scale_q7.c" hidden="true"/>
        <files mask="arm_shift_q15.c" hidden="true"/>
        <files mask="arm_shift_q31.c" hidden="true"/>
        <files mask="arm_shift_q7.c" hidden="true"/>
        <files mask="arm_sub_f32.c" hidden="true"/>
        <files mask="arm_sub_q15.c" hidden="true"/>
        <files mask="arm_sub_q31.c" hidden="true"/>
        <files mask="arm_sub_q7.c" hidden="true"/>
        <files mask="arm_xor_u16.c" hidden="true"/>
        <files mask="arm_xor_u32.c" hidden="true"/>
        <files mask="arm_xor_u8.c" hidden="true"/>
        <files mask="arm_abs_f16.c" hidden="true"/>
        <files mask="arm_add_f16.c" hidden="true"/>
        <files mask="arm_clip_f16.c" hidden="true"/>
        <files mask="arm_dot_prod_f16.c" hidden="true"/>
        <files mask="arm_mult_f16.c" hidden="true"/>
        <files mask="arm_negate_f16.c" hidden="true"/>
        <files mask="arm_offset_f16.c" hidden="true"/>
        <files mask="arm_scale_f16.c" hidden="true"/>
        <files mask="arm_sub_f16.c" hidden="true"/>
      </source>
      <source relative_path="Source/BayesFunctions" type="src">
        <files mask="BayesFunctions.c"/>
        <files mask="BayesFunctionsF16.c"/>
      </source>
      <source exclude="true" relative_path="Source/BayesFunctions" type="src">
        <files mask="arm_gaussian_naive_bayes_predict_f32.c" hidden="true"/>
        <files mask="arm_gaussian_naive_bayes_predict_f16.c" hidden="true"/>
      </source>
      <source relative_path="Source/CommonTables" type="src">
        <files mask="CommonTables.c"/>
        <files mask="CommonTablesF16.c"/>
      </source>
      <source exclude="true" relative_path="Source/CommonTables" type="src">
        <files mask="arm_common_tables.c" hidden="true"/>
        <files mask="arm_const_structs.c" hidden="true"/>
        <files mask="arm_mve_tables.c" hidden="true"/>
        <files mask="arm_common_tables_f16.c" hidden="true"/>
        <files mask="arm_const_structs_f16.c" hidden="true"/>
        <files mask="arm_mve_tables_f16.c" hidden="true"/>
      </source>
      <source relative_path="Source/ComplexMathFunctions" type="src">
        <files mask="ComplexMathFunctions.c"/>
        <files mask="ComplexMathFunctionsF16.c"/>
      </source>
      <source exclude="true" relative_path="Source/ComplexMathFunctions" type="src">
        <files mask="arm_cmplx_conj_f32.c" hidden="true"/>
        <files mask="arm_cmplx_conj_q15.c" hidden="true"/>
        <files mask="arm_cmplx_conj_q31.c" hidden="true"/>
        <files mask="arm_cmplx_dot_prod_f32.c" hidden="true"/>
        <files mask="arm_cmplx_dot_prod_q15.c" hidden="true"/>
        <files mask="arm_cmplx_dot_prod_q31.c" hidden="true"/>
        <files mask="arm_cmplx_mag_f32.c" hidden="true"/>
        <files mask="arm_cmplx_mag_q15.c" hidden="true"/>
        <files mask="arm_cmplx_mag_q31.c" hidden="true"/>
        <files mask="arm_cmplx_mag_squared_f32.c" hidden="true"/>
        <files mask="arm_cmplx_mag_squared_q15.c" hidden="true"/>
        <files mask="arm_cmplx_mag_squared_q31.c" hidden="true"/>
        <files mask="arm_cmplx_mult_cmplx_f32.c" hidden="true"/>
        <files mask="arm_cmplx_mult_cmplx_q15.c" hidden="true"/>
        <files mask="arm_cmplx_mult_cmplx_q31.c" hidden="true"/>
        <files mask="arm_cmplx_mult_real_f32.c" hidden="true"/>
        <files mask="arm_cmplx_mult_real_q15.c" hidden="true"/>
        <files mask="arm_cmplx_mult_real_q31.c" hidden="true"/>
        <files mask="arm_cmplx_conj_f16.c" hidden="true"/>
        <files mask="arm_cmplx_dot_prod_f16.c" hidden="true"/>
        <files mask="arm_cmplx_mag_f16.c" hidden="true"/>
        <files mask="arm_cmplx_mag_squared_f16.c" hidden="true"/>
        <files mask="arm_cmplx_mult_cmplx_f16.c" hidden="true"/>
        <files mask="arm_cmplx_mult_real_f16.c" hidden="true"/>
      </source>
      <source relative_path="Source/ControllerFunctions" type="src">
        <files mask="ControllerFunctions.c"/>
      </source>
      <source exclude="true" relative_path="Source/ControllerFunctions" type="src">
        <files mask="arm_pid_init_f32.c" hidden="true"/>
        <files mask="arm_pid_init_q15.c" hidden="true"/>
        <files mask="arm_pid_init_q31.c" hidden="true"/>
        <files mask="arm_pid_reset_f32.c" hidden="true"/>
        <files mask="arm_pid_reset_q15.c" hidden="true"/>
        <files mask="arm_pid_reset_q31.c" hidden="true"/>
        <files mask="arm_sin_cos_f32.c" hidden="true"/>
        <files mask="arm_sin_cos_q31.c" hidden="true"/>
      </source>
      <source relative_path="Source/DistanceFunctions" type="src">
        <files mask="DistanceFunctions.c"/>
        <files mask="DistanceFunctionsF16.c"/>
      </source>
      <source relative_path="Source/DistanceFunctions" type="c_include">
        <files mask="arm_boolean_distance_template.h"/>
      </source>
      <source exclude="true" relative_path="Source/DistanceFunctions" type="src">
        <files mask="arm_boolean_distance.c" hidden="true"/>
        <files mask="arm_braycurtis_distance_f32.c" hidden="true"/>
        <files mask="arm_canberra_distance_f32.c" hidden="true"/>
        <files mask="arm_chebyshev_distance_f32.c" hidden="true"/>
        <files mask="arm_cityblock_distance_f32.c" hidden="true"/>
        <files mask="arm_correlation_distance_f32.c" hidden="true"/>
        <files mask="arm_cosine_distance_f32.c" hidden="true"/>
        <files mask="arm_dice_distance.c" hidden="true"/>
        <files mask="arm_euclidean_distance_f32.c" hidden="true"/>
        <files mask="arm_hamming_distance.c" hidden="true"/>
        <files mask="arm_jaccard_distance.c" hidden="true"/>
        <files mask="arm_jensenshannon_distance_f32.c" hidden="true"/>
        <files mask="arm_kulsinski_distance.c" hidden="true"/>
        <files mask="arm_minkowski_distance_f32.c" hidden="true"/>
        <files mask="arm_rogerstanimoto_distance.c" hidden="true"/>
        <files mask="arm_russellrao_distance.c" hidden="true"/>
        <files mask="arm_sokalmichener_distance.c" hidden="true"/>
        <files mask="arm_sokalsneath_distance.c" hidden="true"/>
        <files mask="arm_yule_distance.c" hidden="true"/>
        <files mask="arm_braycurtis_distance_f16.c" hidden="true"/>
        <files mask="arm_canberra_distance_f16.c" hidden="true"/>
        <files mask="arm_chebyshev_distance_f16.c" hidden="true"/>
        <files mask="arm_cityblock_distance_f16.c" hidden="true"/>
        <files mask="arm_correlation_distance_f16.c" hidden="true"/>
        <files mask="arm_cosine_distance_f16.c" hidden="true"/>
        <files mask="arm_euclidean_distance_f16.c" hidden="true"/>
        <files mask="arm_jensenshannon_distance_f16.c" hidden="true"/>
        <files mask="arm_minkowski_distance_f16.c" hidden="true"/>
      </source>
      <source relative_path="Source/FastMathFunctions" type="src">
        <files mask="FastMathFunctions.c"/>
        <files mask="FastMathFunctionsF16.c"/>
      </source>
      <source exclude="true" relative_path="Source/FastMathFunctions" type="src">
        <files mask="arm_cos_f32.c" hidden="true"/>
        <files mask="arm_cos_q15.c" hidden="true"/>
        <files mask="arm_cos_q31.c" hidden="true"/>
        <files mask="arm_divide_q15.c" hidden="true"/>
        <files mask="arm_sin_f32.c" hidden="true"/>
        <files mask="arm_sin_q15.c" hidden="true"/>
        <files mask="arm_sin_q31.c" hidden="true"/>
        <files mask="arm_sqrt_q15.c" hidden="true"/>
        <files mask="arm_sqrt_q31.c" hidden="true"/>
        <files mask="arm_vexp_f32.c" hidden="true"/>
        <files mask="arm_vlog_f32.c" hidden="true"/>
        <files mask="arm_vexp_f16.c" hidden="true"/>
        <files mask="arm_vinverse_f16.c" hidden="true"/>
        <files mask="arm_vlog_f16.c" hidden="true"/>
      </source>
      <source relative_path="Source/FilteringFunctions" type="src">
        <files mask="FilteringFunctions.c"/>
        <files mask="FilteringFunctionsF16.c"/>
      </source>
      <source exclude="true" relative_path="Source/FilteringFunctions" type="src">
        <files mask="arm_biquad_cascade_df1_32x64_init_q31.c" hidden="true"/>
        <files mask="arm_biquad_cascade_df1_32x64_q31.c" hidden="true"/>
        <files mask="arm_biquad_cascade_df1_f32.c" hidden="true"/>
        <files mask="arm_biquad_cascade_df1_fast_q15.c" hidden="true"/>
        <files mask="arm_biquad_cascade_df1_fast_q31.c" hidden="true"/>
        <files mask="arm_biquad_cascade_df1_init_f32.c" hidden="true"/>
        <files mask="arm_biquad_cascade_df1_init_q15.c" hidden="true"/>
        <files mask="arm_biquad_cascade_df1_init_q31.c" hidden="true"/>
        <files mask="arm_biquad_cascade_df1_q15.c" hidden="true"/>
        <files mask="arm_biquad_cascade_df1_q31.c" hidden="true"/>
        <files mask="arm_biquad_cascade_df2T_f32.c" hidden="true"/>
        <files mask="arm_biquad_cascade_df2T_f64.c" hidden="true"/>
        <files mask="arm_biquad_cascade_df2T_init_f32.c" hidden="true"/>
        <files mask="arm_biquad_cascade_df2T_init_f64.c" hidden="true"/>
        <files mask="arm_biquad_cascade_stereo_df2T_f32.c" hidden="true"/>
        <files mask="arm_biquad_cascade_stereo_df2T_init_f32.c" hidden="true"/>
        <files mask="arm_conv_f32.c" hidden="true"/>
        <files mask="arm_conv_fast_opt_q15.c" hidden="true"/>
        <files mask="arm_conv_fast_q15.c" hidden="true"/>
        <files mask="arm_conv_fast_q31.c" hidden="true"/>
        <files mask="arm_conv_opt_q15.c" hidden="true"/>
        <files mask="arm_conv_opt_q7.c" hidden="true"/>
        <files mask="arm_conv_partial_f32.c" hidden="true"/>
        <files mask="arm_conv_partial_fast_opt_q15.c" hidden="true"/>
        <files mask="arm_conv_partial_fast_q15.c" hidden="true"/>
        <files mask="arm_conv_partial_fast_q31.c" hidden="true"/>
        <files mask="arm_conv_partial_opt_q15.c" hidden="true"/>
        <files mask="arm_conv_partial_opt_q7.c" hidden="true"/>
        <files mask="arm_conv_partial_q15.c" hidden="true"/>
        <files mask="arm_conv_partial_q31.c" hidden="true"/>
        <files mask="arm_conv_partial_q7.c" hidden="true"/>
        <files mask="arm_conv_q15.c" hidden="true"/>
        <files mask="arm_conv_q31.c" hidden="true"/>
        <files mask="arm_conv_q7.c" hidden="true"/>
        <files mask="arm_correlate_f32.c" hidden="true"/>
        <files mask="arm_correlate_fast_opt_q15.c" hidden="true"/>
        <files mask="arm_correlate_fast_q15.c" hidden="true"/>
        <files mask="arm_correlate_fast_q31.c" hidden="true"/>
        <files mask="arm_correlate_opt_q15.c" hidden="true"/>
        <files mask="arm_correlate_opt_q7.c" hidden="true"/>
        <files mask="arm_correlate_q15.c" hidden="true"/>
        <files mask="arm_correlate_q31.c" hidden="true"/>
        <files mask="arm_correlate_q7.c" hidden="true"/>
        <files mask="arm_fir_decimate_f32.c" hidden="true"/>
        <files mask="arm_fir_decimate_fast_q15.c" hidden="true"/>
        <files mask="arm_fir_decimate_fast_q31.c" hidden="true"/>
        <files mask="arm_fir_decimate_init_f32.c" hidden="true"/>
        <files mask="arm_fir_decimate_init_q15.c" hidden="true"/>
        <files mask="arm_fir_decimate_init_q31.c" hidden="true"/>
        <files mask="arm_fir_decimate_q15.c" hidden="true"/>
        <files mask="arm_fir_decimate_q31.c" hidden="true"/>
        <files mask="arm_fir_f32.c" hidden="true"/>
        <files mask="arm_fir_fast_q15.c" hidden="true"/>
        <files mask="arm_fir_fast_q31.c" hidden="true"/>
        <files mask="arm_fir_init_f32.c" hidden="true"/>
        <files mask="arm_fir_init_q15.c" hidden="true"/>
        <files mask="arm_fir_init_q31.c" hidden="true"/>
        <files mask="arm_fir_init_q7.c" hidden="true"/>
        <files mask="arm_fir_interpolate_f32.c" hidden="true"/>
        <files mask="arm_fir_interpolate_init_f32.c" hidden="true"/>
        <files mask="arm_fir_interpolate_init_q15.c" hidden="true"/>
        <files mask="arm_fir_interpolate_init_q31.c" hidden="true"/>
        <files mask="arm_fir_interpolate_q15.c" hidden="true"/>
        <files mask="arm_fir_interpolate_q31.c" hidden="true"/>
        <files mask="arm_fir_lattice_f32.c" hidden="true"/>
        <files mask="arm_fir_lattice_init_f32.c" hidden="true"/>
        <files mask="arm_fir_lattice_init_q15.c" hidden="true"/>
        <files mask="arm_fir_lattice_init_q31.c" hidden="true"/>
        <files mask="arm_fir_lattice_q15.c" hidden="true"/>
        <files mask="arm_fir_lattice_q31.c" hidden="true"/>
        <files mask="arm_fir_q15.c" hidden="true"/>
        <files mask="arm_fir_q31.c" hidden="true"/>
        <files mask="arm_fir_q7.c" hidden="true"/>
        <files mask="arm_fir_sparse_f32.c" hidden="true"/>
        <files mask="arm_fir_sparse_init_f32.c" hidden="true"/>
        <files mask="arm_fir_sparse_init_q15.c" hidden="true"/>
        <files mask="arm_fir_sparse_init_q31.c" hidden="true"/>
        <files mask="arm_fir_sparse_init_q7.c" hidden="true"/>
        <files mask="arm_fir_sparse_q15.c" hidden="true"/>
        <files mask="arm_fir_sparse_q31.c" hidden="true"/>
        <files mask="arm_fir_sparse_q7.c" hidden="true"/>
        <files mask="arm_iir_lattice_f32.c" hidden="true"/>
        <files mask="arm_iir_lattice_init_f32.c" hidden="true"/>
        <files mask="arm_iir_lattice_init_q15.c" hidden="true"/>
        <files mask="arm_iir_lattice_init_q31.c" hidden="true"/>
        <files mask="arm_iir_lattice_q15.c" hidden="true"/>
        <files mask="arm_iir_lattice_q31.c" hidden="true"/>
        <files mask="arm_levinson_durbin_f32.c" hidden="true"/>
        <files mask="arm_levinson_durbin_q31.c" hidden="true"/>
        <files mask="arm_lms_f32.c" hidden="true"/>
        <files mask="arm_lms_init_f32.c" hidden="true"/>
        <files mask="arm_lms_init_q15.c" hidden="true"/>
        <files mask="arm_lms_init_q31.c" hidden="true"/>
        <files mask="arm_lms_norm_f32.c" hidden="true"/>
        <files mask="arm_lms_norm_init_f32.c" hidden="true"/>
        <files mask="arm_lms_norm_init_q15.c" hidden="true"/>
        <files mask="arm_lms_norm_init_q31.c" hidden="true"/>
        <files mask="arm_lms_norm_q15.c" hidden="true"/>
        <files mask="arm_lms_norm_q31.c" hidden="true"/>
        <files mask="arm_lms_q15.c" hidden="true"/>
        <files mask="arm_lms_q31.c" hidden="true"/>
        <files mask="arm_biquad_cascade_df1_f16.c" hidden="true"/>
        <files mask="arm_biquad_cascade_df1_init_f16.c" hidden="true"/>
        <files mask="arm_biquad_cascade_df2T_f16.c" hidden="true"/>
        <files mask="arm_biquad_cascade_df2T_init_f16.c" hidden="true"/>
        <files mask="arm_biquad_cascade_stereo_df2T_f16.c" hidden="true"/>
        <files mask="arm_biquad_cascade_stereo_df2T_init_f16.c" hidden="true"/>
        <files mask="arm_correlate_f16.c" hidden="true"/>
        <files mask="arm_fir_f16.c" hidden="true"/>
        <files mask="arm_fir_init_f16.c" hidden="true"/>
        <files mask="arm_levinson_durbin_f16.c" hidden="true"/>
      </source>
      <source relative_path="Source/InterpolationFunctions" type="src">
        <files mask="InterpolationFunctions.c"/>
        <files mask="InterpolationFunctionsF16.c"/>
      </source>
      <source exclude="true" relative_path="Source/InterpolationFunctions" type="src">
        <files mask="arm_bilinear_interp_f32.c" hidden="true"/>
        <files mask="arm_bilinear_interp_q15.c" hidden="true"/>
        <files mask="arm_bilinear_interp_q31.c" hidden="true"/>
        <files mask="arm_bilinear_interp_q7.c" hidden="true"/>
        <files mask="arm_linear_interp_f32.c" hidden="true"/>
        <files mask="arm_linear_interp_q15.c" hidden="true"/>
        <files mask="arm_linear_interp_q31.c" hidden="true"/>
        <files mask="arm_linear_interp_q7.c" hidden="true"/>
        <files mask="arm_spline_interp_f32.c" hidden="true"/>
        <files mask="arm_spline_interp_init_f32.c" hidden="true"/>
        <files mask="arm_bilinear_interp_f16.c" hidden="true"/>
        <files mask="arm_linear_interp_f16.c" hidden="true"/>
      </source>
      <source relative_path="Source/MatrixFunctions" type="src">
        <files mask="MatrixFunctions.c"/>
        <files mask="MatrixFunctionsF16.c"/>
      </source>
      <source exclude="true" relative_path="Source/MatrixFunctions" type="src">
        <files mask="arm_mat_add_f32.c" hidden="true"/>
        <files mask="arm_mat_add_q15.c" hidden="true"/>
        <files mask="arm_mat_add_q31.c" hidden="true"/>
        <files mask="arm_mat_cholesky_f32.c" hidden="true"/>
        <files mask="arm_mat_cholesky_f64.c" hidden="true"/>
        <files mask="arm_mat_cmplx_mult_f32.c" hidden="true"/>
        <files mask="arm_mat_cmplx_mult_q15.c" hidden="true"/>
        <files mask="arm_mat_cmplx_mult_q31.c" hidden="true"/>
        <files mask="arm_mat_cmplx_trans_f32.c" hidden="true"/>
        <files mask="arm_mat_cmplx_trans_q15.c" hidden="true"/>
        <files mask="arm_mat_cmplx_trans_q31.c" hidden="true"/>
        <files mask="arm_mat_init_f32.c" hidden="true"/>
        <files mask="arm_mat_init_q15.c" hidden="true"/>
        <files mask="arm_mat_init_q31.c" hidden="true"/>
        <files mask="arm_mat_inverse_f32.c" hidden="true"/>
        <files mask="arm_mat_inverse_f64.c" hidden="true"/>
        <files mask="arm_mat_ldlt_f32.c" hidden="true"/>
        <files mask="arm_mat_ldlt_f64.c" hidden="true"/>
        <files mask="arm_mat_mult_f32.c" hidden="true"/>
        <files mask="arm_mat_mult_f64.c" hidden="true"/>
        <files mask="arm_mat_mult_fast_q15.c" hidden="true"/>
        <files mask="arm_mat_mult_fast_q31.c" hidden="true"/>
        <files mask="arm_mat_mult_q15.c" hidden="true"/>
        <files mask="arm_mat_mult_q31.c" hidden="true"/>
        <files mask="arm_mat_mult_q7.c" hidden="true"/>
        <files mask="arm_mat_scale_f32.c" hidden="true"/>
        <files mask="arm_mat_scale_q15.c" hidden="true"/>
        <files mask="arm_mat_scale_q31.c" hidden="true"/>
        <files mask="arm_mat_solve_lower_triangular_f32.c" hidden="true"/>
        <files mask="arm_mat_solve_lower_triangular_f64.c" hidden="true"/>
        <files mask="arm_mat_solve_upper_triangular_f32.c" hidden="true"/>
        <files mask="arm_mat_solve_upper_triangular_f64.c" hidden="true"/>
        <files mask="arm_mat_sub_f32.c" hidden="true"/>
        <files mask="arm_mat_sub_f64.c" hidden="true"/>
        <files mask="arm_mat_sub_q15.c" hidden="true"/>
        <files mask="arm_mat_sub_q31.c" hidden="true"/>
        <files mask="arm_mat_trans_f32.c" hidden="true"/>
        <files mask="arm_mat_trans_f64.c" hidden="true"/>
        <files mask="arm_mat_trans_q15.c" hidden="true"/>
        <files mask="arm_mat_trans_q31.c" hidden="true"/>
        <files mask="arm_mat_trans_q7.c" hidden="true"/>
        <files mask="arm_mat_vec_mult_f32.c" hidden="true"/>
        <files mask="arm_mat_vec_mult_q15.c" hidden="true"/>
        <files mask="arm_mat_vec_mult_q31.c" hidden="true"/>
        <files mask="arm_mat_vec_mult_q7.c" hidden="true"/>
        <files mask="arm_mat_add_f16.c" hidden="true"/>
        <files mask="arm_mat_cholesky_f16.c" hidden="true"/>
        <files mask="arm_mat_cmplx_mult_f16.c" hidden="true"/>
        <files mask="arm_mat_cmplx_trans_f16.c" hidden="true"/>
        <files mask="arm_mat_init_f16.c" hidden="true"/>
        <files mask="arm_mat_inverse_f16.c" hidden="true"/>
        <files mask="arm_mat_mult_f16.c" hidden="true"/>
        <files mask="arm_mat_scale_f16.c" hidden="true"/>
        <files mask="arm_mat_solve_lower_triangular_f16.c" hidden="true"/>
        <files mask="arm_mat_solve_upper_triangular_f16.c" hidden="true"/>
        <files mask="arm_mat_sub_f16.c" hidden="true"/>
        <files mask="arm_mat_trans_f16.c" hidden="true"/>
        <files mask="arm_mat_vec_mult_f16.c" hidden="true"/>
      </source>
      <source relative_path="Source/QuaternionMathFunctions" type="src">
        <files mask="QuaternionMathFunctions.c"/>
      </source>
      <source exclude="true" relative_path="Source/QuaternionMathFunctions" type="src">
        <files mask="arm_quaternion2rotation_f32.c" hidden="true"/>
        <files mask="arm_quaternion_conjugate_f32.c" hidden="true"/>
        <files mask="arm_quaternion_inverse_f32.c" hidden="true"/>
        <files mask="arm_quaternion_norm_f32.c" hidden="true"/>
        <files mask="arm_quaternion_normalize_f32.c" hidden="true"/>
        <files mask="arm_quaternion_product_f32.c" hidden="true"/>
        <files mask="arm_quaternion_product_single_f32.c" hidden="true"/>
        <files mask="arm_rotation2quaternion_f32.c" hidden="true"/>
      </source>
      <source relative_path="Source/SVMFunctions" type="src">
        <files mask="SVMFunctions.c"/>
        <files mask="SVMFunctionsF16.c"/>
      </source>
      <source exclude="true" relative_path="Source/SVMFunctions" type="src">
        <files mask="arm_svm_linear_init_f32.c" hidden="true"/>
        <files mask="arm_svm_linear_predict_f32.c" hidden="true"/>
        <files mask="arm_svm_polynomial_init_f32.c" hidden="true"/>
        <files mask="arm_svm_polynomial_predict_f32.c" hidden="true"/>
        <files mask="arm_svm_rbf_init_f32.c" hidden="true"/>
        <files mask="arm_svm_rbf_predict_f32.c" hidden="true"/>
        <files mask="arm_svm_sigmoid_init_f32.c" hidden="true"/>
        <files mask="arm_svm_sigmoid_predict_f32.c" hidden="true"/>
        <files mask="arm_svm_linear_init_f16.c" hidden="true"/>
        <files mask="arm_svm_linear_predict_f16.c" hidden="true"/>
        <files mask="arm_svm_polynomial_init_f16.c" hidden="true"/>
        <files mask="arm_svm_polynomial_predict_f16.c" hidden="true"/>
        <files mask="arm_svm_rbf_init_f16.c" hidden="true"/>
        <files mask="arm_svm_rbf_predict_f16.c" hidden="true"/>
        <files mask="arm_svm_sigmoid_init_f16.c" hidden="true"/>
        <files mask="arm_svm_sigmoid_predict_f16.c" hidden="true"/>
      </source>
      <source relative_path="Source/StatisticsFunctions" type="src">
        <files mask="StatisticsFunctions.c"/>
        <files mask="StatisticsFunctionsF16.c"/>
      </source>
      <source exclude="true" relative_path="Source/StatisticsFunctions" type="src">
        <files mask="arm_absmax_f32.c" hidden="true"/>
        <files mask="arm_absmax_q15.c" hidden="true"/>
        <files mask="arm_absmax_q31.c" hidden="true"/>
        <files mask="arm_absmax_q7.c" hidden="true"/>
        <files mask="arm_absmin_f32.c" hidden="true"/>
        <files mask="arm_absmin_q15.c" hidden="true"/>
        <files mask="arm_absmin_q31.c" hidden="true"/>
        <files mask="arm_absmin_q7.c" hidden="true"/>
        <files mask="arm_entropy_f32.c" hidden="true"/>
        <files mask="arm_entropy_f64.c" hidden="true"/>
        <files mask="arm_kullback_leibler_f32.c" hidden="true"/>
        <files mask="arm_kullback_leibler_f64.c" hidden="true"/>
        <files mask="arm_logsumexp_dot_prod_f32.c" hidden="true"/>
        <files mask="arm_logsumexp_f32.c" hidden="true"/>
        <files mask="arm_max_f32.c" hidden="true"/>
        <files mask="arm_max_no_idx_f32.c" hidden="true"/>
        <files mask="arm_max_q15.c" hidden="true"/>
        <files mask="arm_max_q31.c" hidden="true"/>
        <files mask="arm_max_q7.c" hidden="true"/>
        <files mask="arm_mean_f32.c" hidden="true"/>
        <files mask="arm_mean_q15.c" hidden="true"/>
        <files mask="arm_mean_q31.c" hidden="true"/>
        <files mask="arm_mean_q7.c" hidden="true"/>
        <files mask="arm_min_f32.c" hidden="true"/>
        <files mask="arm_min_q15.c" hidden="true"/>
        <files mask="arm_min_q31.c" hidden="true"/>
        <files mask="arm_min_q7.c" hidden="true"/>
        <files mask="arm_power_f32.c" hidden="true"/>
        <files mask="arm_power_q15.c" hidden="true"/>
        <files mask="arm_power_q31.c" hidden="true"/>
        <files mask="arm_power_q7.c" hidden="true"/>
        <files mask="arm_rms_f32.c" hidden="true"/>
        <files mask="arm_rms_q15.c" hidden="true"/>
        <files mask="arm_rms_q31.c" hidden="true"/>
        <files mask="arm_std_f32.c" hidden="true"/>
        <files mask="arm_std_q15.c" hidden="true"/>
        <files mask="arm_std_q31.c" hidden="true"/>
        <files mask="arm_var_f32.c" hidden="true"/>
        <files mask="arm_var_q15.c" hidden="true"/>
        <files mask="arm_var_q31.c" hidden="true"/>
        <files mask="arm_absmax_f16.c" hidden="true"/>
        <files mask="arm_absmin_f16.c" hidden="true"/>
        <files mask="arm_entropy_f16.c" hidden="true"/>
        <files mask="arm_kullback_leibler_f16.c" hidden="true"/>
        <files mask="arm_logsumexp_dot_prod_f16.c" hidden="true"/>
        <files mask="arm_logsumexp_f16.c" hidden="true"/>
        <files mask="arm_max_f16.c" hidden="true"/>
        <files mask="arm_max_no_idx_f16.c" hidden="true"/>
        <files mask="arm_mean_f16.c" hidden="true"/>
        <files mask="arm_min_f16.c" hidden="true"/>
        <files mask="arm_power_f16.c" hidden="true"/>
        <files mask="arm_rms_f16.c" hidden="true"/>
        <files mask="arm_std_f16.c" hidden="true"/>
        <files mask="arm_var_f16.c" hidden="true"/>
      </source>
      <source relative_path="Source/SupportFunctions" type="src">
        <files mask="SupportFunctions.c"/>
        <files mask="SupportFunctionsF16.c"/>
      </source>
      <source exclude="true" relative_path="Source/SupportFunctions" type="src">
        <files mask="arm_barycenter_f32.c" hidden="true"/>
        <files mask="arm_bitonic_sort_f32.c" hidden="true"/>
        <files mask="arm_bubble_sort_f32.c" hidden="true"/>
        <files mask="arm_copy_f32.c" hidden="true"/>
        <files mask="arm_copy_q15.c" hidden="true"/>
        <files mask="arm_copy_q31.c" hidden="true"/>
        <files mask="arm_copy_q7.c" hidden="true"/>
        <files mask="arm_fill_f32.c" hidden="true"/>
        <files mask="arm_fill_q15.c" hidden="true"/>
        <files mask="arm_fill_q31.c" hidden="true"/>
        <files mask="arm_fill_q7.c" hidden="true"/>
        <files mask="arm_float_to_q15.c" hidden="true"/>
        <files mask="arm_float_to_q31.c" hidden="true"/>
        <files mask="arm_float_to_q7.c" hidden="true"/>
        <files mask="arm_heap_sort_f32.c" hidden="true"/>
        <files mask="arm_insertion_sort_f32.c" hidden="true"/>
        <files mask="arm_merge_sort_f32.c" hidden="true"/>
        <files mask="arm_merge_sort_init_f32.c" hidden="true"/>
        <files mask="arm_q15_to_float.c" hidden="true"/>
        <files mask="arm_q15_to_q31.c" hidden="true"/>
        <files mask="arm_q15_to_q7.c" hidden="true"/>
        <files mask="arm_q31_to_float.c" hidden="true"/>
        <files mask="arm_q31_to_q15.c" hidden="true"/>
        <files mask="arm_q31_to_q7.c" hidden="true"/>
        <files mask="arm_q7_to_float.c" hidden="true"/>
        <files mask="arm_q7_to_q15.c" hidden="true"/>
        <files mask="arm_q7_to_q31.c" hidden="true"/>
        <files mask="arm_quick_sort_f32.c" hidden="true"/>
        <files mask="arm_selection_sort_f32.c" hidden="true"/>
        <files mask="arm_sort_f32.c" hidden="true"/>
        <files mask="arm_sort_init_f32.c" hidden="true"/>
        <files mask="arm_weighted_sum_f32.c" hidden="true"/>
        <files mask="arm_barycenter_f16.c" hidden="true"/>
        <files mask="arm_copy_f16.c" hidden="true"/>
        <files mask="arm_f16_to_float.c" hidden="true"/>
        <files mask="arm_f16_to_q15.c" hidden="true"/>
        <files mask="arm_fill_f16.c" hidden="true"/>
        <files mask="arm_float_to_f16.c" hidden="true"/>
        <files mask="arm_q15_to_f16.c" hidden="true"/>
        <files mask="arm_weighted_sum_f16.c" hidden="true"/>
      </source>
      <source relative_path="Source/TransformFunctions" type="src">
        <files mask="TransformFunctions.c"/>
        <files mask="TransformFunctionsF16.c"/>
      </source>
      <source exclude="true" relative_path="Source/TransformFunctions" type="src">
        <files mask="arm_bitreversal.c" hidden="true"/>
        <files mask="arm_bitreversal2.c" hidden="true"/>
        <files mask="arm_cfft_f32.c" hidden="true"/>
        <files mask="arm_cfft_f64.c" hidden="true"/>
        <files mask="arm_cfft_init_f32.c" hidden="true"/>
        <files mask="arm_cfft_init_f64.c" hidden="true"/>
        <files mask="arm_cfft_init_q15.c" hidden="true"/>
        <files mask="arm_cfft_init_q31.c" hidden="true"/>
        <files mask="arm_cfft_q15.c" hidden="true"/>
        <files mask="arm_cfft_q31.c" hidden="true"/>
        <files mask="arm_cfft_radix2_f32.c" hidden="true"/>
        <files mask="arm_cfft_radix2_init_f32.c" hidden="true"/>
        <files mask="arm_cfft_radix2_init_q15.c" hidden="true"/>
        <files mask="arm_cfft_radix2_init_q31.c" hidden="true"/>
        <files mask="arm_cfft_radix2_q15.c" hidden="true"/>
        <files mask="arm_cfft_radix2_q31.c" hidden="true"/>
        <files mask="arm_cfft_radix4_f32.c" hidden="true"/>
        <files mask="arm_cfft_radix4_init_f32.c" hidden="true"/>
        <files mask="arm_cfft_radix4_init_q15.c" hidden="true"/>
        <files mask="arm_cfft_radix4_init_q31.c" hidden="true"/>
        <files mask="arm_cfft_radix4_q15.c" hidden="true"/>
        <files mask="arm_cfft_radix4_q31.c" hidden="true"/>
        <files mask="arm_cfft_radix8_f32.c" hidden="true"/>
        <files mask="arm_dct4_f32.c" hidden="true"/>
        <files mask="arm_dct4_init_f32.c" hidden="true"/>
        <files mask="arm_dct4_init_q15.c" hidden="true"/>
        <files mask="arm_dct4_init_q31.c" hidden="true"/>
        <files mask="arm_dct4_q15.c" hidden="true"/>
        <files mask="arm_dct4_q31.c" hidden="true"/>
        <files mask="arm_rfft_f32.c" hidden="true"/>
        <files mask="arm_rfft_fast_f32.c" hidden="true"/>
        <files mask="arm_rfft_fast_f64.c" hidden="true"/>
        <files mask="arm_rfft_fast_init_f32.c" hidden="true"/>
        <files mask="arm_rfft_fast_init_f64.c" hidden="true"/>
        <files mask="arm_rfft_init_f32.c" hidden="true"/>
        <files mask="arm_rfft_init_q15.c" hidden="true"/>
        <files mask="arm_rfft_init_q31.c" hidden="true"/>
        <files mask="arm_rfft_q15.c" hidden="true"/>
        <files mask="arm_rfft_q31.c" hidden="true"/>
        <files mask="arm_bitreversal_f16.c" hidden="true"/>
        <files mask="arm_cfft_f16.c" hidden="true"/>
        <files mask="arm_cfft_init_f16.c" hidden="true"/>
        <files mask="arm_cfft_radix2_f16.c" hidden="true"/>
        <files mask="arm_cfft_radix2_init_f16.c" hidden="true"/>
        <files mask="arm_cfft_radix4_f16.c" hidden="true"/>
        <files mask="arm_cfft_radix4_init_f16.c" hidden="true"/>
        <files mask="arm_cfft_radix8_f16.c" hidden="true"/>
        <files mask="arm_rfft_fast_f16.c" hidden="true"/>
        <files mask="arm_rfft_fast_init_f16.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="Source/TransformFunctions" type="asm_include">
        <files mask="arm_bitreversal2.S" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
        <include_path relative_path="PrivateInclude" type="c_include"/>
        <include_path relative_path="Source/DistanceFunctions" type="c_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Device_API_OSTick.MIMX9352" name="CMSIS_Device_API_OSTick" brief="Device interrupt controller interface" version="1.0.2" full_name="CMSIS Device API OSTick" devices="MIMX9352xxxxM" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/RTOS2/Include" project_base_path="CMSIS/RTOS2/Include">
      <source relative_path="./" type="c_include">
        <files mask="os_tick.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Device_API_RTOS2.MIMX9352" name="CMSIS_Device_API_RTOS2" brief="CMSIS-RTOS API for Cortex-M, SC000, and SC300" version="2.1.3" full_name="CMSIS Device API RTOS2" devices="MIMX9352xxxxM" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/RTOS2/Include" project_base_path="CMSIS/RTOS2/Include">
      <source relative_path="./" type="c_include">
        <files mask="cmsis_os2.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.CAN.MIMX9352" name="CMSIS_Driver_CAN" brief="Access to #include Driver_CAN.h file for custom implementation" version="1.3.0" full_name="CMSIS Driver CAN" devices="MIMX9352xxxxM" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="CMSIS_Driver_Include.Common.MIMX9352"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_CAN.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.Common.MIMX9352" name="CMSIS_Driver_Common" brief="Access to #include Driver_Common.h file for custom implementation" version="2.3.0" full_name="CMSIS Driver Common" devices="MIMX9352xxxxM" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <source relative_path="./" type="c_include">
        <files mask="Driver_Common.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="CMSIS_Driver_Include_Common_MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.Ethernet.MIMX9352" name="CMSIS_Driver_Ethernet_Common" brief="Access to #include Driver_ETH.h file for custom implementation" version="2.2.0" full_name="CMSIS Driver Ethernet Common" devices="MIMX9352xxxxM" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="CMSIS_Driver_Include.Common.MIMX9352"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_ETH.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.Ethernet_MAC.MIMX9352" name="CMSIS_Driver_Ethernet_MAC" brief="Access to #include Driver_ETH_MAC.h file for custom implementation" version="2.2.0" full_name="CMSIS Driver Ethernet MAC" devices="MIMX9352xxxxM" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="CMSIS_Driver_Include.Ethernet.MIMX9352"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_ETH_MAC.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.Ethernet_PHY.MIMX9352" name="CMSIS_Driver_Ethernet_PHY" brief="Access to #include Driver_ETH_PHY.h file for custom implementation" version="2.2.0" full_name="CMSIS Driver Ethernet PHY" devices="MIMX9352xxxxM" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="CMSIS_Driver_Include.Ethernet.MIMX9352"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_ETH_PHY.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.Flash.MIMX9352" name="CMSIS_Driver_Flash" brief="Access to #include Driver_Flash.h file for custom implementation" version="2.3.0" full_name="CMSIS Driver Flash" devices="MIMX9352xxxxM" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="CMSIS_Driver_Include.Common.MIMX9352"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_Flash.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.I2C.MIMX9352" name="CMSIS_Driver_I2C" brief="Access to #include Driver_I2C.h file for custom implementation" version="2.4.0" full_name="CMSIS Driver I2C" devices="MIMX9352xxxxM" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="CMSIS_Driver_Include.Common.MIMX9352"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_I2C.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="CMSIS_Driver_Include_I2C_MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.MCI.MIMX9352" name="CMSIS_Driver_MCI" brief="Access to #include Driver_MCI.h file for custom implementation" version="2.4.0" full_name="CMSIS Driver MCI" devices="MIMX9352xxxxM" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="CMSIS_Driver_Include.Common.MIMX9352"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_MCI.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.NAND.MIMX9352" name="CMSIS_Driver_NAND" brief="Access to #include Driver_NAND.h file for custom implementation" version="2.4.0" full_name="CMSIS Driver NAND" devices="MIMX9352xxxxM" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="CMSIS_Driver_Include.Common.MIMX9352"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_NAND.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.SAI.MIMX9352" name="CMSIS_Driver_SAI" brief="Access to #include Driver_SAI.h file for custom implementation" version="1.2.0" full_name="CMSIS Driver SAI" devices="MIMX9352xxxxM" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="CMSIS_Driver_Include.Common.MIMX9352"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_SAI.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.SPI.MIMX9352" name="CMSIS_Driver_SPI" brief="Access to #include Driver_SPI.h file for custom implementation" version="2.3.0" full_name="CMSIS Driver SPI" devices="MIMX9352xxxxM" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="CMSIS_Driver_Include.Common.MIMX9352"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_SPI.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="CMSIS_Driver_Include_SPI_MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.USART.MIMX9352" name="CMSIS_Driver_USART" brief="Access to #include Driver_USART.h file for custom implementation" version="2.4.0" full_name="CMSIS Driver USART" devices="MIMX9352xxxxM" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="CMSIS_Driver_Include.Common.MIMX9352"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_USART.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="CMSIS_Driver_Include_USART_MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.USB.MIMX9352" name="CMSIS_Driver_USB_Common" brief="Access to #include Driver_USB.h file for custom implementation" version="2.3.0" full_name="CMSIS Driver USB Common" devices="MIMX9352xxxxM" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="CMSIS_Driver_Include.Common.MIMX9352"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_USB.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.USB_Device.MIMX9352" name="CMSIS_Driver_USB_Device" brief="Access to #include Driver_USBD.h file for custom implementation" version="2.3.0" full_name="CMSIS Driver USB Device" devices="MIMX9352xxxxM" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="CMSIS_Driver_Include.USB.MIMX9352"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_USBD.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.USB_Host.MIMX9352" name="CMSIS_Driver_USB_Host" brief="Access to #include Driver_USBH.h file for custom implementation" version="2.3.0" full_name="CMSIS Driver USB Host" devices="MIMX9352xxxxM" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="CMSIS_Driver_Include.USB.MIMX9352"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_USBH.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.WiFi.MIMX9352" name="CMSIS_Driver_WiFi" brief="Access to #include Driver_WiFi.h file" version="1.1.0" full_name="CMSIS Driver WiFi" devices="MIMX9352xxxxM" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="CMSIS_Driver_Include.Common.MIMX9352"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_WiFi.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Include_core_cm.MIMX9352" name="CMSIS_Include_CM" brief="CMSIS-CORE for Cortex-M, ARMv8-M, ARMv8.1-M" version="5.5.0" full_name="CMSIS Include For Cortex-M, ARMv8-M, ARMv8.1-M" devices="MIMX9352xxxxM" device_cores="cm33_MIMX9352xxxxM" user_visible="true" type="CMSIS_Include" package_base_path="CMSIS/Core/Include" project_base_path="CMSIS">
      <source compiler="compiler_gcc compiler_iar" relative_path="./" type="c_include">
        <files mask="cmsis_compiler.h"/>
        <files mask="cmsis_version.h"/>
      </source>
      <source compiler="compiler_gcc" relative_path="./" type="c_include">
        <files mask="cmsis_gcc.h"/>
      </source>
      <source compiler="compiler_iar" relative_path="./" type="c_include">
        <files mask="cmsis_iccarm.h"/>
      </source>
      <source relative_path="./" type="c_include" device_cores="cm33_MIMX9352xxxxM">
        <files mask="core_cm33.h"/>
        <files mask="mpu_armv8.h"/>
        <files mask="tz_context.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="CMSIS_Include_core_cm_MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_NN_Source.MIMX9352" name="CMSIS_NN_Library_Source" brief="CMSIS-NN Library" version="3.0.0" full_name="CMSIS NN Library Source" devices="MIMX9352xxxxM" user_visible="true" type="CMSIS_driver" package_base_path="CMSIS/NN" project_base_path="CMSIS/NN">
      <dependencies>
        <component_dependency value="CMSIS_DSP_Include.MIMX9352"/>
      </dependencies>
      <source exclude="true" relative_path="./" type="other">
        <files mask="README.md" hidden="true"/>
      </source>
      <source relative_path="Include" type="c_include">
        <files mask="arm_nn_tables.h"/>
        <files mask="arm_nn_types.h"/>
        <files mask="arm_nnfunctions.h"/>
        <files mask="arm_nnsupportfunctions.h"/>
      </source>
      <source relative_path="Source/ActivationFunctions" type="src">
        <files mask="arm_nn_activations_q15.c"/>
        <files mask="arm_nn_activations_q7.c"/>
        <files mask="arm_relu6_s8.c"/>
        <files mask="arm_relu_q15.c"/>
        <files mask="arm_relu_q7.c"/>
      </source>
      <source relative_path="Source/BasicMathFunctions" type="src">
        <files mask="arm_elementwise_add_s8.c"/>
        <files mask="arm_elementwise_mul_s8.c"/>
      </source>
      <source relative_path="Source/ConcatenationFunctions" type="src">
        <files mask="arm_concatenation_s8_w.c"/>
        <files mask="arm_concatenation_s8_x.c"/>
        <files mask="arm_concatenation_s8_y.c"/>
        <files mask="arm_concatenation_s8_z.c"/>
      </source>
      <source relative_path="Source/ConvolutionFunctions" type="src">
        <files mask="arm_convolve_1x1_HWC_q7_fast_nonsquare.c"/>
        <files mask="arm_convolve_1x1_s8_fast.c"/>
        <files mask="arm_convolve_1_x_n_s8.c"/>
        <files mask="arm_convolve_HWC_q15_basic.c"/>
        <files mask="arm_convolve_HWC_q15_fast.c"/>
        <files mask="arm_convolve_HWC_q15_fast_nonsquare.c"/>
        <files mask="arm_convolve_HWC_q7_basic.c"/>
        <files mask="arm_convolve_HWC_q7_basic_nonsquare.c"/>
        <files mask="arm_convolve_HWC_q7_fast.c"/>
        <files mask="arm_convolve_HWC_q7_fast_nonsquare.c"/>
        <files mask="arm_convolve_HWC_q7_RGB.c"/>
        <files mask="arm_convolve_s8.c"/>
        <files mask="arm_convolve_wrapper_s8.c"/>
        <files mask="arm_depthwise_conv_3x3_s8.c"/>
        <files mask="arm_depthwise_conv_s8.c"/>
        <files mask="arm_depthwise_conv_s8_opt.c"/>
        <files mask="arm_depthwise_conv_u8_basic_ver1.c"/>
        <files mask="arm_depthwise_conv_wrapper_s8.c"/>
        <files mask="arm_depthwise_separable_conv_HWC_q7.c"/>
        <files mask="arm_depthwise_separable_conv_HWC_q7_nonsquare.c"/>
        <files mask="arm_nn_depthwise_conv_s8_core.c"/>
        <files mask="arm_nn_mat_mult_kernel_q7_q15.c"/>
        <files mask="arm_nn_mat_mult_kernel_q7_q15_reordered.c"/>
        <files mask="arm_nn_mat_mult_kernel_s8_s16.c"/>
        <files mask="arm_nn_mat_mult_kernel_s8_s16_reordered.c"/>
        <files mask="arm_nn_mat_mult_s8.c"/>
      </source>
      <source relative_path="Source/FullyConnectedFunctions" type="src">
        <files mask="arm_fully_connected_mat_q7_vec_q15.c"/>
        <files mask="arm_fully_connected_mat_q7_vec_q15_opt.c"/>
        <files mask="arm_fully_connected_q15.c"/>
        <files mask="arm_fully_connected_q15_opt.c"/>
        <files mask="arm_fully_connected_q7.c"/>
        <files mask="arm_fully_connected_q7_opt.c"/>
        <files mask="arm_fully_connected_s8.c"/>
      </source>
      <source relative_path="Source/NNSupportFunctions" type="src">
        <files mask="arm_nntables.c"/>
        <files mask="arm_nn_accumulate_q7_to_q15.c"/>
        <files mask="arm_nn_add_q7.c"/>
        <files mask="arm_nn_depthwise_conv_nt_t_padded_s8.c"/>
        <files mask="arm_nn_depthwise_conv_nt_t_s8.c"/>
        <files mask="arm_nn_mat_mult_nt_t_s8.c"/>
        <files mask="arm_nn_mat_mul_core_1x_s8.c"/>
        <files mask="arm_nn_mat_mul_core_4x_s8.c"/>
        <files mask="arm_nn_mult_q15.c"/>
        <files mask="arm_nn_mult_q7.c"/>
        <files mask="arm_nn_vec_mat_mult_t_s8.c"/>
        <files mask="arm_nn_vec_mat_mult_t_svdf_s8.c"/>
        <files mask="arm_q7_to_q15_no_shift.c"/>
        <files mask="arm_q7_to_q15_reordered_no_shift.c"/>
        <files mask="arm_q7_to_q15_reordered_with_offset.c"/>
        <files mask="arm_q7_to_q15_with_offset.c"/>
      </source>
      <source relative_path="Source/PoolingFunctions" type="src">
        <files mask="arm_avgpool_s8.c"/>
        <files mask="arm_max_pool_s8.c"/>
        <files mask="arm_pool_q7_HWC.c"/>
      </source>
      <source relative_path="Source/ReshapeFunctions" type="src">
        <files mask="arm_reshape_s8.c"/>
      </source>
      <source relative_path="Source/SoftmaxFunctions" type="src">
        <files mask="arm_softmax_q15.c"/>
        <files mask="arm_softmax_q7.c"/>
        <files mask="arm_softmax_s8.c"/>
        <files mask="arm_softmax_u8.c"/>
        <files mask="arm_softmax_with_batch_q7.c"/>
      </source>
      <source relative_path="Source/SVDFunctions" type="src">
        <files mask="arm_svdf_s8.c"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
      </include_paths>
    </component>
    <!--<component id="CMSIS_files.MIMX9352" name="CMSIS" brief="CMSIS (Cortex Microcontroller Software Interface Standard)" version="5.8.0" full_name="CMSIS" devices="MIMX9352xxxxM" user_visible="false" type="container" package_base_path="CMSIS" project_base_path="CMSIS">
  <source relative_path="Driver/VIO" type="other">
    <files mask="cmsis_vio.scvd"/>
  </source>
  <source relative_path="Driver/VIO/Include" type="c_include">
    <files mask="cmsis_vio.h"/>
  </source>
  <source relative_path="Driver/VIO/Source" type="src">
    <files mask="vio_memory.c"/>
    <files mask="vio.c"/>
  </source>
  <source relative_path="Driver/Include" type="c_include">
    <files mask="Driver_Storage.h"/>
    <files mask="Driver_USART.h"/>
    <files mask="Driver_USBD.h"/>
    <files mask="Driver_I2C.h"/>
    <files mask="Driver_SPI.h"/>
    <files mask="Driver_USB.h"/>
    <files mask="Driver_WiFi.h"/>
    <files mask="Driver_SAI.h"/>
    <files mask="Driver_Common.h"/>
    <files mask="Driver_NAND.h"/>
    <files mask="Driver_CAN.h"/>
    <files mask="Driver_MCI.h"/>
    <files mask="Driver_ETH_MAC.h"/>
    <files mask="Driver_Flash.h"/>
    <files mask="Driver_USBH.h"/>
    <files mask="Driver_ETH_PHY.h"/>
    <files mask="Driver_ETH.h"/>
  </source>
  <source relative_path="Driver/DriverTemplates" type="src">
    <files mask="Driver_SPI.c"/>
    <files mask="Driver_Flash.c"/>
    <files mask="Driver_USART.c"/>
    <files mask="Driver_SAI.c"/>
    <files mask="Driver_Storage.c"/>
    <files mask="Driver_I2C.c"/>
    <files mask="Driver_ETH_PHY.c"/>
    <files mask="Driver_WiFi.c"/>
    <files mask="Driver_ETH_MAC.c"/>
    <files mask="Driver_CAN.c"/>
    <files mask="Driver_MCI.c"/>
    <files mask="Driver_NAND.c"/>
    <files mask="Driver_USBH.c"/>
    <files mask="Driver_USBD.c"/>
  </source>
  <source relative_path="./" type="other">
    <files mask="CMSIS.yml"/>
    <files mask="CMSIS_v2.yml"/>
  </source>
  <source relative_path="./" type="doc">
    <files mask="LICENSE.txt"/>
  </source>
  <source relative_path="DSP/Source/StatisticsFunctions" type="src">
    <files mask="arm_absmax_q15.c"/>
    <files mask="arm_var_q15.c"/>
    <files mask="arm_min_q31.c"/>
    <files mask="arm_absmax_f32.c"/>
    <files mask="arm_max_no_idx_f16.c"/>
    <files mask="arm_mean_f32.c"/>
    <files mask="arm_kullback_leibler_f64.c"/>
    <files mask="arm_absmin_f32.c"/>
    <files mask="arm_absmax_q31.c"/>
    <files mask="arm_max_q7.c"/>
    <files mask="arm_max_f32.c"/>
    <files mask="arm_var_f32.c"/>
    <files mask="arm_power_q7.c"/>
    <files mask="arm_absmax_f16.c"/>
    <files mask="arm_rms_f32.c"/>
    <files mask="arm_var_f16.c"/>
    <files mask="arm_max_q31.c"/>
    <files mask="arm_logsumexp_dot_prod_f32.c"/>
    <files mask="arm_max_q15.c"/>
    <files mask="arm_entropy_f32.c"/>
    <files mask="arm_mean_q7.c"/>
    <files mask="arm_absmax_q7.c"/>
    <files mask="arm_logsumexp_dot_prod_f16.c"/>
    <files mask="arm_mean_f16.c"/>
    <files mask="arm_power_f32.c"/>
    <files mask="arm_min_q7.c"/>
    <files mask="arm_rms_f16.c"/>
    <files mask="arm_max_f16.c"/>
    <files mask="arm_max_no_idx_f32.c"/>
    <files mask="arm_std_q15.c"/>
    <files mask="arm_entropy_f64.c"/>
    <files mask="arm_absmin_q31.c"/>
    <files mask="arm_min_f16.c"/>
    <files mask="arm_min_f32.c"/>
    <files mask="arm_logsumexp_f32.c"/>
    <files mask="arm_kullback_leibler_f16.c"/>
    <files mask="arm_min_q15.c"/>
    <files mask="arm_power_f16.c"/>
    <files mask="arm_std_f16.c"/>
    <files mask="arm_entropy_f16.c"/>
    <files mask="arm_logsumexp_f16.c"/>
    <files mask="StatisticsFunctionsF16.c"/>
    <files mask="arm_kullback_leibler_f32.c"/>
    <files mask="arm_absmin_f16.c"/>
    <files mask="StatisticsFunctions.c"/>
    <files mask="arm_std_q31.c"/>
    <files mask="arm_absmin_q15.c"/>
    <files mask="arm_rms_q31.c"/>
    <files mask="arm_mean_q15.c"/>
    <files mask="arm_std_f32.c"/>
    <files mask="arm_power_q15.c"/>
    <files mask="arm_mean_q31.c"/>
    <files mask="arm_absmin_q7.c"/>
    <files mask="arm_rms_q15.c"/>
    <files mask="arm_power_q31.c"/>
    <files mask="arm_var_q31.c"/>
  </source>
  <source relative_path="DSP/Source/StatisticsFunctions" type="doc">
    <files mask="CMakeLists.txt"/>
  </source>
  <source relative_path="DSP/Source/InterpolationFunctions" type="src">
    <files mask="arm_linear_interp_q15.c"/>
    <files mask="arm_linear_interp_f16.c"/>
    <files mask="arm_spline_interp_f32.c"/>
    <files mask="arm_bilinear_interp_f32.c"/>
    <files mask="arm_linear_interp_f32.c"/>
    <files mask="arm_bilinear_interp_f16.c"/>
    <files mask="arm_linear_interp_q31.c"/>
    <files mask="arm_spline_interp_init_f32.c"/>
    <files mask="InterpolationFunctions.c"/>
    <files mask="arm_linear_interp_q7.c"/>
    <files mask="InterpolationFunctionsF16.c"/>
    <files mask="arm_bilinear_interp_q15.c"/>
    <files mask="arm_bilinear_interp_q7.c"/>
    <files mask="arm_bilinear_interp_q31.c"/>
  </source>
  <source relative_path="DSP/Source/InterpolationFunctions" type="doc">
    <files mask="CMakeLists.txt"/>
  </source>
  <source relative_path="DSP/Source/QuaternionMathFunctions" type="src">
    <files mask="arm_quaternion_conjugate_f32.c"/>
    <files mask="arm_quaternion_normalize_f32.c"/>
    <files mask="arm_quaternion_inverse_f32.c"/>
    <files mask="arm_quaternion_product_f32.c"/>
    <files mask="arm_quaternion_product_single_f32.c"/>
    <files mask="arm_rotation2quaternion_f32.c"/>
    <files mask="arm_quaternion2rotation_f32.c"/>
    <files mask="arm_quaternion_norm_f32.c"/>
    <files mask="QuaternionMathFunctions.c"/>
  </source>
  <source relative_path="DSP/Source/QuaternionMathFunctions" type="doc">
    <files mask="CMakeLists.txt"/>
  </source>
  <source relative_path="DSP/Source/SVMFunctions" type="src">
    <files mask="SVMFunctionsF16.c"/>
    <files mask="arm_svm_rbf_init_f16.c"/>
    <files mask="arm_svm_linear_init_f32.c"/>
    <files mask="arm_svm_sigmoid_predict_f16.c"/>
    <files mask="arm_svm_polynomial_predict_f32.c"/>
    <files mask="arm_svm_polynomial_predict_f16.c"/>
    <files mask="arm_svm_rbf_predict_f32.c"/>
    <files mask="arm_svm_polynomial_init_f16.c"/>
    <files mask="arm_svm_sigmoid_predict_f32.c"/>
    <files mask="arm_svm_rbf_predict_f16.c"/>
    <files mask="arm_svm_rbf_init_f32.c"/>
    <files mask="arm_svm_sigmoid_init_f32.c"/>
    <files mask="arm_svm_linear_predict_f16.c"/>
    <files mask="arm_svm_sigmoid_init_f16.c"/>
    <files mask="arm_svm_linear_predict_f32.c"/>
    <files mask="arm_svm_polynomial_init_f32.c"/>
    <files mask="arm_svm_linear_init_f16.c"/>
    <files mask="SVMFunctions.c"/>
  </source>
  <source relative_path="DSP/Source/SVMFunctions" type="doc">
    <files mask="CMakeLists.txt"/>
  </source>
  <source relative_path="DSP/Source/FastMathFunctions" type="src">
    <files mask="arm_cos_q31.c"/>
    <files mask="FastMathFunctions.c"/>
    <files mask="arm_sin_q31.c"/>
    <files mask="arm_divide_q15.c"/>
    <files mask="FastMathFunctionsF16.c"/>
    <files mask="arm_sqrt_q15.c"/>
    <files mask="arm_cos_q15.c"/>
    <files mask="arm_vlog_f32.c"/>
    <files mask="arm_sin_f32.c"/>
    <files mask="arm_sin_q15.c"/>
    <files mask="arm_vexp_f16.c"/>
    <files mask="arm_vlog_f16.c"/>
    <files mask="arm_cos_f32.c"/>
    <files mask="arm_vexp_f32.c"/>
    <files mask="arm_sqrt_q31.c"/>
    <files mask="arm_vinverse_f16.c"/>
  </source>
  <source relative_path="DSP/Source/FastMathFunctions" type="doc">
    <files mask="CMakeLists.txt"/>
  </source>
  <source relative_path="DSP/Source/TransformFunctions" type="src">
    <files mask="arm_cfft_init_f32.c"/>
    <files mask="arm_cfft_radix2_f32.c"/>
    <files mask="arm_rfft_fast_f16.c"/>
    <files mask="arm_cfft_radix8_f32.c"/>
    <files mask="arm_cfft_radix2_q15.c"/>
    <files mask="arm_cfft_init_f16.c"/>
    <files mask="arm_cfft_radix4_init_f32.c"/>
    <files mask="arm_cfft_radix4_init_q15.c"/>
    <files mask="arm_cfft_f64.c"/>
    <files mask="arm_cfft_radix2_init_q15.c"/>
    <files mask="arm_rfft_init_f32.c"/>
    <files mask="arm_rfft_fast_f32.c"/>
    <files mask="arm_cfft_init_q15.c"/>
    <files mask="arm_rfft_init_q31.c"/>
    <files mask="TransformFunctionsF16.c"/>
    <files mask="arm_cfft_init_f64.c"/>
    <files mask="arm_dct4_q15.c"/>
    <files mask="arm_cfft_radix8_f16.c"/>
    <files mask="arm_dct4_init_q31.c"/>
    <files mask="arm_cfft_radix4_f16.c"/>
    <files mask="arm_cfft_radix2_init_f32.c"/>
    <files mask="arm_bitreversal_f16.c"/>
    <files mask="arm_dct4_init_q15.c"/>
    <files mask="arm_dct4_q31.c"/>
    <files mask="arm_rfft_q15.c"/>
    <files mask="arm_cfft_radix4_q31.c"/>
    <files mask="arm_cfft_f16.c"/>
    <files mask="arm_cfft_radix2_init_q31.c"/>
    <files mask="TransformFunctions.c"/>
    <files mask="arm_rfft_fast_init_f64.c"/>
    <files mask="arm_cfft_radix4_q15.c"/>
    <files mask="arm_bitreversal.c"/>
    <files mask="arm_rfft_init_q15.c"/>
    <files mask="arm_rfft_q31.c"/>
    <files mask="arm_cfft_radix2_init_f16.c"/>
    <files mask="arm_cfft_radix2_f16.c"/>
    <files mask="arm_cfft_init_q31.c"/>
    <files mask="arm_bitreversal2.c"/>
    <files mask="arm_rfft_fast_init_f32.c"/>
    <files mask="arm_cfft_radix2_q31.c"/>
    <files mask="arm_dct4_f32.c"/>
    <files mask="arm_cfft_f32.c"/>
    <files mask="arm_rfft_fast_init_f16.c"/>
    <files mask="arm_rfft_f32.c"/>
    <files mask="arm_cfft_radix4_init_f16.c"/>
    <files mask="arm_rfft_fast_f64.c"/>
    <files mask="arm_cfft_radix4_init_q31.c"/>
    <files mask="arm_cfft_q31.c"/>
    <files mask="arm_cfft_q15.c"/>
    <files mask="arm_cfft_radix4_f32.c"/>
    <files mask="arm_dct4_init_f32.c"/>
  </source>
  <source relative_path="DSP/Source/TransformFunctions" type="asm_include">
    <files mask="arm_bitreversal2.S"/>
  </source>
  <source relative_path="DSP/Source/TransformFunctions" type="doc">
    <files mask="CMakeLists.txt"/>
  </source>
  <source relative_path="DSP/Source/FilteringFunctions" type="src">
    <files mask="arm_iir_lattice_q15.c"/>
    <files mask="arm_biquad_cascade_stereo_df2T_init_f16.c"/>
    <files mask="arm_iir_lattice_init_q15.c"/>
    <files mask="arm_fir_interpolate_q15.c"/>
    <files mask="arm_correlate_fast_q15.c"/>
    <files mask="arm_lms_norm_init_q15.c"/>
    <files mask="arm_fir_sparse_f32.c"/>
    <files mask="arm_fir_interpolate_f32.c"/>
    <files mask="arm_biquad_cascade_df1_fast_q15.c"/>
    <files mask="arm_iir_lattice_init_q31.c"/>
    <files mask="arm_fir_decimate_q31.c"/>
    <files mask="arm_fir_interpolate_q31.c"/>
    <files mask="arm_fir_decimate_init_f32.c"/>
    <files mask="arm_correlate_fast_opt_q15.c"/>
    <files mask="arm_biquad_cascade_df1_f16.c"/>
    <files mask="arm_lms_q31.c"/>
    <files mask="arm_lms_init_f32.c"/>
    <files mask="arm_levinson_durbin_f16.c"/>
    <files mask="arm_biquad_cascade_df2T_init_f16.c"/>
    <files mask="arm_biquad_cascade_df1_init_f16.c"/>
    <files mask="arm_fir_sparse_q7.c"/>
    <files mask="arm_conv_fast_opt_q15.c"/>
    <files mask="arm_biquad_cascade_stereo_df2T_init_f32.c"/>
    <files mask="arm_biquad_cascade_df1_init_q31.c"/>
    <files mask="arm_biquad_cascade_df2T_init_f64.c"/>
    <files mask="arm_iir_lattice_f32.c"/>
    <files mask="arm_fir_lattice_f32.c"/>
    <files mask="arm_conv_partial_opt_q15.c"/>
    <files mask="arm_iir_lattice_q31.c"/>
    <files mask="arm_correlate_fast_q31.c"/>
    <files mask="arm_biquad_cascade_stereo_df2T_f32.c"/>
    <files mask="arm_conv_f32.c"/>
    <files mask="arm_fir_sparse_q15.c"/>
    <files mask="arm_fir_init_f16.c"/>
    <files mask="arm_fir_sparse_init_q7.c"/>
    <files mask="arm_levinson_durbin_f32.c"/>
    <files mask="arm_biquad_cascade_df1_fast_q31.c"/>
    <files mask="arm_biquad_cascade_df1_init_f32.c"/>
    <files mask="arm_fir_sparse_init_q31.c"/>
    <files mask="arm_biquad_cascade_df2T_f16.c"/>
    <files mask="arm_fir_sparse_init_q15.c"/>
    <files mask="arm_fir_interpolate_init_q15.c"/>
    <files mask="arm_fir_lattice_q15.c"/>
    <files mask="arm_fir_decimate_init_q15.c"/>
    <files mask="arm_conv_partial_fast_opt_q15.c"/>
    <files mask="arm_fir_q31.c"/>
    <files mask="arm_biquad_cascade_df2T_init_f32.c"/>
    <files mask="arm_conv_fast_q15.c"/>
    <files mask="arm_fir_fast_q15.c"/>
    <files mask="arm_conv_q7.c"/>
    <files mask="arm_fir_q15.c"/>
    <files mask="arm_correlate_q15.c"/>
    <files mask="arm_lms_init_q15.c"/>
    <files mask="arm_conv_q15.c"/>
    <files mask="arm_conv_partial_q7.c"/>
    <files mask="arm_lms_f32.c"/>
    <files mask="arm_lms_norm_q15.c"/>
    <files mask="arm_fir_sparse_init_f32.c"/>
    <files mask="arm_lms_norm_init_q31.c"/>
    <files mask="arm_biquad_cascade_df1_init_q15.c"/>
    <files mask="arm_conv_partial_fast_q15.c"/>
    <files mask="arm_fir_init_f32.c"/>
    <files mask="arm_fir_decimate_f32.c"/>
    <files mask="FilteringFunctionsF16.c"/>
    <files mask="arm_fir_lattice_init_q15.c"/>
    <files mask="arm_correlate_opt_q15.c"/>
    <files mask="arm_fir_sparse_q31.c"/>
    <files mask="arm_biquad_cascade_df2T_f32.c"/>
    <files mask="arm_fir_init_q7.c"/>
    <files mask="arm_fir_init_q15.c"/>
    <files mask="arm_fir_interpolate_init_f32.c"/>
    <files mask="arm_conv_opt_q7.c"/>
    <files mask="arm_lms_init_q31.c"/>
    <files mask="arm_biquad_cascade_stereo_df2T_f16.c"/>
    <files mask="arm_fir_fast_q31.c"/>
    <files mask="arm_conv_partial_f32.c"/>
    <files mask="arm_biquad_cascade_df1_q15.c"/>
    <files mask="arm_biquad_cascade_df1_32x64_init_q31.c"/>
    <files mask="arm_lms_norm_q31.c"/>
    <files mask="arm_conv_partial_q15.c"/>
    <files mask="arm_conv_opt_q15.c"/>
    <files mask="arm_fir_decimate_q15.c"/>
    <files mask="arm_iir_lattice_init_f32.c"/>
    <files mask="arm_fir_lattice_init_f32.c"/>
    <files mask="arm_fir_decimate_fast_q31.c"/>
    <files mask="arm_fir_f32.c"/>
    <files mask="arm_fir_decimate_init_q31.c"/>
    <files mask="arm_conv_q31.c"/>
    <files mask="arm_lms_norm_f32.c"/>
    <files mask="arm_conv_partial_fast_q31.c"/>
    <files mask="arm_fir_lattice_init_q31.c"/>
    <files mask="arm_fir_init_q31.c"/>
    <files mask="arm_lms_norm_init_f32.c"/>
    <files mask="arm_correlate_opt_q7.c"/>
    <files mask="arm_fir_lattice_q31.c"/>
    <files mask="arm_conv_partial_q31.c"/>
    <files mask="arm_biquad_cascade_df2T_f64.c"/>
    <files mask="arm_biquad_cascade_df1_f32.c"/>
    <files mask="arm_lms_q15.c"/>
    <files mask="arm_correlate_q31.c"/>
    <files mask="arm_correlate_q7.c"/>
    <files mask="arm_fir_q7.c"/>
    <files mask="arm_conv_fast_q31.c"/>
    <files mask="arm_conv_partial_opt_q7.c"/>
    <files mask="arm_fir_decimate_fast_q15.c"/>
    <files mask="arm_fir_f16.c"/>
    <files mask="arm_fir_interpolate_init_q31.c"/>
    <files mask="arm_correlate_f16.c"/>
    <files mask="arm_biquad_cascade_df1_q31.c"/>
    <files mask="FilteringFunctions.c"/>
    <files mask="arm_correlate_f32.c"/>
    <files mask="arm_biquad_cascade_df1_32x64_q31.c"/>
    <files mask="arm_levinson_durbin_q31.c"/>
  </source>
  <source relative_path="DSP/Source/FilteringFunctions" type="doc">
    <files mask="CMakeLists.txt"/>
  </source>
  <source relative_path="DSP/Source/ControllerFunctions" type="src">
    <files mask="arm_sin_cos_f32.c"/>
    <files mask="ControllerFunctions.c"/>
    <files mask="arm_pid_reset_q31.c"/>
    <files mask="arm_pid_init_q15.c"/>
    <files mask="arm_sin_cos_q31.c"/>
    <files mask="arm_pid_reset_f32.c"/>
    <files mask="arm_pid_reset_q15.c"/>
    <files mask="arm_pid_init_f32.c"/>
    <files mask="arm_pid_init_q31.c"/>
  </source>
  <source relative_path="DSP/Source/ControllerFunctions" type="doc">
    <files mask="CMakeLists.txt"/>
  </source>
  <source relative_path="DSP/Source/MatrixFunctions" type="src">
    <files mask="arm_mat_ldlt_f32.c"/>
    <files mask="arm_mat_vec_mult_q31.c"/>
    <files mask="arm_mat_mult_f32.c"/>
    <files mask="arm_mat_mult_fast_q31.c"/>
    <files mask="arm_mat_init_q15.c"/>
    <files mask="arm_mat_mult_fast_q15.c"/>
    <files mask="arm_mat_trans_q15.c"/>
    <files mask="arm_mat_mult_f16.c"/>
    <files mask="arm_mat_cmplx_mult_q31.c"/>
    <files mask="arm_mat_mult_q31.c"/>
    <files mask="arm_mat_init_f32.c"/>
    <files mask="arm_mat_inverse_f32.c"/>
    <files mask="arm_mat_trans_f64.c"/>
    <files mask="arm_mat_cmplx_trans_f16.c"/>
    <files mask="arm_mat_init_f16.c"/>
    <files mask="arm_mat_cmplx_trans_q31.c"/>
    <files mask="arm_mat_mult_q7.c"/>
    <files mask="arm_mat_trans_q7.c"/>
    <files mask="arm_mat_mult_f64.c"/>
    <files mask="arm_mat_scale_f16.c"/>
    <files mask="arm_mat_scale_q31.c"/>
    <files mask="arm_mat_vec_mult_f32.c"/>
    <files mask="arm_mat_solve_lower_triangular_f32.c"/>
    <files mask="arm_mat_solve_lower_triangular_f64.c"/>
    <files mask="arm_mat_cmplx_mult_f32.c"/>
    <files mask="arm_mat_solve_lower_triangular_f16.c"/>
    <files mask="arm_mat_sub_q15.c"/>
    <files mask="arm_mat_scale_f32.c"/>
    <files mask="arm_mat_sub_f32.c"/>
    <files mask="arm_mat_add_q31.c"/>
    <files mask="arm_mat_sub_f16.c"/>
    <files mask="arm_mat_add_f32.c"/>
    <files mask="MatrixFunctions.c"/>
    <files mask="MatrixFunctionsF16.c"/>
    <files mask="arm_mat_cholesky_f32.c"/>
    <files mask="arm_mat_vec_mult_q7.c"/>
    <files mask="arm_mat_mult_q15.c"/>
    <files mask="arm_mat_add_f16.c"/>
    <files mask="arm_mat_trans_q31.c"/>
    <files mask="arm_mat_trans_f16.c"/>
    <files mask="arm_mat_cholesky_f64.c"/>
    <files mask="arm_mat_solve_upper_triangular_f16.c"/>
    <files mask="arm_mat_ldlt_f64.c"/>
    <files mask="arm_mat_solve_upper_triangular_f32.c"/>
    <files mask="arm_mat_vec_mult_f16.c"/>
    <files mask="arm_mat_scale_q15.c"/>
    <files mask="arm_mat_cholesky_f16.c"/>
    <files mask="arm_mat_sub_q31.c"/>
    <files mask="arm_mat_cmplx_trans_q15.c"/>
    <files mask="arm_mat_inverse_f64.c"/>
    <files mask="arm_mat_solve_upper_triangular_f64.c"/>
    <files mask="arm_mat_inverse_f16.c"/>
    <files mask="arm_mat_init_q31.c"/>
    <files mask="arm_mat_cmplx_mult_f16.c"/>
    <files mask="arm_mat_sub_f64.c"/>
    <files mask="arm_mat_trans_f32.c"/>
    <files mask="arm_mat_cmplx_mult_q15.c"/>
    <files mask="arm_mat_add_q15.c"/>
    <files mask="arm_mat_cmplx_trans_f32.c"/>
    <files mask="arm_mat_vec_mult_q15.c"/>
  </source>
  <source relative_path="DSP/Source/MatrixFunctions" type="doc">
    <files mask="CMakeLists.txt"/>
  </source>
  <source relative_path="DSP/Source/CommonTables" type="src">
    <files mask="CommonTablesF16.c"/>
    <files mask="arm_common_tables_f16.c"/>
    <files mask="arm_mve_tables_f16.c"/>
    <files mask="arm_mve_tables.c"/>
    <files mask="arm_const_structs_f16.c"/>
    <files mask="CommonTables.c"/>
    <files mask="arm_common_tables.c"/>
    <files mask="arm_const_structs.c"/>
  </source>
  <source relative_path="DSP/Source/CommonTables" type="doc">
    <files mask="CMakeLists.txt"/>
  </source>
  <source relative_path="DSP/Source" type="doc">
    <files mask="CMakeLists.txt"/>
  </source>
  <source relative_path="DSP/Source/SupportFunctions" type="src">
    <files mask="SupportFunctionsF16.c"/>
    <files mask="SupportFunctions.c"/>
    <files mask="arm_copy_f16.c"/>
    <files mask="arm_bubble_sort_f32.c"/>
    <files mask="arm_fill_q7.c"/>
    <files mask="arm_float_to_f16.c"/>
    <files mask="arm_fill_f16.c"/>
    <files mask="arm_barycenter_f16.c"/>
    <files mask="arm_selection_sort_f32.c"/>
    <files mask="arm_sort_init_f32.c"/>
    <files mask="arm_q15_to_q7.c"/>
    <files mask="arm_copy_q15.c"/>
    <files mask="arm_copy_f32.c"/>
    <files mask="arm_q7_to_q15.c"/>
    <files mask="arm_q31_to_q15.c"/>
    <files mask="arm_sort_f32.c"/>
    <files mask="arm_q15_to_f16.c"/>
    <files mask="arm_copy_q7.c"/>
    <files mask="arm_heap_sort_f32.c"/>
    <files mask="arm_q15_to_float.c"/>
    <files mask="arm_weighted_sum_f16.c"/>
    <files mask="arm_merge_sort_init_f32.c"/>
    <files mask="arm_quick_sort_f32.c"/>
    <files mask="arm_q7_to_float.c"/>
    <files mask="arm_float_to_q15.c"/>
    <files mask="arm_bitonic_sort_f32.c"/>
    <files mask="arm_q15_to_q31.c"/>
    <files mask="arm_barycenter_f32.c"/>
    <files mask="arm_fill_f32.c"/>
    <files mask="arm_merge_sort_f32.c"/>
    <files mask="arm_insertion_sort_f32.c"/>
    <files mask="arm_f16_to_float.c"/>
    <files mask="arm_float_to_q7.c"/>
    <files mask="arm_weighted_sum_f32.c"/>
    <files mask="arm_fill_q31.c"/>
    <files mask="arm_f16_to_q15.c"/>
    <files mask="arm_q7_to_q31.c"/>
    <files mask="arm_q31_to_float.c"/>
    <files mask="arm_copy_q31.c"/>
    <files mask="arm_fill_q15.c"/>
    <files mask="arm_q31_to_q7.c"/>
    <files mask="arm_float_to_q31.c"/>
  </source>
  <source relative_path="DSP/Source/SupportFunctions" type="doc">
    <files mask="CMakeLists.txt"/>
  </source>
  <source relative_path="DSP/Source/ComplexMathFunctions" type="src">
    <files mask="arm_cmplx_mult_real_f16.c"/>
    <files mask="arm_cmplx_mag_squared_f32.c"/>
    <files mask="arm_cmplx_mult_cmplx_f16.c"/>
    <files mask="arm_cmplx_conj_f32.c"/>
    <files mask="arm_cmplx_mag_q31.c"/>
    <files mask="arm_cmplx_conj_q31.c"/>
    <files mask="arm_cmplx_dot_prod_f32.c"/>
    <files mask="ComplexMathFunctionsF16.c"/>
    <files mask="arm_cmplx_mag_q15.c"/>
    <files mask="arm_cmplx_mag_f32.c"/>
    <files mask="arm_cmplx_dot_prod_q31.c"/>
    <files mask="arm_cmplx_dot_prod_q15.c"/>
    <files mask="arm_cmplx_mult_cmplx_q15.c"/>
    <files mask="arm_cmplx_mag_squared_q15.c"/>
    <files mask="arm_cmplx_conj_q15.c"/>
    <files mask="arm_cmplx_dot_prod_f16.c"/>
    <files mask="arm_cmplx_mult_real_q31.c"/>
    <files mask="arm_cmplx_mult_cmplx_f32.c"/>
    <files mask="arm_cmplx_mag_squared_f16.c"/>
    <files mask="ComplexMathFunctions.c"/>
    <files mask="arm_cmplx_mag_squared_q31.c"/>
    <files mask="arm_cmplx_mult_real_q15.c"/>
    <files mask="arm_cmplx_mult_cmplx_q31.c"/>
    <files mask="arm_cmplx_mult_real_f32.c"/>
    <files mask="arm_cmplx_mag_f16.c"/>
    <files mask="arm_cmplx_conj_f16.c"/>
  </source>
  <source relative_path="DSP/Source/ComplexMathFunctions" type="doc">
    <files mask="CMakeLists.txt"/>
  </source>
  <source relative_path="DSP/Source/BayesFunctions" type="src">
    <files mask="BayesFunctions.c"/>
    <files mask="arm_gaussian_naive_bayes_predict_f16.c"/>
    <files mask="arm_gaussian_naive_bayes_predict_f32.c"/>
    <files mask="BayesFunctionsF16.c"/>
  </source>
  <source relative_path="DSP/Source/BayesFunctions" type="doc">
    <files mask="CMakeLists.txt"/>
  </source>
  <source relative_path="DSP/Source/BasicMathFunctions" type="src">
    <files mask="arm_or_u32.c"/>
    <files mask="arm_clip_q31.c"/>
    <files mask="arm_mult_f32.c"/>
    <files mask="arm_dot_prod_q31.c"/>
    <files mask="arm_sub_f32.c"/>
    <files mask="arm_sub_q15.c"/>
    <files mask="arm_shift_q7.c"/>
    <files mask="arm_clip_f32.c"/>
    <files mask="arm_xor_u16.c"/>
    <files mask="arm_abs_q7.c"/>
    <files mask="arm_mult_f16.c"/>
    <files mask="arm_and_u8.c"/>
    <files mask="arm_abs_q31.c"/>
    <files mask="arm_mult_q31.c"/>
    <files mask="arm_dot_prod_f32.c"/>
    <files mask="arm_or_u16.c"/>
    <files mask="arm_clip_q15.c"/>
    <files mask="arm_clip_q7.c"/>
    <files mask="arm_or_u8.c"/>
    <files mask="arm_offset_q31.c"/>
    <files mask="arm_and_u32.c"/>
    <files mask="arm_clip_f16.c"/>
    <files mask="arm_shift_q15.c"/>
    <files mask="arm_shift_q31.c"/>
    <files mask="arm_negate_q7.c"/>
    <files mask="arm_add_q15.c"/>
    <files mask="arm_not_u16.c"/>
    <files mask="arm_add_q7.c"/>
    <files mask="arm_offset_f32.c"/>
    <files mask="arm_xor_u32.c"/>
    <files mask="arm_dot_prod_q15.c"/>
    <files mask="arm_mult_q7.c"/>
    <files mask="arm_dot_prod_q7.c"/>
    <files mask="arm_abs_f32.c"/>
    <files mask="arm_negate_q15.c"/>
    <files mask="arm_scale_q15.c"/>
    <files mask="arm_not_u8.c"/>
    <files mask="arm_mult_q15.c"/>
    <files mask="arm_add_q31.c"/>
    <files mask="arm_scale_q7.c"/>
    <files mask="arm_xor_u8.c"/>
    <files mask="BasicMathFunctionsF16.c"/>
    <files mask="arm_offset_q7.c"/>
    <files mask="BasicMathFunctions.c"/>
    <files mask="arm_sub_q31.c"/>
    <files mask="arm_offset_f16.c"/>
    <files mask="arm_negate_f16.c"/>
    <files mask="arm_abs_f16.c"/>
    <files mask="arm_scale_f16.c"/>
    <files mask="arm_add_f16.c"/>
    <files mask="arm_sub_q7.c"/>
    <files mask="arm_negate_f32.c"/>
    <files mask="arm_not_u32.c"/>
    <files mask="arm_dot_prod_f16.c"/>
    <files mask="arm_abs_q15.c"/>
    <files mask="arm_scale_f32.c"/>
    <files mask="arm_and_u16.c"/>
    <files mask="arm_sub_f16.c"/>
    <files mask="arm_add_f32.c"/>
    <files mask="arm_offset_q15.c"/>
    <files mask="arm_negate_q31.c"/>
    <files mask="arm_scale_q31.c"/>
  </source>
  <source relative_path="DSP/Source/BasicMathFunctions" type="doc">
    <files mask="CMakeLists.txt"/>
  </source>
  <source relative_path="DSP/Source/DistanceFunctions" type="src">
    <files mask="arm_braycurtis_distance_f32.c"/>
    <files mask="arm_rogerstanimoto_distance.c"/>
    <files mask="arm_jensenshannon_distance_f32.c"/>
    <files mask="arm_cityblock_distance_f16.c"/>
    <files mask="arm_cosine_distance_f16.c"/>
    <files mask="arm_chebyshev_distance_f16.c"/>
    <files mask="arm_jaccard_distance.c"/>
    <files mask="arm_minkowski_distance_f32.c"/>
    <files mask="arm_cosine_distance_f32.c"/>
    <files mask="arm_correlation_distance_f32.c"/>
    <files mask="arm_euclidean_distance_f16.c"/>
    <files mask="DistanceFunctions.c"/>
    <files mask="arm_correlation_distance_f16.c"/>
    <files mask="arm_hamming_distance.c"/>
    <files mask="arm_jensenshannon_distance_f16.c"/>
    <files mask="arm_canberra_distance_f32.c"/>
    <files mask="arm_boolean_distance.c"/>
    <files mask="DistanceFunctionsF16.c"/>
    <files mask="arm_minkowski_distance_f16.c"/>
    <files mask="arm_euclidean_distance_f32.c"/>
    <files mask="arm_russellrao_distance.c"/>
    <files mask="arm_kulsinski_distance.c"/>
    <files mask="arm_canberra_distance_f16.c"/>
    <files mask="arm_yule_distance.c"/>
    <files mask="arm_sokalsneath_distance.c"/>
    <files mask="arm_sokalmichener_distance.c"/>
    <files mask="arm_braycurtis_distance_f16.c"/>
    <files mask="arm_cityblock_distance_f32.c"/>
    <files mask="arm_dice_distance.c"/>
    <files mask="arm_chebyshev_distance_f32.c"/>
  </source>
  <source relative_path="DSP/Source/DistanceFunctions" type="c_include">
    <files mask="arm_boolean_distance_template.h"/>
  </source>
  <source relative_path="DSP/Source/DistanceFunctions" type="doc">
    <files mask="CMakeLists.txt"/>
  </source>
</component>-->
    <component id="COPY_BSD_License.MIMX9352" name="COPY_BSD_License" brief="COPY of BSD-3-Clause license" version="1.0.0" full_name="COPY of BSD-3-Clause license" devices="MIMX9352xxxxM" user_visible="true" type="other" package_base_path="./" project_base_path="src">
      <source relative_path="./" type="other">
        <files mask="COPYING-BSD-3"/>
      </source>
    </component>
    <component id="project_template.MIMX9352.MIMX9352" name="MIMX9352" brief="Devices_project_template MIMX9352" version="1.0.0" full_name="Devices_project_template MIMX9352" devices="MIMX9352xxxxM" device_cores="cm33_MIMX9352xxxxM" category="Board Support/SDK Project Template" user_visible="true" type="project_template" package_base_path="devices/MIMX9352/project_template" project_base_path="board">
      <dependencies>
        <all>
          <component_dependency value="component.lpuart_adapter.MIMX9352"/>
          <component_dependency value="platform.devices.MIMX9352_startup.MIMX9352"/>
          <component_dependency value="platform.drivers.clock.MIMX9352"/>
          <component_dependency value="platform.drivers.common.MIMX9352"/>
          <component_dependency value="platform.drivers.iomuxc.MIMX9352"/>
          <component_dependency value="platform.drivers.lpuart.MIMX9352"/>
          <component_dependency value="platform.drivers.rgpio.MIMX9352"/>
          <any_of>
            <all>
              <component_dependency value="component.serial_manager.MIMX9352"/>
              <component_dependency value="platform.utilities.assert.MIMX9352"/>
              <component_dependency value="utility.debug_console.MIMX9352"/>
            </all>
            <all>
              <component_dependency value="platform.utilities.assert_lite.MIMX9352"/>
              <component_dependency value="utility.debug_console_lite.MIMX9352"/>
            </all>
          </any_of>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="board.h"/>
        <files mask="clock_config.h"/>
        <files mask="pin_mux.h"/>
        <files mask="peripherals.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="board.c"/>
        <files mask="clock_config.c"/>
        <files mask="pin_mux.c"/>
        <files mask="peripherals.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="RTE_Device.MIMX9352" name="RTE_Device" brief="Rte_device" version="1.0.0" full_name="Rte_device" devices="MIMX9352xxxxM" category="Device/SDK Project Template" user_visible="true" type="project_template" package_base_path="devices/MIMX9352/template" project_base_path="board">
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="tools.MIMX9352" name="cmake_toolchain" brief="Cmake_toolchain" version="1.0.0" full_name="Cmake_toolchain" devices="MIMX9352xxxxM" user_visible="true" type="other" package_base_path="tools/cmake_toolchain_files" project_base_path="cmake_toolchain_files">
      <source relative_path="./" type="script">
        <files mask="armgcc.cmake"/>
        <files mask="xcc.cmake"/>
        <files mask="xclang.cmake"/>
        <files mask="armgcc_force_cpp.cmake"/>
        <files mask="mcux_config.cmake"/>
      </source>
    </component>
    <component id="component.button.MIMX9352" name="button" brief="Component button" version="1.0.0" full_name="Component button" devices="MIMX9352xxxxM" device_cores="cm33_MIMX9352xxxxM" user_visible="true" type="software_component" package_base_path="components/button" project_base_path="component/button">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMX9352"/>
          <component_dependency value="component.timer_manager.MIMX9352"/>
          <component_dependency value="component.rgpio_adapter.MIMX9352"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_button.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_button.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.codec_adapters.MIMX9352" name="codec_adapters" brief="Component codec adapters for multi codec" version="2.2.0" full_name="Component codec_adapters" devices="MIMX9352xxxxM" device_cores="cm33_MIMX9352xxxxM" user_visible="true" type="abstraction_layer" package_base_path="components/codec/" project_base_path="codec">
      <dependencies>
        <all>
          <component_dependency value="driver.codec.MIMX9352"/>
          <any_of>
            <component_dependency value="component.wm8960_adapter.MIMX9352"/>
            <component_dependency value="component.da7212_adapter.MIMX9352"/>
            <component_dependency value="component.sgtl_adapter.MIMX9352"/>
            <component_dependency value="component.wm8962_adapter.MIMX9352"/>
          </any_of>
        </all>
      </dependencies>
      <source relative_path="port" type="src">
        <files mask="fsl_codec_adapter.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./port" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.codec_i2c.MIMX9352" name="codec_i2c" brief="Component codec_i2c" version="2.1.0" full_name="Component codec_i2c" devices="MIMX9352xxxxM" device_cores="cm33_MIMX9352xxxxM" user_visible="true" type="software_component" package_base_path="components/codec/i2c" project_base_path="codec">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMX9352"/>
          <any_of>
            <component_dependency value="component.lpi2c_adapter.MIMX9352"/>
            <component_dependency value="component.i3c_adapter.MIMX9352"/>
          </any_of>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_codec_i2c.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_codec_i2c.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="component_codec_i2c_MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.common_task.MIMX9352" name="common_task" brief="Component common_task" version="1.0.0" full_name="Component common_task" devices="MIMX9352xxxxM" device_cores="cm33_MIMX9352xxxxM" user_visible="true" type="software_component" package_base_path="components/common_task" project_base_path="component/common_task">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMX9352"/>
          <component_dependency value="component.osa.MIMX9352"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_common_task.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_common_task.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.da7212_adapter.MIMX9352" name="codec_da7212_adapter" brief="Component da7212 adapter for single codec" version="2.2.0" full_name="Component da7212_adapter" devices="MIMX9352xxxxM" device_cores="cm33_MIMX9352xxxxM" user_visible="true" type="abstraction_layer" package_base_path="components/codec" project_base_path="codec">
      <dependencies>
        <all>
          <component_dependency value="driver.dialog7212.MIMX9352"/>
          <component_dependency value="driver.codec.MIMX9352"/>
        </all>
      </dependencies>
      <source relative_path="port/da7212" type="src">
        <files mask="fsl_codec_da7212_adapter.c"/>
      </source>
      <source relative_path="port/da7212" type="c_include">
        <files mask="fsl_codec_da7212_adapter.h"/>
      </source>
      <source relative_path="port" type="c_include">
        <files mask="fsl_codec_adapter.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./port/da7212" type="c_include"/>
        <include_path relative_path="./port" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.i3c_adapter.MIMX9352" name="i3c_adapter" brief="Component i3c_adapter" version="1.0.0" full_name="Component i3c_adapter" devices="MIMX9352xxxxM" device_cores="cm33_MIMX9352xxxxM" user_visible="true" type="abstraction_layer" package_base_path="components/i2c" project_base_path="component/i2c">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMX9352"/>
          <component_dependency value="platform.drivers.i3c.MIMX9352"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_i2c.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_i3c.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.i3c_bus.MIMX9352" name="i3c_bus" brief="Component i3c_bus" version="1.0.1" full_name="Component i3c_bus" devices="MIMX9352xxxxM" device_cores="cm33_MIMX9352xxxxM" user_visible="true" type="software_component" package_base_path="components/i3c_bus" project_base_path="component/i3c_bus">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMX9352"/>
          <component_dependency value="component.lists.MIMX9352"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_i3c.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_i3c.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.i3c_bus_adapter.MIMX9352" name="i3c_bus_adapter" brief="Component i3c_bus_adapter" version="1.0.1" full_name="Component i3c_bus_adapter" devices="MIMX9352xxxxM" device_cores="cm33_MIMX9352xxxxM" user_visible="true" type="software_component" package_base_path="components/i3c_bus" project_base_path="component/i3c_bus">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.i3c.MIMX9352"/>
          <component_dependency value="component.i3c_bus.MIMX9352"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_i3c_adapter.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_i3c_adapter.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.lists.MIMX9352" name="lists" brief="Component lists" version="1.0.0" full_name="Component lists" devices="MIMX9352xxxxM" device_cores="cm33_MIMX9352xxxxM" user_visible="true" type="software_component" package_base_path="components/lists" project_base_path="component/lists">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMX9352"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_generic_list.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_generic_list.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="component_lists_MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.lpi2c_adapter.MIMX9352" name="lpi2c_adapter" brief="Component lpi2c_adapter" version="1.0.0" full_name="Component lpi2c_adapter" devices="MIMX9352xxxxM" device_cores="cm33_MIMX9352xxxxM" user_visible="true" type="abstraction_layer" package_base_path="components/i2c" project_base_path="component/i2c">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMX9352"/>
          <component_dependency value="platform.drivers.lpi2c.MIMX9352"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_i2c.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_lpi2c.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="component_lpi2c_adapter_MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.lpit_adapter.MIMX9352" name="lpit_adapter" brief="Component lpit_adapter" version="1.0.0" full_name="Component lpit_adapter" devices="MIMX9352xxxxM" device_cores="cm33_MIMX9352xxxxM" user_visible="true" type="abstraction_layer" package_base_path="components/timer" project_base_path="component/timer">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMX9352"/>
          <component_dependency value="platform.drivers.lpit.MIMX9352"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_timer.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_lpit.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.lpspi_adapter.MIMX9352" name="lpspi_adapter" brief="Component lpspi_adapter" version="1.0.0" full_name="Component lpspi_adapter" devices="MIMX9352xxxxM" device_cores="cm33_MIMX9352xxxxM" user_visible="true" type="abstraction_layer" package_base_path="components/spi" project_base_path="component/spi">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMX9352"/>
          <component_dependency value="platform.drivers.lpspi.MIMX9352"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_spi.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_lpspi.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.lptmr_adapter.MIMX9352" name="lptmr_adapter" brief="Component lptmr_adapter" version="1.0.0" full_name="Component lptmr_adapter" devices="MIMX9352xxxxM" device_cores="cm33_MIMX9352xxxxM" user_visible="true" type="abstraction_layer" package_base_path="components/timer" project_base_path="component/timer">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMX9352"/>
          <component_dependency value="platform.drivers.lptmr.MIMX9352"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_timer.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_lptmr.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.lpuart_adapter.MIMX9352" name="lpuart_adapter" brief="Component lpuart_adapter" version="1.0.0" full_name="lpuart_adapter" devices="MIMX9352xxxxM" device_cores="cm33_MIMX9352xxxxM" user_visible="true" type="utilities" package_base_path="components/uart" project_base_path="component/uart">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMX9352"/>
          <component_dependency value="platform.drivers.lpuart.MIMX9352"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_uart.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_lpuart.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="component_lpuart_adapter_MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.lpuart_dma_adapter.MIMX9352" name="lpuart_dma_adapter" brief="Component lpuart_dma_adapter" version="1.0.0" full_name="lpuart_dma_adapter" devices="MIMX9352xxxxM" device_cores="cm33_MIMX9352xxxxM" user_visible="true" type="utilities" package_base_path="components/uart" project_base_path="component/uart">
      <defines>
        <define name="HAL_UART_DMA_ENABLE" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.lpuart_adapter.MIMX9352"/>
          <component_dependency value="component.timer_manager.MIMX9352"/>
          <component_dependency value="platform.drivers.lpuart_edma.MIMX9352"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_uart.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_lpuart.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.mem_manager.MIMX9352" name="mem_manager" brief="Component mem_manager" version="1.0.0" full_name="Component mem_manager" devices="MIMX9352xxxxM" device_cores="cm33_MIMX9352xxxxM" user_visible="true" type="software_component" package_base_path="components/mem_manager" project_base_path="component/mem_manager">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMX9352"/>
          <component_dependency value="component.lists.MIMX9352"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_mem_manager.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_mem_manager.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.mem_manager_light.MIMX9352" name="mem_manager_light" brief="Component mem_manager_light" version="1.0.0" full_name="Component mem_manager_light" devices="MIMX9352xxxxM" device_cores="cm33_MIMX9352xxxxM" user_visible="true" type="software_component" package_base_path="components/mem_manager" project_base_path="component/mem_manager">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMX9352"/>
          <component_dependency value="component.lists.MIMX9352"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_mem_manager.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_mem_manager_light.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.osa.MIMX9352" name="osa" brief="Component osa" version="1.0.0" full_name="Component osa" devices="MIMX9352xxxxM" device_cores="cm33_MIMX9352xxxxM" user_visible="false" type="software_component" package_base_path="components/osa" project_base_path="component/osa">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMX9352"/>
          <component_dependency value="component.lists.MIMX9352"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_os_abstraction.h"/>
        <files mask="fsl_os_abstraction_config.h"/>
      </source>
      <source condition="middleware.baremetal.MIMX9352" relative_path="./" type="c_include">
        <files mask="fsl_os_abstraction_bm.h"/>
      </source>
      <source condition="middleware.baremetal.MIMX9352" relative_path="./" type="src">
        <files mask="fsl_os_abstraction_bm.c"/>
      </source>
      <source condition="middleware.freertos-kernel.MIMX9352" relative_path="./" type="c_include">
        <files mask="fsl_os_abstraction_free_rtos.h"/>
      </source>
      <source condition="middleware.freertos-kernel.MIMX9352" relative_path="./" type="src">
        <files mask="fsl_os_abstraction_free_rtos.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.osa_bm.MIMX9352" name="osa_bm" brief="Component osa_bm" version="1.0.0" full_name="Component osa_bm" devices="MIMX9352xxxxM" device_cores="cm33_MIMX9352xxxxM" user_visible="true" type="software_component" package_base_path="components/osa" project_base_path="component/osa">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMX9352"/>
          <component_dependency value="component.lists.MIMX9352"/>
          <component_dependency value="component.osa_interface.MIMX9352"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_os_abstraction_bm.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_os_abstraction_bm.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.osa_free_rtos.MIMX9352" name="osa_free_rtos" brief="Component osa_free_rtos" version="1.0.0" full_name="Component osa_free_rtos" devices="MIMX9352xxxxM" device_cores="cm33_MIMX9352xxxxM" user_visible="true" type="software_component" package_base_path="components/osa" project_base_path="component/osa">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.MIMX9352"/>
          <component_dependency value="platform.drivers.common.MIMX9352"/>
          <component_dependency value="component.lists.MIMX9352"/>
          <component_dependency value="component.osa_interface.MIMX9352"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_os_abstraction_free_rtos.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_os_abstraction_free_rtos.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.osa_interface.MIMX9352" name="osa_interface" brief="Component osa interface" version="1.0.0" full_name="Component osa interface" devices="MIMX9352xxxxM" device_cores="cm33_MIMX9352xxxxM" user_visible="true" type="software_component" package_base_path="components/osa" project_base_path="component/osa">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMX9352"/>
          <component_dependency value="component.lists.MIMX9352"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_os_abstraction.h"/>
        <files mask="fsl_os_abstraction_config.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.panic.MIMX9352" name="panic" brief="Component panic" version="1.0.0" full_name="Component panic" devices="MIMX9352xxxxM" device_cores="cm33_MIMX9352xxxxM" user_visible="true" type="software_component" package_base_path="components/panic" project_base_path="component/panic">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMX9352"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_panic.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_panic.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.pwm_tpm_adapter.MIMX9352" name="pwm_tpm_adapter" brief="Component pwm_tpm_adapter" version="1.0.0" full_name="Component pwm_tpm_adapter" devices="MIMX9352xxxxM" device_cores="cm33_MIMX9352xxxxM" user_visible="true" type="abstraction_layer" package_base_path="components/pwm" project_base_path="component/pwm">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMX9352"/>
          <component_dependency value="platform.drivers.tpm.MIMX9352"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_pwm.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_pwm_tpm.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.rgpio_adapter.MIMX9352" name="rgpio_adapter" brief="Component rgpio_adapter" version="1.0.0" full_name="Component rgpio_adapter" devices="MIMX9352xxxxM" device_cores="cm33_MIMX9352xxxxM" user_visible="true" type="abstraction_layer" package_base_path="components/gpio" project_base_path="component/gpio">
      <dependencies>
        <component_dependency value="platform.drivers.rgpio.MIMX9352"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_gpio.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_rgpio.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.serial_manager.MIMX9352" name="serial_manager" brief="Component serial_manager" version="1.0.1" full_name="Serial Manager" devices="MIMX9352xxxxM" device_cores="cm33_MIMX9352xxxxM" user_visible="true" type="utilities" package_base_path="components/serial_manager" project_base_path="component/serial_manager">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMX9352"/>
          <component_dependency value="component.lists.MIMX9352"/>
          <any_of>
            <component_dependency value="component.serial_manager_uart.MIMX9352"/>
            <component_dependency value="component.serial_manager_spi.MIMX9352"/>
            <component_dependency value="component.serial_manager_swo.MIMX9352"/>
            <component_dependency value="component.serial_manager_virtual.MIMX9352"/>
          </any_of>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_serial_manager.h"/>
        <files mask="fsl_component_serial_port_internal.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_serial_manager.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="component_serial_manager_MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.serial_manager_spi.MIMX9352" name="serial_manager_spi" brief="Component serial_manager_spi" version="1.0.0" full_name="Serial Manager spi" devices="MIMX9352xxxxM" device_cores="cm33_MIMX9352xxxxM" user_visible="true" type="utilities" package_base_path="components/serial_manager" project_base_path="component/serial_manager">
      <defines>
        <define name="SERIAL_PORT_TYPE_SPI" value="1"/>
        <define name="SERIAL_PORT_TYPE_SPI_MASTER" value="1"/>
        <define name="SERIAL_PORT_TYPE_SPI_SLAVE" value="1"/>
        <define name="SERIAL_MANAGER_NON_BLOCKING_MODE" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.serial_manager.MIMX9352"/>
          <component_dependency value="platform.drivers.lpspi.MIMX9352"/>
          <component_dependency value="component.lpspi_adapter.MIMX9352"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_serial_port_spi.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_serial_port_spi.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.serial_manager_swo.MIMX9352" name="serial_manager_swo" brief="Component serial_manager_swo" version="1.0.0" full_name="Serial Manager Swo" devices="MIMX9352xxxxM" device_cores="cm33_MIMX9352xxxxM" user_visible="true" type="utilities" package_base_path="components/serial_manager" project_base_path="component/serial_manager">
      <defines>
        <define name="SERIAL_PORT_TYPE_SWO" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMX9352"/>
          <component_dependency value="component.serial_manager.MIMX9352"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_serial_port_swo.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_serial_port_swo.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.serial_manager_uart.MIMX9352" name="serial_manager_uart" brief="Component serial_manager_uart" version="1.0.0" full_name="Serial Manager uart" devices="MIMX9352xxxxM" device_cores="cm33_MIMX9352xxxxM" user_visible="true" type="utilities" package_base_path="components/serial_manager" project_base_path="component/serial_manager">
      <defines>
        <define name="SERIAL_PORT_TYPE_UART" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.lpuart_adapter.MIMX9352"/>
          <component_dependency value="component.serial_manager.MIMX9352"/>
          <component_dependency value="platform.drivers.lpuart.MIMX9352"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_serial_port_uart.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_serial_port_uart.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="component_serial_manager_uart_MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.serial_manager_virtual.MIMX9352" name="serial_manager_virtual" brief="Component serial_manager_virtual" version="1.0.0" full_name="Serial Manager Virtual" devices="MIMX9352xxxxM" device_cores="cm33_MIMX9352xxxxM" user_visible="true" type="utilities" package_base_path="components/serial_manager" project_base_path="component/serial_manager">
      <defines>
        <define name="SERIAL_PORT_TYPE_VIRTUAL" value="1"/>
        <define name="DEBUG_CONSOLE_TRANSFER_NON_BLOCKING" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.serial_manager.MIMX9352"/>
          <component_dependency value="platform.drivers.common.MIMX9352"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_serial_port_virtual.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_serial_port_virtual.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.sgtl_adapter.MIMX9352" name="codec_sgtl_adapter" brief="Component sgtl5000 adapter for single codec" version="2.2.0" full_name="Component sgtl_adapter" devices="MIMX9352xxxxM" device_cores="cm33_MIMX9352xxxxM" user_visible="true" type="abstraction_layer" package_base_path="components/codec" project_base_path="codec">
      <dependencies>
        <all>
          <component_dependency value="driver.sgtl5000.MIMX9352"/>
          <component_dependency value="driver.codec.MIMX9352"/>
        </all>
      </dependencies>
      <source relative_path="port/sgtl5000" type="src">
        <files mask="fsl_codec_sgtl_adapter.c"/>
      </source>
      <source relative_path="port/sgtl5000" type="c_include">
        <files mask="fsl_codec_sgtl_adapter.h"/>
      </source>
      <source relative_path="port" type="c_include">
        <files mask="fsl_codec_adapter.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./port/sgtl5000" type="c_include"/>
        <include_path relative_path="./port/" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.silicon_id.MIMX9352" name="silicon_id" brief="Driver silicon_id" version="2.0.1" full_name="Driver silicon_id" devices="MIMX9352xxxxM" device_cores="cm33_MIMX9352xxxxM" user_visible="true" type="software_component" package_base_path="components/silicon_id" project_base_path="component/silicon_id">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMX9352"/>
          <component_dependency value="component.silicon_id_imx93.MIMX9352"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_silicon_id.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_silicon_id.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="component_silicon_id_MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.silicon_id_imx93.MIMX9352" name="silicon_id_imx93" brief="Driver silicon_id imx93" version="2.0.0" full_name="Driver silicon_id_imx93" devices="MIMX9352xxxxM" device_cores="cm33_MIMX9352xxxxM" user_visible="true" type="software_component" package_base_path="components/silicon_id/socs/imx93" project_base_path="component/silicon_id">
      <dependencies>
        <component_dependency value="component.silicon_id.MIMX9352"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_silicon_id_soc.c"/>
      </source>
      <source relative_path=".." project_relative_path="./" type="c_include">
        <files mask="fsl_silicon_id_soc.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="component_silicon_id_imx93_MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="../" project_relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.software_crc_adapter.MIMX9352" name="software_crc_adapter" brief="Component software_crc_adapter" version="1.0.0" full_name="Component software_crc_adapter" devices="MIMX9352xxxxM" device_cores="cm33_MIMX9352xxxxM" user_visible="true" type="abstraction_layer" package_base_path="components/crc" project_base_path="component/crc">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMX9352"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_crc.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_software_crc.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.software_rng_adapter.MIMX9352" name="software_rng_adapter" brief="Component software_rng_adapter" version="1.0.0" full_name="Component software_rng_adapter" devices="MIMX9352xxxxM" device_cores="cm33_MIMX9352xxxxM" user_visible="true" type="abstraction_layer" package_base_path="components/rng" project_base_path="component/rng">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMX9352"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_rng.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_software_rng.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.timer_manager.MIMX9352" name="timer_manager" brief="Component timer_manager" version="1.0.0" full_name="Component timer_manager" devices="MIMX9352xxxxM" device_cores="cm33_MIMX9352xxxxM" user_visible="true" type="software_component" package_base_path="components/timer_manager" project_base_path="component/timer_manager">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMX9352"/>
          <component_dependency value="component.lists.MIMX9352"/>
          <any_of>
            <component_dependency value="component.tpm_adapter.MIMX9352"/>
            <component_dependency value="component.lptmr_adapter.MIMX9352"/>
            <component_dependency value="component.lpit_adapter.MIMX9352"/>
          </any_of>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_timer_manager.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_timer_manager.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.tpm_adapter.MIMX9352" name="tpm_adapter" brief="Component tpm_adapter" version="1.0.0" full_name="Component tpm_adapter" devices="MIMX9352xxxxM" device_cores="cm33_MIMX9352xxxxM" user_visible="true" type="abstraction_layer" package_base_path="components/timer" project_base_path="component/timer">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMX9352"/>
          <component_dependency value="platform.drivers.tpm.MIMX9352"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_timer.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_tpm.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.wm8960_adapter.MIMX9352" name="codec_wm8960_adapter" brief="Component wm8960 adapter for single codecs" version="2.2.0" full_name="Component wm8960_adapter" devices="MIMX9352xxxxM" device_cores="cm33_MIMX9352xxxxM" user_visible="true" type="abstraction_layer" package_base_path="components/codec/" project_base_path="codec">
      <dependencies>
        <all>
          <component_dependency value="driver.wm8960.MIMX9352"/>
          <component_dependency value="driver.codec.MIMX9352"/>
        </all>
      </dependencies>
      <source relative_path="port/wm8960" type="src">
        <files mask="fsl_codec_wm8960_adapter.c"/>
      </source>
      <source relative_path="port/wm8960" type="c_include">
        <files mask="fsl_codec_wm8960_adapter.h"/>
      </source>
      <source relative_path="port" type="c_include">
        <files mask="fsl_codec_adapter.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="component_wm8960_adapter_MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./port/wm8960" type="c_include"/>
        <include_path relative_path="./port/" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.wm8962_adapter.MIMX9352" name="codec_wm8962_adapter" brief="Component wm8962 adapter for single codecs" version="2.2.0" full_name="Component wm8962_adapter" devices="MIMX9352xxxxM" device_cores="cm33_MIMX9352xxxxM" user_visible="true" type="abstraction_layer" package_base_path="components/codec/" project_base_path="codec">
      <dependencies>
        <all>
          <component_dependency value="driver.wm8962.MIMX9352"/>
          <component_dependency value="driver.codec.MIMX9352"/>
        </all>
      </dependencies>
      <source relative_path="port/wm8962" type="src">
        <files mask="fsl_codec_wm8962_adapter.c"/>
      </source>
      <source relative_path="port/wm8962" type="c_include">
        <files mask="fsl_codec_wm8962_adapter.h"/>
      </source>
      <source relative_path="port" type="c_include">
        <files mask="fsl_codec_adapter.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="component_wm8962_adapter_MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./port/wm8962" type="c_include"/>
        <include_path relative_path="./port/" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.devices.MIMX9352_CMSIS.MIMX9352" name="MIMX9352_CMSIS" brief="Device MIMX9352_cmsis" version="1.0.0" full_name="Device MIMX9352_cmsis" devices="MIMX9352xxxxM" device_cores="cm33_MIMX9352xxxxM" user_visible="true" type="CMSIS_Include" package_base_path="devices/MIMX9352" project_base_path="device">
      <dependencies>
        <component_dependency value="CMSIS_Include_core_cm.MIMX9352"/>
      </dependencies>
      <source relative_path="./" type="c_include" device_cores="cm33_MIMX9352xxxxM">
        <files mask="fsl_device_registers.h"/>
        <files mask="MIMX9352_cm33.h"/>
        <files mask="MIMX9352_cm33_features.h"/>
        <files mask="system_MIMX9352_cm33.h"/>
      </source>
      <source relative_path="./" type="src" device_cores="cm33_MIMX9352xxxxM">
        <files mask="system_MIMX9352_cm33.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="device_MIMX9352_CMSIS_MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include" device_cores="cm33_MIMX9352xxxxM"/>
      </include_paths>
    </component>
    <component id="platform.devices.MIMX9352_debugger.MIMX9352" name="MIMX9352_debugger" brief="Device MIMX9352_debugger" version="1.0.0" full_name="Device MIMX9352_debugger" devices="MIMX9352xxxxM" user_visible="true" type="debugger" package_base_path="devices/MIMX9352" project_base_path="MIMX9352"/>
    <component id="platform.devices.MIMX9352_linker.MIMX9352" name="MIMX9352_linker" brief="Device MIMX9352_linker" version="1.0.0" full_name="Device MIMX9352_linker" devices="MIMX9352xxxxM" user_visible="true" type="linker" package_base_path="devices/MIMX9352" project_base_path="MIMX9352">
      <source toolchain="armgcc" relative_path="gcc" type="linker" device_cores="cm33_MIMX9352xxxxM">
        <files mask="MIMX9352_cm33_flash.ld"/>
        <files mask="MIMX9352_cm33_ram.ld"/>
      </source>
      <source toolchain="iar" relative_path="iar" type="linker" device_cores="cm33_MIMX9352xxxxM">
        <files mask="MIMX9352_cm33_flash.icf"/>
        <files mask="MIMX9352_cm33_ram.icf"/>
      </source>
    </component>
    <component id="platform.devices.MIMX9352_startup.MIMX9352" name="MIMX9352_startup" brief="Device MIMX9352_startup" version="1.0.0" full_name="Device MIMX9352_startup" devices="MIMX9352xxxxM" category="Device/Startup" user_visible="true" type="startup" package_base_path="devices/MIMX9352" project_base_path="startup">
      <source toolchain="armgcc" relative_path="gcc" project_relative_path="./" type="asm_include" device_cores="cm33_MIMX9352xxxxM">
        <files mask="startup_MIMX9352_cm33.S"/>
      </source>
      <source toolchain="iar" relative_path="iar" project_relative_path="./" type="asm_include" device_cores="cm33_MIMX9352xxxxM">
        <files mask="startup_MIMX9352_cm33.s"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="device_MIMX9352_startup_MIMX9352.cmake" hidden="true"/>
      </source>
    </component>
    <component id="docs.FreeRTOS.MIMX9352" name="FreeRTOS documentation" brief="FreeRTOS documentation" version="1.0.0" full_name="FreeRTOS documentation" devices="MIMX9352xxxxM" user_visible="true" type="documentation" package_base_path="docs/FreeRTOS" project_base_path="FreeRTOS">
      <dependencies>
        <component_dependency value="middleware.freertos-kernel.MIMX9352"/>
      </dependencies>
      <source relative_path="./" type="doc">
        <files mask="Getting Started with MCUXpressoSDK and FreeRTOS OS.pdf"/>
      </source>
    </component>
    <component id="docs.MIMX9352.MIMX9352" name="MIMX9352" brief="Docs mimx9352" version="1.0.0" full_name="Docs mimx9352" devices="MIMX9352xxxxM" user_visible="true" type="documentation" package_base_path="docs" project_base_path="docs">
      <source relative_path="./" type="doc">
        <files mask="Getting Started with MCUXpresso SDK for MCIMX93-EVK.pdf"/>
        <files mask="MCUXpresso SDK Release Notes for MCIMX93-EVK.pdf"/>
      </source>
    </component>
    <component id="docs.eiq.MIMX9352" name="eiq" brief="Docs eiq" version="1.0.0" full_name="Docs eiq" devices="MIMX9352xxxxM" user_visible="true" type="documentation" package_base_path="docs/EIQ" project_base_path="EIQ">
      <source relative_path="./" type="doc">
        <files mask="NPU User's Guide.pdf"/>
        <files mask="eIQ DeepViewRT User's Guide.pdf"/>
        <files mask="eIQ Glow Ahead of Time User Guide.pdf"/>
        <files mask="eIQ TensorFlow Lite Library User's Guide.pdf"/>
        <files mask="eIQ_Media_Processing_Pipeline_Release_Notes.pdf"/>
        <files mask="eIQ_Media_Processing_Pipeline_User_Guide.pdf"/>
      </source>
    </component>
    <component id="docs.multicore.MIMX9352" name="docs_multicore" brief="Collection of Multicore SDK documentation" version="2.13.0" full_name="Multicore SDK documentation" devices="MIMX9352xxxxM" user_visible="true" type="documentation" package_base_path="docs/MULTICORE" project_base_path="MULTICORE">
      <dependencies>
        <component_dependency value="middleware.multicore.MIMX9352"/>
      </dependencies>
    </component>
    <component id="docs_external.MIMX9352.MIMX9352" name="docs_external.MIMX9352" brief="External documentation for MIMX9352." version="1.0.0" full_name="External documentation" devices="MIMX9352xxxxM" user_visible="true" type="documentation" package_base_path="docs" project_base_path="docs">
      <source relative_path="./" type="doc">
        <files mask="MCUXpresso SDK ChangeLog_MIMX9352.pdf"/>
        <files mask="MCUXpresso SDK API Reference Manual_MIMX9352.pdf"/>
      </source>
      <source relative_path="MCUXpresso SDK API Reference Manual_MIMX9352" type="script">
        <files mask="a00030.js"/>
        <files mask="a00166.js"/>
        <files mask="a00023.js"/>
        <files mask="a00169.js"/>
        <files mask="a00038.js"/>
        <files mask="navtreeindex9.js"/>
        <files mask="a00014.js"/>
        <files mask="a00158.js"/>
        <files mask="a00183.js"/>
        <files mask="a00036.js"/>
        <files mask="a00008.js"/>
        <files mask="a00028.js"/>
        <files mask="navtreeindex8.js"/>
        <files mask="a00035.js"/>
        <files mask="a00017.js"/>
        <files mask="a00165.js"/>
        <files mask="a00171.js"/>
        <files mask="a00175.js"/>
        <files mask="navtreeindex0.js"/>
        <files mask="a00042.js"/>
        <files mask="a00157.js"/>
        <files mask="a00151.js"/>
        <files mask="a00159.js"/>
        <files mask="a00022.js"/>
        <files mask="a00032.js"/>
        <files mask="a00033.js"/>
        <files mask="a00152.js"/>
        <files mask="a00012.js"/>
        <files mask="navtreeindex10.js"/>
        <files mask="navtreeindex5.js"/>
        <files mask="a00029.js"/>
        <files mask="a00021.js"/>
        <files mask="a00041.js"/>
        <files mask="a00034.js"/>
        <files mask="a00039.js"/>
        <files mask="a00015.js"/>
        <files mask="a00167.js"/>
        <files mask="a00010.js"/>
        <files mask="navtreeindex4.js"/>
        <files mask="a00168.js"/>
        <files mask="a00176.js"/>
        <files mask="navtreeindex13.js"/>
        <files mask="a00181.js"/>
        <files mask="a00016.js"/>
        <files mask="a00047.js"/>
        <files mask="a00177.js"/>
        <files mask="a00044.js"/>
        <files mask="a00153.js"/>
        <files mask="a00172.js"/>
        <files mask="a00026.js"/>
        <files mask="a00178.js"/>
        <files mask="navtreeindex14.js"/>
        <files mask="a00170.js"/>
        <files mask="navtreeindex1.js"/>
        <files mask="a00025.js"/>
        <files mask="a00013.js"/>
        <files mask="a00043.js"/>
        <files mask="a00162.js"/>
        <files mask="a00161.js"/>
        <files mask="a00154.js"/>
        <files mask="a00031.js"/>
        <files mask="modules.js"/>
        <files mask="a00027.js"/>
        <files mask="navtreeindex7.js"/>
        <files mask="a00037.js"/>
        <files mask="a00174.js"/>
        <files mask="navtreeindex6.js"/>
        <files mask="a00045.js"/>
        <files mask="resize.js"/>
        <files mask="navtreeindex2.js"/>
        <files mask="a00163.js"/>
        <files mask="a00024.js"/>
        <files mask="a00148.js"/>
        <files mask="a00155.js"/>
        <files mask="a00020.js"/>
        <files mask="navtreeindex3.js"/>
        <files mask="dynsections.js"/>
        <files mask="a00048.js"/>
        <files mask="a00164.js"/>
        <files mask="navtreeindex12.js"/>
        <files mask="a00046.js"/>
        <files mask="a00179.js"/>
        <files mask="a00182.js"/>
        <files mask="a00040.js"/>
        <files mask="navtree.js"/>
        <files mask="navtreeindex11.js"/>
        <files mask="a00011.js"/>
        <files mask="jquery.js"/>
      </source>
      <source relative_path="MCUXpresso SDK API Reference Manual_MIMX9352" type="doc">
        <files mask="a00163.html"/>
        <files mask="a00021.html"/>
        <files mask="dir_20942cb2ce796836dfc1cbdfc9d8ed5a.html"/>
        <files mask="a00012.html"/>
        <files mask="dir_a343a3e9cbb710280ccd0de2056b945d.html"/>
        <files mask="dir_c83995204529212f149d093e598b8cfe.html"/>
        <files mask="a00041.html"/>
        <files mask="a00019.html"/>
        <files mask="customdoxygen.css"/>
        <files mask="a00006.html"/>
        <files mask="a00033.html"/>
        <files mask="dir_9d7943276f7f59eae0f94ff2d28103c6.html"/>
        <files mask="a00004.html"/>
        <files mask="dir_4abf89e9f673f8ecb77d953c2ad09976.html"/>
        <files mask="a00149.html"/>
        <files mask="a00008.html"/>
        <files mask="dir_ea982a4a90bbf64c8a612131ad2f0fcb.html"/>
        <files mask="a00010.html"/>
        <files mask="a00009.html"/>
        <files mask="a00034.html"/>
        <files mask="a00020.html"/>
        <files mask="a00027.html"/>
        <files mask="a00042.html"/>
        <files mask="dir_416fc20155a03b7bbc5728a57d236b9f.html"/>
        <files mask="tabs.css"/>
        <files mask="dir_8f5c973d26740daab895a32d43886c59.html"/>
        <files mask="dir_58e102d2449f7b3d87d5edc08313c5d7.html"/>
        <files mask="dir_a3133d333b1a52973d87e73438740fd6.html"/>
        <files mask="dir_633a86e6a6658f734e800b79d508ae19.html"/>
        <files mask="a00023.html"/>
        <files mask="a00152.html"/>
        <files mask="dir_6241b87b985efb3ecbfd576247350533.html"/>
        <files mask="dir_dc1d449a1b08d9860d0e8ab656677732.html"/>
        <files mask="a00168.html"/>
        <files mask="dir_89fd88b21369a8fc685427310a5a5fe7.html"/>
        <files mask="a00182.html"/>
        <files mask="a00161.html"/>
        <files mask="a00031.html"/>
        <files mask="dir_85d65e6b350e819f4cbce4598b30679b.html"/>
        <files mask="dir_0c267f045edb9b0ef64e9a860fd099c4.html"/>
        <files mask="a00015.html"/>
        <files mask="index.html"/>
        <files mask="dir_848ba48fec923bc3c0bf8c7926036968.html"/>
        <files mask="a00048.html"/>
        <files mask="a00170.html"/>
        <files mask="a00045.html"/>
        <files mask="dir_f7e99b515278d57327e2df3b2ab543bb.html"/>
        <files mask="a00162.html"/>
        <files mask="a00036.html"/>
        <files mask="a00017.html"/>
        <files mask="a00178.html"/>
        <files mask="dir_81cd625641a90df482300fc494d26ddb.html"/>
        <files mask="a00165.html"/>
        <files mask="a00154.html"/>
        <files mask="dir_3ded2de2a4b5941ec98b70e75b83aa20.html"/>
        <files mask="a00172.html"/>
        <files mask="a00025.html"/>
        <files mask="dir_83c4f67939b2e50b6dc50fe3fc259b2d.html"/>
        <files mask="dir_ea5f9633cc51d3e2a6a258aee7e636f0.html"/>
        <files mask="a00011.html"/>
        <files mask="dir_03539e9bf34fd65c5e6da2760226d874.html"/>
        <files mask="a00037.html"/>
        <files mask="a00002.html"/>
        <files mask="a00029.html"/>
        <files mask="dir_b5759f6cd324301c8d375e44421eccc5.html"/>
        <files mask="a00175.html"/>
        <files mask="a00150.html"/>
        <files mask="a00039.html"/>
        <files mask="a00169.html"/>
        <files mask="dir_a619c3f5e1bcdc73106a059b3163c45d.html"/>
        <files mask="a00171.html"/>
        <files mask="dir_bebc14e255be79244de9e03d794361f1.html"/>
        <files mask="dir_50c0f6d3977876a8fb6acc75ece63018.html"/>
        <files mask="dir_2426866ff5131730e4b84fcb05ab6c16.html"/>
        <files mask="a00177.html"/>
        <files mask="dir_4ccba0375267304b324fbddad1ed6fca.html"/>
        <files mask="dir_07b86ffc266b39efa5bbdc0e9fdb330a.html"/>
        <files mask="a00044.html"/>
        <files mask="dir_bec99b35e29ee1f785745555e9f9e41a.html"/>
        <files mask="a00185.html"/>
        <files mask="a00022.html"/>
        <files mask="a00179.html"/>
        <files mask="dir_b1c4d21f93a7826ef4aed70b30552b97.html"/>
        <files mask="a00157.html"/>
        <files mask="a00043.html"/>
        <files mask="a00038.html"/>
        <files mask="a00013.html"/>
        <files mask="a00040.html"/>
        <files mask="dir_c5a52a81292cf9a5167198f4f346d6d9.html"/>
        <files mask="a00035.html"/>
        <files mask="a00180.html"/>
        <files mask="dir_919453c527cd3b17be9d0977f49b7a97.html"/>
        <files mask="doxygen.css"/>
        <files mask="a00183.html"/>
        <files mask="a00156.html"/>
        <files mask="dir_d5e2083f43ed3d26340cb9096d2e7724.html"/>
        <files mask="a00151.html"/>
        <files mask="a00160.html"/>
        <files mask="a00024.html"/>
        <files mask="a00028.html"/>
        <files mask="a00167.html"/>
        <files mask="dir_f30550e2433a9e3eaf19043f7ead6787.html"/>
        <files mask="a00174.html"/>
        <files mask="a00047.html"/>
        <files mask="a00148.html"/>
        <files mask="dir_b1c03c584dc84f3f7667d569a16f41a9.html"/>
        <files mask="dir_d0b0cea4c1afa919405231e98537b73c.html"/>
        <files mask="dir_c35ca6965aa29b760300e697294724bc.html"/>
        <files mask="dir_e93037527b341a9eeebd8980ff96f405.html"/>
        <files mask="dir_2ab61dd9ad5bcc7a300e27a7b4d0cd51.html"/>
        <files mask="dir_09f9dadd705c180f0f6fcba2157ed2a9.html"/>
        <files mask="dir_bf71e8795d5ec3bf1a04b9a740296e07.html"/>
        <files mask="dir_b532a1651772451ccd6119aa45deac91.html"/>
        <files mask="dir_941917524c95f00c85ae4653cfaa2b49.html"/>
        <files mask="dir_409f97388efe006bc3438b95e9edef48.html"/>
        <files mask="a00181.html"/>
        <files mask="a00173.html"/>
        <files mask="a00159.html"/>
        <files mask="a00026.html"/>
        <files mask="navtree.css"/>
        <files mask="dir_e78230b9814187c44d2cfec602885c0a.html"/>
        <files mask="a00155.html"/>
        <files mask="pages.html"/>
        <files mask="a00032.html"/>
        <files mask="a00018.html"/>
        <files mask="a00158.html"/>
        <files mask="a00016.html"/>
        <files mask="dir_9986937d5c2d55a7e5d1d4820166229f.html"/>
        <files mask="a00153.html"/>
        <files mask="dir_be95ef627628abc71b4628041dc41e83.html"/>
        <files mask="a00030.html"/>
        <files mask="a00164.html"/>
        <files mask="a00046.html"/>
        <files mask="dir_fd2be0ed4db85d70259f5a97a935dd15.html"/>
        <files mask="dir_fe14205cf1299e253f9c33655eef9ac4.html"/>
        <files mask="a00176.html"/>
        <files mask="modules.html"/>
        <files mask="dir_b07b1803b08e3bfa8752acf7d436415b.html"/>
        <files mask="a00014.html"/>
        <files mask="a00166.html"/>
      </source>
      <source relative_path="MCUXpresso SDK API Reference Manual_MIMX9352/search" type="doc">
        <files mask="typedefs_73.html"/>
        <files mask="classes_77.html"/>
        <files mask="all_68.html"/>
        <files mask="classes_6c.html"/>
        <files mask="variables_6f.html"/>
        <files mask="variables_6d.html"/>
        <files mask="all_6c.html"/>
        <files mask="classes_63.html"/>
        <files mask="enums_77.html"/>
        <files mask="classes_61.html"/>
        <files mask="variables_69.html"/>
        <files mask="classes_70.html"/>
        <files mask="groups_67.html"/>
        <files mask="typedefs_66.html"/>
        <files mask="functions_63.html"/>
        <files mask="all_64.html"/>
        <files mask="functions_6d.html"/>
        <files mask="variables_73.html"/>
        <files mask="all_63.html"/>
        <files mask="functions_69.html"/>
        <files mask="functions_6c.html"/>
        <files mask="classes_71.html"/>
        <files mask="functions_74.html"/>
        <files mask="enums_70.html"/>
        <files mask="variables_6b.html"/>
        <files mask="variables_75.html"/>
        <files mask="all_74.html"/>
        <files mask="enums_6c.html"/>
        <files mask="groups_65.html"/>
        <files mask="variables_78.html"/>
        <files mask="all_73.html"/>
        <files mask="all_79.html"/>
        <files mask="all_6f.html"/>
        <files mask="pages_74.html"/>
        <files mask="pages_69.html"/>
        <files mask="enums_64.html"/>
        <files mask="search.css"/>
        <files mask="variables_70.html"/>
        <files mask="variables_6c.html"/>
        <files mask="classes_74.html"/>
        <files mask="variables_68.html"/>
        <files mask="functions_68.html"/>
        <files mask="all_70.html"/>
        <files mask="classes_66.html"/>
        <files mask="classes_64.html"/>
        <files mask="functions_6e.html"/>
        <files mask="typedefs_65.html"/>
        <files mask="variables_63.html"/>
        <files mask="enums_65.html"/>
        <files mask="functions_71.html"/>
        <files mask="variables_61.html"/>
        <files mask="variables_79.html"/>
        <files mask="enums_71.html"/>
        <files mask="all_65.html"/>
        <files mask="all_67.html"/>
        <files mask="functions_65.html"/>
        <files mask="variables_62.html"/>
        <files mask="enums_63.html"/>
        <files mask="classes_69.html"/>
        <files mask="variables_65.html"/>
        <files mask="enums_6d.html"/>
        <files mask="enums_5f.html"/>
        <files mask="enums_74.html"/>
        <files mask="all_6e.html"/>
        <files mask="typedefs_71.html"/>
        <files mask="all_75.html"/>
        <files mask="enums_61.html"/>
        <files mask="groups_64.html"/>
        <files mask="nomatches.html"/>
        <files mask="all_77.html"/>
        <files mask="groups_71.html"/>
        <files mask="groups_66.html"/>
        <files mask="all_62.html"/>
        <files mask="variables_5f.html"/>
        <files mask="groups_6d.html"/>
        <files mask="groups_77.html"/>
        <files mask="enums_67.html"/>
        <files mask="groups_6c.html"/>
        <files mask="typedefs_6e.html"/>
        <files mask="pages_64.html"/>
        <files mask="functions_66.html"/>
        <files mask="variables_6e.html"/>
        <files mask="all_66.html"/>
        <files mask="groups_69.html"/>
        <files mask="variables_71.html"/>
        <files mask="variables_64.html"/>
        <files mask="variables_66.html"/>
        <files mask="typedefs_6c.html"/>
        <files mask="all_69.html"/>
        <files mask="all_5f.html"/>
        <files mask="groups_73.html"/>
        <files mask="functions_77.html"/>
        <files mask="all_78.html"/>
        <files mask="classes_73.html"/>
        <files mask="classes_5f.html"/>
        <files mask="functions_70.html"/>
        <files mask="functions_64.html"/>
        <files mask="groups_61.html"/>
        <files mask="enums_66.html"/>
        <files mask="groups_70.html"/>
        <files mask="enums_6e.html"/>
        <files mask="variables_67.html"/>
        <files mask="pages_61.html"/>
        <files mask="all_61.html"/>
        <files mask="groups_6e.html"/>
        <files mask="classes_6e.html"/>
        <files mask="variables_74.html"/>
        <files mask="groups_74.html"/>
        <files mask="classes_65.html"/>
        <files mask="all_6b.html"/>
        <files mask="all_71.html"/>
        <files mask="variables_77.html"/>
        <files mask="functions_73.html"/>
        <files mask="typedefs_63.html"/>
        <files mask="enumvalues_6b.html"/>
        <files mask="variables_76.html"/>
        <files mask="classes_67.html"/>
        <files mask="functions_67.html"/>
        <files mask="functions_61.html"/>
        <files mask="all_72.html"/>
        <files mask="all_6d.html"/>
        <files mask="all_76.html"/>
        <files mask="enums_73.html"/>
        <files mask="groups_63.html"/>
        <files mask="variables_72.html"/>
      </source>
      <source relative_path="MCUXpresso SDK API Reference Manual_MIMX9352/search" type="script">
        <files mask="groups_6e.js"/>
        <files mask="classes_70.js"/>
        <files mask="enums_6e.js"/>
        <files mask="groups_65.js"/>
        <files mask="groups_70.js"/>
        <files mask="all_64.js"/>
        <files mask="groups_71.js"/>
        <files mask="enums_67.js"/>
        <files mask="functions_65.js"/>
        <files mask="classes_74.js"/>
        <files mask="classes_71.js"/>
        <files mask="variables_6e.js"/>
        <files mask="variables_63.js"/>
        <files mask="functions_67.js"/>
        <files mask="variables_61.js"/>
        <files mask="enumvalues_6b.js"/>
        <files mask="variables_71.js"/>
        <files mask="groups_64.js"/>
        <files mask="all_65.js"/>
        <files mask="typedefs_65.js"/>
        <files mask="variables_77.js"/>
        <files mask="variables_67.js"/>
        <files mask="all_67.js"/>
        <files mask="variables_72.js"/>
        <files mask="functions_77.js"/>
        <files mask="enums_73.js"/>
        <files mask="search.js"/>
        <files mask="functions_6c.js"/>
        <files mask="classes_69.js"/>
        <files mask="pages_69.js"/>
        <files mask="classes_6c.js"/>
        <files mask="classes_6e.js"/>
        <files mask="classes_65.js"/>
        <files mask="functions_63.js"/>
        <files mask="variables_6b.js"/>
        <files mask="classes_64.js"/>
        <files mask="classes_5f.js"/>
        <files mask="enums_74.js"/>
        <files mask="variables_73.js"/>
        <files mask="pages_61.js"/>
        <files mask="variables_75.js"/>
        <files mask="all_6f.js"/>
        <files mask="variables_79.js"/>
        <files mask="all_66.js"/>
        <files mask="all_68.js"/>
        <files mask="enums_77.js"/>
        <files mask="typedefs_6c.js"/>
        <files mask="functions_70.js"/>
        <files mask="all_70.js"/>
        <files mask="all_6b.js"/>
        <files mask="typedefs_6e.js"/>
        <files mask="enums_65.js"/>
        <files mask="typedefs_73.js"/>
        <files mask="typedefs_63.js"/>
        <files mask="groups_63.js"/>
        <files mask="all_77.js"/>
        <files mask="classes_61.js"/>
        <files mask="all_63.js"/>
        <files mask="all_5f.js"/>
        <files mask="groups_61.js"/>
        <files mask="variables_5f.js"/>
        <files mask="all_78.js"/>
        <files mask="all_61.js"/>
        <files mask="groups_74.js"/>
        <files mask="classes_66.js"/>
        <files mask="enums_63.js"/>
        <files mask="groups_6c.js"/>
        <files mask="variables_64.js"/>
        <files mask="functions_68.js"/>
        <files mask="variables_76.js"/>
        <files mask="functions_66.js"/>
        <files mask="all_71.js"/>
        <files mask="enums_5f.js"/>
        <files mask="enums_6d.js"/>
        <files mask="functions_6e.js"/>
        <files mask="functions_61.js"/>
        <files mask="enums_70.js"/>
        <files mask="groups_66.js"/>
        <files mask="variables_69.js"/>
        <files mask="groups_73.js"/>
        <files mask="functions_71.js"/>
        <files mask="all_69.js"/>
        <files mask="variables_6f.js"/>
        <files mask="enums_64.js"/>
        <files mask="all_72.js"/>
        <files mask="all_76.js"/>
        <files mask="classes_77.js"/>
        <files mask="variables_62.js"/>
        <files mask="all_6e.js"/>
        <files mask="all_73.js"/>
        <files mask="variables_6d.js"/>
        <files mask="variables_74.js"/>
        <files mask="pages_64.js"/>
        <files mask="typedefs_71.js"/>
        <files mask="enums_61.js"/>
        <files mask="all_62.js"/>
        <files mask="enums_6c.js"/>
        <files mask="variables_68.js"/>
        <files mask="variables_6c.js"/>
        <files mask="variables_70.js"/>
        <files mask="groups_6d.js"/>
        <files mask="all_75.js"/>
        <files mask="variables_66.js"/>
        <files mask="groups_67.js"/>
        <files mask="functions_6d.js"/>
        <files mask="all_79.js"/>
        <files mask="enums_71.js"/>
        <files mask="functions_74.js"/>
        <files mask="functions_69.js"/>
        <files mask="all_6d.js"/>
        <files mask="enums_66.js"/>
        <files mask="variables_78.js"/>
        <files mask="functions_73.js"/>
        <files mask="classes_63.js"/>
        <files mask="groups_77.js"/>
        <files mask="groups_69.js"/>
        <files mask="typedefs_66.js"/>
        <files mask="classes_73.js"/>
        <files mask="classes_67.js"/>
        <files mask="pages_74.js"/>
        <files mask="variables_65.js"/>
        <files mask="functions_64.js"/>
        <files mask="all_6c.js"/>
        <files mask="all_74.js"/>
      </source>
      <source relative_path="MCUXpresso SDK API Reference Manual_MIMX9352/search" type="image">
        <files mask="search_r.png"/>
        <files mask="search_l.png"/>
        <files mask="mag_sel.png"/>
        <files mask="close.png"/>
        <files mask="search_m.png"/>
      </source>
      <source relative_path="MCUXpresso SDK API Reference Manual_MIMX9352" type="image">
        <files mask="ftv2vertline.png"/>
        <files mask="ftv2node.png"/>
        <files mask="tab_b.png"/>
        <files mask="ftv2blank.png"/>
        <files mask="Kinetis_SDK_Block_Diagram.jpg"/>
        <files mask="ftv2plastnode.png"/>
        <files mask="ftv2mo.png"/>
        <files mask="bc_s.png"/>
        <files mask="nxp_logo_small.png"/>
        <files mask="nav_h.png"/>
        <files mask="fs_logo.gif"/>
        <files mask="debug_console_overview.jpg"/>
        <files mask="tab_a.png"/>
        <files mask="bdwn.png"/>
        <files mask="ftv2folderopen.png"/>
        <files mask="sync_off.png"/>
        <files mask="ftv2mlastnode.png"/>
        <files mask="tab_s.png"/>
        <files mask="ftv2ns.png"/>
        <files mask="ftv2mnode.png"/>
        <files mask="ftv2folderclosed.png"/>
        <files mask="open.png"/>
        <files mask="ftv2doc.png"/>
        <files mask="ftv2lastnode.png"/>
        <files mask="tab_h.png"/>
        <files mask="arm_logo.png"/>
        <files mask="closed.png"/>
        <files mask="ftv2splitbar.png"/>
        <files mask="ftv2pnode.png"/>
        <files mask="ftv2link.png"/>
        <files mask="ftv2cl.png"/>
        <files mask="nav_g.png"/>
        <files mask="sync_on.png"/>
        <files mask="nav_f.png"/>
        <files mask="doxygen.png"/>
      </source>
    </component>
    <component id="driver.adp5585.MIMX9352" name="adp5585" brief="IO expander ADP5585 driver" version="1.0.0" full_name="Driver ADP5585" devices="MIMX9352xxxxM" device_cores="cm33_MIMX9352xxxxM" user_visible="false" type="board_component" package_base_path="components/adp5585" project_base_path="components/adp5585">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMX9352"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adp5585.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adp5585.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_adp5585_MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.cache_xcache.MIMX9352" name="cache_xcache" brief="CACHE XCACHE Driver" version="2.0.0" full_name="CACHE XCACHE Driver" devices="MIMX9352xxxxM" device_cores="cm33_MIMX9352xxxxM" user_visible="true" type="driver" package_base_path="devices/MIMX9352/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMX9352"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_cache.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_cache.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_cache_xcache_MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.clock.MIMX9352" name="clock" brief="Clock Driver" version="2.0.0" full_name="Clock Driver" devices="MIMX9352xxxxM" device_cores="cm33_MIMX9352xxxxM" user_visible="true" type="driver" package_base_path="devices/MIMX9352/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMX9352"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_clock.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_clock.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_clock_MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.enet_cmsis.MIMX9352" name="enet_cmsis" brief="ENET CMSIS Driver" version="2.2.0" full_name="ENET CMSIS Driver" devices="MIMX9352xxxxM" device_cores="cm33_MIMX9352xxxxM" user_visible="true" type="CMSIS_driver" package_base_path="devices/MIMX9352/cmsis_drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.enet.MIMX9352"/>
          <component_dependency value="CMSIS_Driver_Include.Ethernet_MAC.MIMX9352"/>
          <component_dependency value="CMSIS_Driver_Include.Ethernet_PHY.MIMX9352"/>
          <component_dependency value="CMSIS_Driver_Include.Ethernet.MIMX9352"/>
          <component_dependency value="RTE_Device.MIMX9352"/>
          <component_dependency value="driver.phy-common.MIMX9352"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_enet_cmsis.h"/>
        <files mask="fsl_enet_phy_cmsis.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_enet_cmsis.c"/>
        <files mask="fsl_enet_phy_cmsis.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpi2c_cmsis.MIMX9352" name="lpi2c_cmsis" brief="LPI2C CMSIS Driver" version="2.1.0" full_name="LPI2C CMSIS Driver" devices="MIMX9352xxxxM" device_cores="cm33_MIMX9352xxxxM" user_visible="true" type="CMSIS_driver" package_base_path="devices/MIMX9352/cmsis_drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpi2c.MIMX9352"/>
          <component_dependency value="CMSIS_Driver_Include.I2C.MIMX9352"/>
          <component_dependency value="RTE_Device.MIMX9352"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpi2c_cmsis.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_lpi2c_cmsis.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_cmsis_lpi2c_MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpspi_cmsis.MIMX9352" name="lpspi_cmsis" brief="LPSPI CMSIS Driver" version="2.5.0" full_name="LPSPI CMSIS Driver" devices="MIMX9352xxxxM" device_cores="cm33_MIMX9352xxxxM" user_visible="true" type="CMSIS_driver" package_base_path="devices/MIMX9352/cmsis_drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpspi.MIMX9352"/>
          <component_dependency value="CMSIS_Driver_Include.SPI.MIMX9352"/>
          <component_dependency value="RTE_Device.MIMX9352"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpspi_cmsis.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_lpspi_cmsis.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_cmsis_lpspi_MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpuart_cmsis.MIMX9352" name="lpuart_cmsis" brief="LPUART CMSIS Driver" version="2.3.0" full_name="LPUART CMSIS Driver" devices="MIMX9352xxxxM" device_cores="cm33_MIMX9352xxxxM" user_visible="true" type="CMSIS_driver" package_base_path="devices/MIMX9352/cmsis_drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpuart.MIMX9352"/>
          <component_dependency value="CMSIS_Driver_Include.USART.MIMX9352"/>
          <component_dependency value="RTE_Device.MIMX9352"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpuart_cmsis.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_lpuart_cmsis.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_cmsis_lpuart_MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="driver.codec.MIMX9352" name="codec" brief="Driver codec" version="2.3.1" full_name="Driver codec" devices="MIMX9352xxxxM" device_cores="cm33_MIMX9352xxxxM" user_visible="true" type="abstraction_layer" package_base_path="components/codec" project_base_path="codec">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMX9352"/>
          <any_of>
            <component_dependency value="component.wm8960_adapter.MIMX9352"/>
            <component_dependency value="component.codec_adapters.MIMX9352"/>
            <component_dependency value="component.da7212_adapter.MIMX9352"/>
            <component_dependency value="component.sgtl_adapter.MIMX9352"/>
            <component_dependency value="component.wm8962_adapter.MIMX9352"/>
          </any_of>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_codec_common.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_codec_common.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_codec_MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.common.MIMX9352" name="common" brief="COMMON Driver" version="2.4.0" full_name="COMMON Driver" devices="MIMX9352xxxxM" device_cores="cm33_MIMX9352xxxxM" user_visible="true" type="driver" package_base_path="devices/MIMX9352/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.clock.MIMX9352"/>
          <component_dependency value="platform.devices.MIMX9352_CMSIS.MIMX9352"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_common.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_common.c"/>
      </source>
      <source relative_path="./" type="src" device_cores="cm33_MIMX9352xxxxM">
        <files mask="fsl_common_arm.c"/>
      </source>
      <source relative_path="./" type="c_include" device_cores="cm33_MIMX9352xxxxM">
        <files mask="fsl_common_arm.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_common_MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="driver.dialog7212.MIMX9352" name="dialog7212" brief="Driver dialog7212" version="2.2.2" full_name="Driver dialog7212" devices="MIMX9352xxxxM" device_cores="cm33_MIMX9352xxxxM" user_visible="true" type="software_component" package_base_path="components/codec/da7212" project_base_path="codec">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMX9352"/>
          <component_dependency value="component.codec_i2c.MIMX9352"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_dialog7212.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_dialog7212.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.dma3.MIMX9352" name="dma" brief="EDMA Driver" version="2.3.0" full_name="EDMA Driver" devices="MIMX9352xxxxM" device_cores="cm33_MIMX9352xxxxM" user_visible="true" type="driver" package_base_path="devices/MIMX9352/drivers/dma3" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.memory.MIMX9352"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_edma.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_edma.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_dma3_MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.edma4.MIMX9352" name="edma" brief="EDMA Driver" version="2.5.3" full_name="EDMA4 Driver" devices="MIMX9352xxxxM" device_cores="cm33_MIMX9352xxxxM" user_visible="true" type="driver" package_base_path="devices/MIMX9352/drivers/edma4" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="driver.edma_soc.MIMX9352"/>
          <component_dependency value="platform.drivers.memory.MIMX9352"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_edma.h"/>
        <files mask="fsl_edma_core.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_edma.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_edma4_MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="driver.edma_soc.MIMX9352" name="edma_soc" brief="EDMA SOC Driver" version="2.0.0" full_name="EDMA SOC Driver" devices="MIMX9352xxxxM" device_cores="cm33_MIMX9352xxxxM" user_visible="true" type="driver" package_base_path="devices/MIMX9352/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMX9352"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_edma_soc.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_edma_soc.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_edma_soc_MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.enet.MIMX9352" name="enet" brief="ENET Driver" version="2.6.3" full_name="ENET Driver" devices="MIMX9352xxxxM" device_cores="cm33_MIMX9352xxxxM" user_visible="true" type="driver" package_base_path="devices/MIMX9352/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.memory.MIMX9352"/>
          <component_dependency value="platform.drivers.common.MIMX9352"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_enet.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_enet.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_enet_MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.enet_qos.MIMX9352" name="enet_qos" brief="ENET QoS Driver" version="2.5.3" full_name="ENET QoS Driver" devices="MIMX9352xxxxM" device_cores="cm33_MIMX9352xxxxM" user_visible="true" type="driver" package_base_path="devices/MIMX9352/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.memory.MIMX9352"/>
          <component_dependency value="platform.drivers.common.MIMX9352"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_enet_qos.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_enet_qos.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_enet_qos_MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexcan.MIMX9352" name="flexcan" brief="FLEXCAN Driver" version="2.10.0" full_name="FLEXCAN Driver" devices="MIMX9352xxxxM" device_cores="cm33_MIMX9352xxxxM" user_visible="true" type="driver" package_base_path="devices/MIMX9352/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMX9352"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexcan.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_flexcan.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_flexcan_MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexcan_edma.MIMX9352" name="flexcan_edma" brief="FLEXCAN Driver" version="2.10.0" full_name="FLEXCAN EDMA Driver" devices="MIMX9352xxxxM" device_cores="cm33_MIMX9352xxxxM" user_visible="true" type="driver" package_base_path="devices/MIMX9352/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.flexcan.MIMX9352"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexcan_edma.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_flexcan_edma.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_flexcan_edma_MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexio.MIMX9352" name="flexio" brief="FLEXIO Driver" version="2.1.0" full_name="FLEXIO Driver" devices="MIMX9352xxxxM" device_cores="cm33_MIMX9352xxxxM" user_visible="true" type="driver" package_base_path="devices/MIMX9352/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMX9352"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexio.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexio.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_flexio_MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexio_camera.MIMX9352" name="flexio_camera" brief="FLEXIO Driver" version="2.1.3" full_name="FLEXIO CAMERA Driver" devices="MIMX9352xxxxM" device_cores="cm33_MIMX9352xxxxM" user_visible="true" type="driver" package_base_path="devices/MIMX9352/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.flexio.MIMX9352"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexio_camera.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexio_camera.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexio_camera_edma.MIMX9352" name="flexio_camera_edma" brief="FLEXIO CAMERA EDMA Driver" version="2.1.3" full_name="FLEXIO CAMERA EDMA Driver" devices="MIMX9352xxxxM" device_cores="cm33_MIMX9352xxxxM" user_visible="true" type="driver" package_base_path="devices/MIMX9352/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.flexio_camera.MIMX9352"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexio_camera_edma.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexio_camera_edma.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexio_i2c_master.MIMX9352" name="flexio_i2c_master" brief="FLEXIO I2C Driver" version="2.5.0" full_name="FLEXIO I2C Driver" devices="MIMX9352xxxxM" device_cores="cm33_MIMX9352xxxxM" user_visible="true" type="driver" package_base_path="devices/MIMX9352/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.flexio.MIMX9352"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexio_i2c_master.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexio_i2c_master.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_flexio_i2c_master_MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexio_i2s.MIMX9352" name="flexio_i2s" brief="FLEXIO I2S Driver" version="2.2.0" full_name="FLEXIO I2S Driver" devices="MIMX9352xxxxM" device_cores="cm33_MIMX9352xxxxM" user_visible="true" type="driver" package_base_path="devices/MIMX9352/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.flexio.MIMX9352"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexio_i2s.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexio_i2s.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexio_i2s_edma.MIMX9352" name="flexio_i2s_edma" brief="FLEXIO I2S EDMA Driver" version="2.1.7" full_name="FLEXIO I2S EDMA Driver" devices="MIMX9352xxxxM" device_cores="cm33_MIMX9352xxxxM" user_visible="true" type="driver" package_base_path="devices/MIMX9352/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.flexio_i2s.MIMX9352"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexio_i2s_edma.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexio_i2s_edma.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexio_mculcd.MIMX9352" name="flexio_mculcd" brief="FLEXIO MCULCD Driver" version="2.0.7" full_name="FLEXIO MCULCD Driver" devices="MIMX9352xxxxM" device_cores="cm33_MIMX9352xxxxM" user_visible="true" type="driver" package_base_path="devices/MIMX9352/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.flexio.MIMX9352"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexio_mculcd.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexio_mculcd.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexio_mculcd_edma.MIMX9352" name="flexio_mculcd_edma" brief="FLEXIO MCULCD EDMA Driver" version="2.0.4" full_name="FLEXIO MCULCD EDMA Driver" devices="MIMX9352xxxxM" device_cores="cm33_MIMX9352xxxxM" user_visible="true" type="driver" package_base_path="devices/MIMX9352/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.flexio_mculcd.MIMX9352"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexio_mculcd_edma.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexio_mculcd_edma.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexio_spi.MIMX9352" name="flexio_spi" brief="FLEXIO SPI Driver" version="2.3.0" full_name="FLEXIO SPI Driver" devices="MIMX9352xxxxM" device_cores="cm33_MIMX9352xxxxM" user_visible="true" type="driver" package_base_path="devices/MIMX9352/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.flexio.MIMX9352"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexio_spi.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexio_spi.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexio_spi_edma.MIMX9352" name="flexio_spi_edma" brief="FLEXIO SPI EDMA Driver" version="2.3.0" full_name="FLEXIO SPI EDMA Driver" devices="MIMX9352xxxxM" device_cores="cm33_MIMX9352xxxxM" user_visible="true" type="driver" package_base_path="devices/MIMX9352/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.flexio_spi.MIMX9352"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexio_spi_edma.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexio_spi_edma.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexio_uart.MIMX9352" name="flexio_uart" brief="FLEXIO UART Driver" version="2.4.0" full_name="FLEXIO UART Driver" devices="MIMX9352xxxxM" device_cores="cm33_MIMX9352xxxxM" user_visible="true" type="driver" package_base_path="devices/MIMX9352/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.flexio.MIMX9352"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexio_uart.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexio_uart.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexio_uart_edma.MIMX9352" name="flexio_uart_edma" brief="FLEXIO UART EDMA Driver" version="2.4.1" full_name="FLEXIO UART EDMA Driver" devices="MIMX9352xxxxM" device_cores="cm33_MIMX9352xxxxM" user_visible="true" type="driver" package_base_path="devices/MIMX9352/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.flexio_uart.MIMX9352"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexio_uart_edma.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexio_uart_edma.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexspi.MIMX9352" name="flexspi" brief="FLEXSPI Driver" version="2.5.0" full_name="FLEXSPI Driver" devices="MIMX9352xxxxM" device_cores="cm33_MIMX9352xxxxM" user_visible="true" type="driver" package_base_path="devices/MIMX9352/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMX9352"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexspi.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexspi.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexspi_dma3.MIMX9352" name="flexspi_dma3" brief="FLEXSPI Driver" version="2.0.0" full_name="FLEXSPI DMA3 Driver" devices="MIMX9352xxxxM" device_cores="cm33_MIMX9352xxxxM" user_visible="true" type="driver" package_base_path="devices/MIMX9352/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.dma3.MIMX9352"/>
          <component_dependency value="platform.drivers.flexspi.MIMX9352"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexspi_edma.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexspi_edma.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.i3c.MIMX9352" name="i3c" brief="I3C Driver" version="2.10.0" full_name="I3C Driver" devices="MIMX9352xxxxM" device_cores="cm33_MIMX9352xxxxM" user_visible="true" type="driver" package_base_path="devices/MIMX9352/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMX9352"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_i3c.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_i3c.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_i3c_MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.iomuxc.MIMX9352" name="iomuxc" brief="IOMUXC Driver" version="2.0.0" full_name="IOMUXC Driver" devices="MIMX9352xxxxM" device_cores="cm33_MIMX9352xxxxM" user_visible="true" type="driver" package_base_path="devices/MIMX9352/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMX9352"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_iomuxc.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_iomuxc_MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lcdif.MIMX9352" name="lcdif" brief="LCDIF Driver" version="2.1.1" full_name="LCDIF Driver" devices="MIMX9352xxxxM" device_cores="cm33_MIMX9352xxxxM" user_visible="true" type="driver" package_base_path="devices/MIMX9352/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMX9352"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lcdif.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_lcdif.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpi2c.MIMX9352" name="i2c" brief="LPI2C Driver" version="2.5.0" full_name="LPI2C Driver" devices="MIMX9352xxxxM" device_cores="cm33_MIMX9352xxxxM" user_visible="true" type="driver" package_base_path="devices/MIMX9352/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMX9352"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_lpi2c.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpi2c.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_lpi2c_MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpi2c_edma.MIMX9352" name="i2c_edma" brief="LPI2C Driver" version="2.4.1" full_name="LPI2C Edma Driver" devices="MIMX9352xxxxM" device_cores="cm33_MIMX9352xxxxM" user_visible="true" type="driver" package_base_path="devices/MIMX9352/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.dma3.MIMX9352"/>
          <component_dependency value="platform.drivers.lpi2c.MIMX9352"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_lpi2c_edma.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpi2c_edma.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_lpi2c_edma_MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpi2c_freertos.MIMX9352" name="i2c_freertos" brief="LPI2C Driver" version="2.3.2" full_name="LPI2C Freerto Driver" devices="MIMX9352xxxxM" device_cores="cm33_MIMX9352xxxxM" user_visible="true" type="driver" package_base_path="devices/MIMX9352/drivers" project_base_path="drivers/freertos">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpi2c.MIMX9352"/>
          <component_dependency value="middleware.freertos-kernel.MIMX9352"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpi2c_freertos.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_lpi2c_freertos.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_lpi2c_freertos_MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpit.MIMX9352" name="lpit" brief="LPIT Driver" version="2.1.0" full_name="LPIT Driver" devices="MIMX9352xxxxM" device_cores="cm33_MIMX9352xxxxM" user_visible="true" type="driver" package_base_path="devices/MIMX9352/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMX9352"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_lpit.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpit.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_lpit_MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpspi.MIMX9352" name="lpspi" brief="LPSPI Driver" version="2.4.1" full_name="LPSPI Driver" devices="MIMX9352xxxxM" device_cores="cm33_MIMX9352xxxxM" user_visible="true" type="driver" package_base_path="devices/MIMX9352/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMX9352"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_lpspi.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpspi.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_lpspi_MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpspi_edma.MIMX9352" name="lpspi_edma" brief="LPSPI Driver" version="2.3.1" full_name="LPSPI Edma Driver" devices="MIMX9352xxxxM" device_cores="cm33_MIMX9352xxxxM" user_visible="true" type="driver" package_base_path="devices/MIMX9352/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.dma3.MIMX9352"/>
          <component_dependency value="platform.drivers.lpspi.MIMX9352"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpspi_edma.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_lpspi_edma.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_lpspi_edma_MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpspi_freertos.MIMX9352" name="lpspi_freertos" brief="LPSPI Driver" version="2.3.1" full_name="LPSPI Freertos Driver" devices="MIMX9352xxxxM" device_cores="cm33_MIMX9352xxxxM" user_visible="true" type="driver" package_base_path="devices/MIMX9352/drivers" project_base_path="drivers/freertos">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpspi.MIMX9352"/>
          <component_dependency value="middleware.freertos-kernel.MIMX9352"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpspi_freertos.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_lpspi_freertos.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_lpspi_freertos_MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lptmr.MIMX9352" name="lptmr" brief="LPTMR Driver" version="2.1.1" full_name="LPTMR Driver" devices="MIMX9352xxxxM" device_cores="cm33_MIMX9352xxxxM" user_visible="true" type="driver" package_base_path="devices/MIMX9352/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMX9352"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_lptmr.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lptmr.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_lptmr_MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpuart.MIMX9352" name="lpuart" brief="LPUART Driver" version="2.7.1" full_name="LPUART Driver" devices="MIMX9352xxxxM" device_cores="cm33_MIMX9352xxxxM" user_visible="true" type="driver" package_base_path="devices/MIMX9352/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMX9352"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpuart.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_lpuart.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_lpuart_MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpuart_edma.MIMX9352" name="lpuart_edma" brief="LPUART Driver" version="2.6.0" full_name="LPUART Edma Driver" devices="MIMX9352xxxxM" device_cores="cm33_MIMX9352xxxxM" user_visible="true" type="driver" package_base_path="devices/MIMX9352/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.dma3.MIMX9352"/>
          <component_dependency value="platform.drivers.lpuart.MIMX9352"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpuart_edma.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_lpuart_edma.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_lpuart_edma_MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpuart_freertos.MIMX9352" name="lpuart_freertos" brief="LPUART Driver" version="2.5.0" full_name="LPUART Freertos Driver" devices="MIMX9352xxxxM" device_cores="cm33_MIMX9352xxxxM" user_visible="true" type="driver" package_base_path="devices/MIMX9352/drivers" project_base_path="drivers/freertos">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpuart.MIMX9352"/>
          <component_dependency value="middleware.freertos-kernel.MIMX9352"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpuart_freertos.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_lpuart_freertos.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_lpuart_freertos_MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.memory.MIMX9352" name="memory" brief="MEMORY Driver" version="2.0.0" full_name="Memory Driver" devices="MIMX9352xxxxM" device_cores="cm33_MIMX9352xxxxM" user_visible="true" type="driver" package_base_path="devices/MIMX9352/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMX9352"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_memory.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_memory_MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.mu1.MIMX9352" name="mu" brief="MU Driver" version="2.2.0" full_name="MU Driver" devices="MIMX9352xxxxM" device_cores="cm33_MIMX9352xxxxM" user_visible="true" type="driver" package_base_path="devices/MIMX9352/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMX9352"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_mu.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_mu.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_mu1_MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.ocotp.MIMX9352" name="ocotp" brief="OCOTP Driver" version="2.1.3" full_name="OCOTP Driver" devices="MIMX9352xxxxM" device_cores="cm33_MIMX9352xxxxM" user_visible="true" type="driver" package_base_path="devices/MIMX9352/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMX9352"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_ocotp.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_ocotp.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="driver.pcal6524.MIMX9352" name="pcal6524" brief="IO expander PCAL6524 driver" version="1.0.0" full_name="Driver PCAL6524" devices="MIMX9352xxxxM" device_cores="cm33_MIMX9352xxxxM" user_visible="false" type="board_component" package_base_path="components/pcal6524" project_base_path="components/pcal6524">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMX9352"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_pcal6524.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_pcal6524.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_pcal6524_MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.pdm.MIMX9352" name="pdm" brief="PDM Driver" version="2.8.0" full_name="PDM Driver" devices="MIMX9352xxxxM" device_cores="cm33_MIMX9352xxxxM" user_visible="true" type="driver" package_base_path="devices/MIMX9352/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMX9352"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_pdm.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_pdm.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_pdm_MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.pdm_edma.MIMX9352" name="pdm_edma" brief="PDM EDMA Driver" version="2.6.1" full_name="PDM EDMA Driver" devices="MIMX9352xxxxM" device_cores="cm33_MIMX9352xxxxM" user_visible="true" type="driver" package_base_path="devices/MIMX9352/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.edma4.MIMX9352"/>
          <component_dependency value="platform.drivers.pdm.MIMX9352"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_pdm_edma.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_pdm_edma.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_pdm_edma_MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="driver.phy-common.MIMX9352" name="phy-common" brief="Driver phy-common" version="2.0.0" full_name="Driver phy-common" devices="MIMX9352xxxxM" user_visible="true" type="software_component" package_base_path="components/phy" project_base_path="component/phy">
      <source relative_path="./" type="c_include">
        <files mask="fsl_phy.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_phy-common_MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="driver.phy-device-rtl8211f.MIMX9352" name="phy-device-rtl8211f" brief="Driver phy-device-rtl8211f" version="2.0.0" full_name="Driver phy-device-rtl8211f" devices="MIMX9352xxxxM" user_visible="true" type="board_component" package_base_path="components/phy/device/phyrtl8211f" project_base_path="component/phy">
      <dependencies>
        <component_dependency value="driver.phy-common.MIMX9352"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_phyrtl8211f.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_phyrtl8211f.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_phy-device-rtl8211f_MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.pxp.MIMX9352" name="pxp" brief="PXP Driver" version="2.4.1" full_name="PXP Driver" devices="MIMX9352xxxxM" device_cores="cm33_MIMX9352xxxxM" user_visible="true" type="driver" package_base_path="devices/MIMX9352/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMX9352"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_pxp.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_pxp.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.rgpio.MIMX9352" name="gpio" brief="RGPIO Driver" version="2.1.0" full_name="RGPIO Driver" devices="MIMX9352xxxxM" device_cores="cm33_MIMX9352xxxxM" user_visible="true" type="driver" package_base_path="devices/MIMX9352/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMX9352"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_rgpio.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_rgpio.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_rgpio_MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.sai.MIMX9352" name="sai" brief="SAI Driver" version="2.3.8" full_name="SAI Driver" devices="MIMX9352xxxxM" device_cores="cm33_MIMX9352xxxxM" user_visible="true" type="driver" package_base_path="devices/MIMX9352/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMX9352"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_sai.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_sai.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_sai_MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.sai_edma.MIMX9352" name="sai_edma" brief="SAI EDMA Driver" version="2.5.0" full_name="SAI EDMA Driver" devices="MIMX9352xxxxM" device_cores="cm33_MIMX9352xxxxM" user_visible="true" type="driver" package_base_path="devices/MIMX9352/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.edma4.MIMX9352"/>
          <component_dependency value="platform.drivers.sai.MIMX9352"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_sai_edma.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_sai_edma.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_sai_edma_MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.sema42.MIMX9352" name="sema42" brief="SEMA42 Driver" version="2.0.3" full_name="SEMA42 Driver" devices="MIMX9352xxxxM" device_cores="cm33_MIMX9352xxxxM" user_visible="true" type="driver" package_base_path="devices/MIMX9352/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMX9352"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_sema42.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_sema42.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.sentinel.MIMX9352" name="sentinel" brief="Sentinel Driver" version="2.0.0" full_name="Sentinel Driver" devices="MIMX9352xxxxM" device_cores="cm33_MIMX9352xxxxM" user_visible="true" type="driver" package_base_path="devices/MIMX9352/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMX9352"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_sentinel.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_sentinel.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_sentinel_MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="driver.sgtl5000.MIMX9352" name="sgtl5000" brief="Driver sgtl5000" version="2.1.1" full_name="Driver sgtl5000" devices="MIMX9352xxxxM" device_cores="cm33_MIMX9352xxxxM" user_visible="true" type="software_component" package_base_path="components/codec/sgtl5000" project_base_path="codec">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMX9352"/>
          <component_dependency value="component.codec_i2c.MIMX9352"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_sgtl5000.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_sgtl5000.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="driver.srtm.MIMX9352" name="srtm" brief="Driver srtm" version="1.1.0" full_name="Driver srtm" devices="MIMX9352xxxxM" user_visible="true" type="software_component" package_base_path="components/srtm" project_base_path="srtm">
      <source relative_path="include" type="c_include">
        <files mask="srtm_channel.h"/>
        <files mask="srtm_defs.h"/>
        <files mask="srtm_dispatcher.h"/>
        <files mask="srtm_message.h"/>
        <files mask="srtm_peercore.h"/>
        <files mask="srtm_service.h"/>
      </source>
      <source relative_path="srtm" type="src">
        <files mask="srtm_channel.c"/>
        <files mask="srtm_dispatcher.c"/>
        <files mask="srtm_message.c"/>
        <files mask="srtm_peercore.c"/>
        <files mask="srtm_service.c"/>
      </source>
      <source relative_path="srtm" type="c_include">
        <files mask="srtm_channel_struct.h"/>
        <files mask="srtm_dispatcher_struct.h"/>
        <files mask="srtm_message_struct.h"/>
        <files mask="srtm_peercore_struct.h"/>
        <files mask="srtm_service_struct.h"/>
        <files mask="srtm_heap.h"/>
        <files mask="srtm_message_pool.h"/>
        <files mask="srtm_list.h"/>
        <files mask="srtm_mutex.h"/>
        <files mask="srtm_sem.h"/>
      </source>
      <source relative_path="port" type="src">
        <files mask="srtm_message_pool.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_srtm_MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="srtm" type="c_include"/>
        <include_path relative_path="port" type="c_include"/>
      </include_paths>
    </component>
    <component id="driver.srtm.freertos.MIMX9352" name="freertos" brief="Driver srtm freertos" version="1.0.0" full_name="Driver srtm freertos" devices="MIMX9352xxxxM" user_visible="true" type="software_component" package_base_path="components/srtm/port" project_base_path="srtm/port">
      <dependencies>
        <component_dependency value="driver.srtm.MIMX9352"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="srtm_heap_freertos.c"/>
        <files mask="srtm_mutex_freertos.c"/>
        <files mask="srtm_sem_freertos.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_srtm_freertos_MIMX9352.cmake" hidden="true"/>
      </source>
    </component>
    <component id="platform.drivers.tmu_3.MIMX9352" name="tmu" brief="TMU Driver" version="2.0.0" full_name="TMU Driver" devices="MIMX9352xxxxM" device_cores="cm33_MIMX9352xxxxM" user_visible="true" type="driver" package_base_path="devices/MIMX9352/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMX9352"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_tmu.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_tmu.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_tmu_3_MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.tpm.MIMX9352" name="tpm" brief="TPM Driver" version="2.2.2" full_name="TPM Driver" devices="MIMX9352xxxxM" device_cores="cm33_MIMX9352xxxxM" user_visible="true" type="driver" package_base_path="devices/MIMX9352/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMX9352"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_tpm.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_tpm.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_tpm_MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.trdc1.MIMX9352" name="trdc" brief="TRDC Driver" version="2.1.0" full_name="TRDC Driver" devices="MIMX9352xxxxM" device_cores="cm33_MIMX9352xxxxM" user_visible="true" type="driver" package_base_path="devices/MIMX9352/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMX9352"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_trdc.h"/>
        <files mask="fsl_trdc_core.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_trdc.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_trdc_1_MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="driver.trdc_soc.MIMX9352" name="trdc_soc" brief="TRDC SOC Driver" version="2.0.0" full_name="TRDC SOC Driver" devices="MIMX9352xxxxM" device_cores="cm33_MIMX9352xxxxM" user_visible="true" type="driver" package_base_path="devices/MIMX9352/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMX9352"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_trdc_soc.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_trdc_soc_MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.trgmux.MIMX9352" name="trgmux" brief="TRGMUX Driver" version="2.0.1" full_name="TRGMUX Driver" devices="MIMX9352xxxxM" device_cores="cm33_MIMX9352xxxxM" user_visible="true" type="driver" package_base_path="devices/MIMX9352/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMX9352"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_trgmux.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_trgmux.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.tstmr.MIMX9352" name="tstmr" brief="TSTMR Driver" version="2.0.0" full_name="TSTMR Driver" devices="MIMX9352xxxxM" device_cores="cm33_MIMX9352xxxxM" user_visible="true" type="driver" package_base_path="devices/MIMX9352/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMX9352"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_tstmr.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_tstmr_MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.wdog32.MIMX9352" name="wdog" brief="WDOG32 Driver" version="2.0.4" full_name="WDOG32 Driver" devices="MIMX9352xxxxM" device_cores="cm33_MIMX9352xxxxM" user_visible="true" type="driver" package_base_path="devices/MIMX9352/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMX9352"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_wdog32.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_wdog32.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_wdog32_MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="driver.wm8960.MIMX9352" name="wm8960" brief="Driver wm8960" version="2.2.1" full_name="Driver wm8960" devices="MIMX9352xxxxM" device_cores="cm33_MIMX9352xxxxM" user_visible="true" type="software_component" package_base_path="components/codec/wm8960" project_base_path="codec">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMX9352"/>
          <component_dependency value="component.codec_i2c.MIMX9352"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_wm8960.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_wm8960.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_wm8960_MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="driver.wm8962.MIMX9352" name="wm8962" brief="Driver wm8962" version="2.0.3" full_name="Driver wm8962" devices="MIMX9352xxxxM" device_cores="cm33_MIMX9352xxxxM" user_visible="true" type="software_component" package_base_path="components/codec/wm8962" project_base_path="codec">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMX9352"/>
          <component_dependency value="component.codec_i2c.MIMX9352"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_wm8962.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_wm8962.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_wm8962_MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.baremetal.MIMX9352" name="baremetal" brief="Middleware baremetal" version="1.0.0" full_name="Baremetal" devices="MIMX9352xxxxM" user_visible="true" type="OS" package_base_path="middleware" project_base_path="middleware">
      <defines>
        <define name="SDK_OS_BAREMETAL" value=""/>
      </defines>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="middleware_baremetal_MIMX9352.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.eiq.gui.printf.MIMX9352" name="eiq_GuiPrintf" brief="Video capture and display abstract layer" version="1.0.0" full_name="eiq_GuiPrintf" devices="MIMX9352xxxxM" user_visible="false" type="middleware" package_base_path="middleware/eiq" project_base_path="source">
      <dependencies>
        <component_dependency value="middleware.eiq.worker.MIMX9352"/>
      </dependencies>
      <source relative_path="common/gprintf" project_relative_path="gprintf" type="src">
        <files mask="chgui.c"/>
      </source>
      <source relative_path="common/gprintf" project_relative_path="gprintf" type="c_include">
        <files mask="chgui.h"/>
        <files mask="font.h"/>
      </source>
      <include_paths>
        <include_path relative_path="common/gprintf" project_relative_path="gprintf" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.eiq.tensorflow_lite_micro.MIMX9352" name="TensorFlow Lite Micro" brief="TensorFlow Lite Micro library" version="2.6.0" full_name="TensorFlow Lite Micro library" devices="MIMX9352xxxxM" category="Machine Learning/eIQ" user_visible="false" type="middleware" package_base_path="middleware/eiq/tensorflow-lite" project_base_path="eiq/tensorflow-lite">
      <dependencies>
        <all>
          <component_dependency value="middleware.eiq.tensorflow_lite_micro.third_party.flatbuffers.MIMX9352"/>
          <component_dependency value="middleware.eiq.tensorflow_lite_micro.third_party.gemmlowp.MIMX9352"/>
          <component_dependency value="middleware.eiq.tensorflow_lite_micro.third_party.ruy.MIMX9352"/>
        </all>
      </dependencies>
      <source relative_path="./" type="doc">
        <files mask="AUTHORS"/>
        <files mask="LICENSE"/>
        <files mask="NOTICE"/>
        <files mask="ChangeLogKSDK.txt"/>
        <files mask="readme.txt"/>
      </source>
      <source relative_path="tensorflow/lite" type="c_include">
        <files mask="context_util.h"/>
        <files mask="portable_type_to_tflitetype.h"/>
      </source>
      <source relative_path="tensorflow/lite/c" type="c_include">
        <files mask="common.h"/>
        <files mask="builtin_op_data.h"/>
        <files mask="c_api_types.h"/>
      </source>
      <source relative_path="tensorflow/lite/c" type="src">
        <files mask="common.cpp"/>
      </source>
      <source relative_path="tensorflow/lite/core/api" type="c_include">
        <files mask="error_reporter.h"/>
        <files mask="flatbuffer_conversions.h"/>
        <files mask="op_resolver.h"/>
        <files mask="tensor_utils.h"/>
      </source>
      <source relative_path="tensorflow/lite/core/api" type="src">
        <files mask="error_reporter.cpp"/>
        <files mask="flatbuffer_conversions.cpp"/>
        <files mask="op_resolver.cpp"/>
        <files mask="tensor_utils.cpp"/>
      </source>
      <source relative_path="tensorflow/lite/kernels" type="c_include">
        <files mask="kernel_util.h"/>
        <files mask="op_macros.h"/>
        <files mask="padding.h"/>
      </source>
      <source relative_path="tensorflow/lite/kernels" type="src">
        <files mask="kernel_utils.cpp"/>
      </source>
      <source relative_path="tensorflow/lite/kernels/internal" type="c_include">
        <files mask="common.h"/>
        <files mask="compatibility.h"/>
        <files mask="cppmath.h"/>
        <files mask="max.h"/>
        <files mask="min.h"/>
        <files mask="portable_tensor.h"/>
        <files mask="portable_tensor_utils.h"/>
        <files mask="quantization_util.h"/>
        <files mask="runtime_shape.h"/>
        <files mask="strided_slice_logic.h"/>
        <files mask="tensor_ctypes.h"/>
        <files mask="types.h"/>
      </source>
      <source relative_path="tensorflow/lite/kernels/internal" type="src">
        <files mask="quantization_util.cpp"/>
      </source>
      <source relative_path="tensorflow/lite/kernels/internal/optimized" type="c_include">
        <files mask="neon_check.h"/>
      </source>
      <source relative_path="tensorflow/lite/kernels/internal/reference" type="c_include">
        <files mask="add.h"/>
        <files mask="add_n.h"/>
        <files mask="arg_min_max.h"/>
        <files mask="batch_to_space_nd.h"/>
        <files mask="binary_function.h"/>
        <files mask="broadcast_args.h"/>
        <files mask="broadcast_to.h"/>
        <files mask="ceil.h"/>
        <files mask="comparisons.h"/>
        <files mask="concatenation.h"/>
        <files mask="conv.h"/>
        <files mask="cumsum.h"/>
        <files mask="depth_to_space.h"/>
        <files mask="depthwiseconv_float.h"/>
        <files mask="depthwiseconv_uint8.h"/>
        <files mask="dequantize.h"/>
        <files mask="div.h"/>
        <files mask="elu.h"/>
        <files mask="exp.h"/>
        <files mask="fill.h"/>
        <files mask="floor.h"/>
        <files mask="floor_div.h"/>
        <files mask="floor_mod.h"/>
        <files mask="fully_connected.h"/>
        <files mask="hard_swish.h"/>
        <files mask="l2normalization.h"/>
        <files mask="leaky_relu.h"/>
        <files mask="log_softmax.h"/>
        <files mask="logistic.h"/>
        <files mask="maximum_minimum.h"/>
        <files mask="mul.h"/>
        <files mask="neg.h"/>
        <files mask="pad.h"/>
        <files mask="pooling.h"/>
        <files mask="portable_tensor_utils_impl.h"/>
        <files mask="prelu.h"/>
        <files mask="process_broadcast_shapes.h"/>
        <files mask="quantize.h"/>
        <files mask="reduce.h"/>
        <files mask="requantize.h"/>
        <files mask="resize_bilinear.h"/>
        <files mask="resize_nearest_neighbor.h"/>
        <files mask="round.h"/>
        <files mask="select.h"/>
        <files mask="slice.h"/>
        <files mask="softmax.h"/>
        <files mask="space_to_batch_nd.h"/>
        <files mask="space_to_depth.h"/>
        <files mask="strided_slice.h"/>
        <files mask="sub.h"/>
        <files mask="tanh.h"/>
        <files mask="transpose.h"/>
        <files mask="transpose_conv.h"/>
      </source>
      <source relative_path="tensorflow/lite/kernels/internal/reference" type="src">
        <files mask="portable_tensor_utils.cpp"/>
      </source>
      <source relative_path="tensorflow/lite/kernels/internal/reference/integer_ops" type="c_include">
        <files mask="add.h"/>
        <files mask="conv.h"/>
        <files mask="depthwise_conv.h"/>
        <files mask="fully_connected.h"/>
        <files mask="l2normalization.h"/>
        <files mask="logistic.h"/>
        <files mask="mean.h"/>
        <files mask="mul.h"/>
        <files mask="pooling.h"/>
        <files mask="tanh.h"/>
        <files mask="transpose_conv.h"/>
      </source>
      <source relative_path="tensorflow/lite/micro" type="src">
        <files mask="all_ops_resolver.cpp"/>
        <files mask="debug_log.cpp"/>
        <files mask="fake_micro_context.cpp"/>
        <files mask="flatbuffer_utils.cpp"/>
        <files mask="memory_helpers.cpp"/>
        <files mask="micro_allocation_info.cpp"/>
        <files mask="micro_allocator.cpp"/>
        <files mask="micro_context.cpp"/>
        <files mask="micro_error_reporter.cpp"/>
        <files mask="micro_graph.cpp"/>
        <files mask="micro_interpreter.cpp"/>
        <files mask="micro_log.cpp"/>
        <files mask="micro_profiler.cpp"/>
        <files mask="micro_resource_variable.cpp"/>
        <files mask="micro_string.cpp"/>
        <files mask="micro_time.cpp"/>
        <files mask="micro_utils.cpp"/>
        <files mask="recording_micro_allocator.cpp"/>
      </source>
      <source relative_path="tensorflow/lite/micro" type="c_include">
        <files mask="all_ops_resolver.h"/>
        <files mask="compatibility.h"/>
        <files mask="debug_log.h"/>
        <files mask="fake_micro_context.h"/>
        <files mask="flatbuffer_utils.h"/>
        <files mask="memory_helpers.h"/>
        <files mask="micro_allocation_info.h"/>
        <files mask="micro_allocator.h"/>
        <files mask="micro_arena_constants.h"/>
        <files mask="micro_context.h"/>
        <files mask="micro_error_reporter.h"/>
        <files mask="micro_graph.h"/>
        <files mask="micro_interpreter.h"/>
        <files mask="micro_log.h"/>
        <files mask="micro_mutable_op_resolver.h"/>
        <files mask="micro_op_resolver.h"/>
        <files mask="micro_profiler.h"/>
        <files mask="micro_resource_variable.h"/>
        <files mask="micro_string.h"/>
        <files mask="micro_time.h"/>
        <files mask="micro_utils.h"/>
        <files mask="recording_micro_allocator.h"/>
      </source>
      <source relative_path="tensorflow/lite/micro/kernels" type="c_include">
        <files mask="activation_utils.h"/>
        <files mask="activations.h"/>
        <files mask="add.h"/>
        <files mask="circular_buffer.h"/>
        <files mask="conv.h"/>
        <files mask="depthwise_conv.h"/>
        <files mask="dequantize.h"/>
        <files mask="ethosu.h"/>
        <files mask="fully_connected.h"/>
        <files mask="hard_swish.h"/>
        <files mask="kernel_runner.h"/>
        <files mask="kernel_util.h"/>
        <files mask="leaky_relu.h"/>
        <files mask="logical.h"/>
        <files mask="logistic.h"/>
        <files mask="lstm_eval.h"/>
        <files mask="lstm_shared.h"/>
        <files mask="micro_ops.h"/>
        <files mask="micro_tensor_utils.h"/>
        <files mask="micro_utils.h"/>
        <files mask="mul.h"/>
        <files mask="pooling.h"/>
        <files mask="prelu.h"/>
        <files mask="quantize.h"/>
        <files mask="reduce.h"/>
        <files mask="softmax.h"/>
        <files mask="sub.h"/>
        <files mask="svdf.h"/>
      </source>
      <source relative_path="tensorflow/lite/micro/kernels" type="src">
        <files mask="activations_common.cpp"/>
        <files mask="add_common.cpp"/>
        <files mask="add_n.cpp"/>
        <files mask="arg_min_max.cpp"/>
        <files mask="assign_variable.cpp"/>
        <files mask="batch_to_space_nd.cpp"/>
        <files mask="broadcast_args.cpp"/>
        <files mask="broadcast_to.cpp"/>
        <files mask="call_once.cpp"/>
        <files mask="cast.cpp"/>
        <files mask="ceil.cpp"/>
        <files mask="circular_buffer.cpp"/>
        <files mask="circular_buffer_common.cpp"/>
        <files mask="comparisons.cpp"/>
        <files mask="concatenation.cpp"/>
        <files mask="conv_common.cpp"/>
        <files mask="cumsum.cpp"/>
        <files mask="depth_to_space.cpp"/>
        <files mask="depthwise_conv_common.cpp"/>
        <files mask="dequantize.cpp"/>
        <files mask="dequantize_common.cpp"/>
        <files mask="detection_postprocess.cpp"/>
        <files mask="div.cpp"/>
        <files mask="elementwise.cpp"/>
        <files mask="elu.cpp"/>
        <files mask="exp.cpp"/>
        <files mask="expand_dims.cpp"/>
        <files mask="fill.cpp"/>
        <files mask="floor_div.cpp"/>
        <files mask="floor_mod.cpp"/>
        <files mask="fully_connected_common.cpp"/>
        <files mask="gather.cpp"/>
        <files mask="gather_nd.cpp"/>
        <files mask="hard_swish.cpp"/>
        <files mask="hard_swish_common.cpp"/>
        <files mask="if.cpp"/>
        <files mask="kernel_util.cpp"/>
        <files mask="l2_pool_2d.cpp"/>
        <files mask="l2norm.cpp"/>
        <files mask="leaky_relu_common.cpp"/>
        <files mask="log_softmax.cpp"/>
        <files mask="logical.cpp"/>
        <files mask="logical_common.cpp"/>
        <files mask="logistic_common.cpp"/>
        <files mask="maximum_minimum.cpp"/>
        <files mask="micro_tensor_utils.cpp"/>
        <files mask="mirror_pad.cpp"/>
        <files mask="mul_common.cpp"/>
        <files mask="neg.cpp"/>
        <files mask="pack.cpp"/>
        <files mask="pooling_common.cpp"/>
        <files mask="prelu.cpp"/>
        <files mask="prelu_common.cpp"/>
        <files mask="quantize_common.cpp"/>
        <files mask="read_variable.cpp"/>
        <files mask="reduce_common.cpp"/>
        <files mask="resize_bilinear.cpp"/>
        <files mask="resize_nearest_neighbor.cpp"/>
        <files mask="round.cpp"/>
        <files mask="select.cpp"/>
        <files mask="shape.cpp"/>
        <files mask="slice.cpp"/>
        <files mask="softmax_common.cpp"/>
        <files mask="space_to_batch_nd.cpp"/>
        <files mask="space_to_depth.cpp"/>
        <files mask="split.cpp"/>
        <files mask="split_v.cpp"/>
        <files mask="squared_difference.cpp"/>
        <files mask="squeeze.cpp"/>
        <files mask="sub_common.cpp"/>
        <files mask="svdf_common.cpp"/>
        <files mask="tanh.cpp"/>
        <files mask="transpose.cpp"/>
        <files mask="unpack.cpp"/>
        <files mask="var_handle.cpp"/>
        <files mask="while.cpp"/>
        <files mask="zeros_like.cpp"/>
      </source>
      <source relative_path="tensorflow/lite/micro/arena_allocator" type="c_include">
        <files mask="ibuffer_allocator.h"/>
        <files mask="non_persistent_arena_buffer_allocator.h"/>
        <files mask="persistent_arena_buffer_allocator.h"/>
        <files mask="recording_single_arena_buffer_allocator.h"/>
        <files mask="single_arena_buffer_allocator.h"/>
      </source>
      <source relative_path="tensorflow/lite/micro/arena_allocator" type="src">
        <files mask="non_persistent_arena_buffer_allocator.cpp"/>
        <files mask="persistent_arena_buffer_allocator.cpp"/>
        <files mask="recording_single_arena_buffer_allocator.cpp"/>
        <files mask="single_arena_buffer_allocator.cpp"/>
      </source>
      <source relative_path="tensorflow/lite/micro/memory_planner" type="c_include">
        <files mask="greedy_memory_planner.h"/>
        <files mask="linear_memory_planner.h"/>
        <files mask="memory_plan_struct.h"/>
        <files mask="micro_memory_planner.h"/>
        <files mask="non_persistent_buffer_planner_shim.h"/>
      </source>
      <source relative_path="tensorflow/lite/micro/memory_planner" type="src">
        <files mask="greedy_memory_planner.cpp"/>
        <files mask="linear_memory_planner.cpp"/>
        <files mask="non_persistent_buffer_planner_shim.cpp"/>
      </source>
      <source relative_path="tensorflow/lite/schema" type="src">
        <files mask="schema_utils.cpp"/>
      </source>
      <source relative_path="tensorflow/lite/schema" type="c_include">
        <files mask="schema_generated.h"/>
        <files mask="schema_utils.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="middleware_eiq_tensorflow_lite_micro_MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.eiq.tensorflow_lite_micro.cmsis_nn.MIMX9352" name="TensorFlow Lite Micro with CMSIS-NN kernels" brief="TensorFlow Lite Micro library with CMSIS-NN kernel implementations" version="2.6.0" full_name="TensorFlow Lite Micro library with CMSIS-NN kernel implementations" devices="MIMX9352xxxxM" device_cores="cm33_MIMX9352xxxxM" category="Machine Learning/eIQ" user_visible="true" type="middleware" package_base_path="middleware/eiq/tensorflow-lite" project_base_path="eiq/tensorflow-lite">
      <defines>
        <define name="CMSIS_NN" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.eiq.tensorflow_lite_micro.MIMX9352"/>
          <component_dependency value="middleware.eiq.tensorflow_lite_micro.third_party.cmsis_nn.MIMX9352"/>
        </all>
      </dependencies>
      <source relative_path="tensorflow/lite/micro/kernels/cmsis_nn" type="src">
        <files mask="add.cpp"/>
        <files mask="conv.cpp"/>
        <files mask="depthwise_conv.cpp"/>
        <files mask="fully_connected.cpp"/>
        <files mask="mul.cpp"/>
        <files mask="pooling.cpp"/>
        <files mask="softmax.cpp"/>
        <files mask="svdf.cpp"/>
      </source>
      <source relative_path="tensorflow/lite/micro/kernels" type="src">
        <files mask="activations.cpp"/>
        <files mask="ethosu.cpp"/>
        <files mask="floor.cpp"/>
        <files mask="leaky_relu.cpp"/>
        <files mask="logistic.cpp"/>
        <files mask="lstm_eval.cpp"/>
        <files mask="pad.cpp"/>
        <files mask="quantize.cpp"/>
        <files mask="reduce.cpp"/>
        <files mask="reshape.cpp"/>
        <files mask="strided_slice.cpp"/>
        <files mask="sub.cpp"/>
        <files mask="transpose_conv.cpp"/>
        <files mask="unidirectional_sequence_lstm.cpp"/>
      </source>
      <source exclude="true" relative_path="tensorflow/lite/micro/kernels" type="src">
        <files mask="add.cpp"/>
        <files mask="conv.cpp"/>
        <files mask="depthwise_conv.cpp"/>
        <files mask="fully_connected.cpp"/>
        <files mask="mul.cpp"/>
        <files mask="pooling.cpp"/>
        <files mask="softmax.cpp"/>
        <files mask="svdf.cpp"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.eiq.tensorflow_lite_micro.cmsis_nn.ethosu.MIMX9352" name="TensorFlow Lite Micro with CMSIS-NN and Ethos-U kernels" brief="TensorFlow Lite Micro library with CMSIS-NN and Ethos-U kernel implementations" version="2.6.0" full_name="TensorFlow Lite Micro library with CMSIS-NN and Ethos-U kernel implementations" devices="MIMX9352xxxxM" device_cores="cm33_MIMX9352xxxxM" category="Machine Learning/eIQ" user_visible="true" type="middleware" package_base_path="middleware/eiq/tensorflow-lite" project_base_path="eiq/tensorflow-lite">
      <defines>
        <define name="CMSIS_NN" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.eiq.tensorflow_lite_micro.MIMX9352"/>
          <component_dependency value="middleware.eiq.tensorflow_lite_micro.third_party.cmsis_nn.MIMX9352"/>
        </all>
      </dependencies>
      <source relative_path="tensorflow/lite/micro/kernels/cmsis_nn" type="src">
        <files mask="add.cpp"/>
        <files mask="conv.cpp"/>
        <files mask="depthwise_conv.cpp"/>
        <files mask="fully_connected.cpp"/>
        <files mask="mul.cpp"/>
        <files mask="pooling.cpp"/>
        <files mask="softmax.cpp"/>
        <files mask="svdf.cpp"/>
      </source>
      <source relative_path="tensorflow/lite/micro/kernels" type="src">
        <files mask="activations.cpp"/>
        <files mask="floor.cpp"/>
        <files mask="leaky_relu.cpp"/>
        <files mask="logistic.cpp"/>
        <files mask="lstm_eval.cpp"/>
        <files mask="pad.cpp"/>
        <files mask="quantize.cpp"/>
        <files mask="reduce.cpp"/>
        <files mask="reshape.cpp"/>
        <files mask="strided_slice.cpp"/>
        <files mask="sub.cpp"/>
        <files mask="transpose_conv.cpp"/>
        <files mask="unidirectional_sequence_lstm.cpp"/>
      </source>
      <source exclude="true" relative_path="tensorflow/lite/micro/kernels" type="src">
        <files mask="add.cpp"/>
        <files mask="conv.cpp"/>
        <files mask="depthwise_conv.cpp"/>
        <files mask="fully_connected.cpp"/>
        <files mask="mul.cpp"/>
        <files mask="pooling.cpp"/>
        <files mask="softmax.cpp"/>
        <files mask="svdf.cpp"/>
      </source>
      <source relative_path="tensorflow/lite/micro/kernels/ethos_u" type="src">
        <files mask="ethosu.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="middleware_eiq_tensorflow_lite_micro_cmsis_nn_ethosu_MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.eiq.tensorflow_lite_micro.examples.microspeech.MIMX9352" name="TensorFlow Lite Micro word detection" brief="TensorFlow Lite Micro word detection library" version="2.6.0" full_name="TensorFlow Lite Micro word detection library" devices="MIMX9352xxxxM" category="Machine Learning/eIQ" user_visible="false" type="middleware" package_base_path="middleware/eiq/tensorflow-lite" project_base_path="eiq/tensorflow-lite">
      <dependencies>
        <component_dependency value="middleware.eiq.tensorflow_lite_micro.third_party.kissfft.MIMX9352"/>
      </dependencies>
      <source relative_path="tensorflow/lite/micro/examples/micro_speech" type="src">
        <files mask="audio_provider.cpp"/>
        <files mask="command_responder.cpp"/>
        <files mask="feature_provider.cpp"/>
        <files mask="recognize_commands.cpp"/>
      </source>
      <source relative_path="tensorflow/lite/micro/examples/micro_speech" type="c_include">
        <files mask="audio_provider.h"/>
        <files mask="command_responder.h"/>
        <files mask="feature_provider.h"/>
        <files mask="recognize_commands.h"/>
      </source>
      <source relative_path="tensorflow/lite/micro/examples/micro_speech/micro_features" type="src">
        <files mask="micro_features_generator.cpp"/>
        <files mask="micro_model_settings.cpp"/>
      </source>
      <source relative_path="tensorflow/lite/micro/examples/micro_speech/micro_features" type="c_include">
        <files mask="micro_features_generator.h"/>
        <files mask="micro_model_settings.h"/>
        <files mask="model.h"/>
      </source>
      <source relative_path="tensorflow/lite/experimental/microfrontend/lib" type="src">
        <files mask="filterbank.c"/>
        <files mask="filterbank_util.c"/>
        <files mask="frontend.c"/>
        <files mask="frontend_util.c"/>
        <files mask="log_lut.c"/>
        <files mask="log_scale.c"/>
        <files mask="log_scale_util.c"/>
        <files mask="noise_reduction.c"/>
        <files mask="noise_reduction_util.c"/>
        <files mask="pcan_gain_control.c"/>
        <files mask="pcan_gain_control_util.c"/>
        <files mask="window.c"/>
        <files mask="window_util.c"/>
        <files mask="fft.cpp"/>
        <files mask="fft_util.cpp"/>
        <files mask="kiss_fft_int16.cpp"/>
      </source>
      <source relative_path="tensorflow/lite/experimental/microfrontend/lib" type="c_include">
        <files mask="bits.h"/>
        <files mask="fft.h"/>
        <files mask="fft_util.h"/>
        <files mask="filterbank.h"/>
        <files mask="filterbank_util.h"/>
        <files mask="frontend.h"/>
        <files mask="frontend_util.h"/>
        <files mask="kiss_fft_common.h"/>
        <files mask="kiss_fft_int16.h"/>
        <files mask="log_lut.h"/>
        <files mask="log_scale.h"/>
        <files mask="log_scale_util.h"/>
        <files mask="noise_reduction.h"/>
        <files mask="noise_reduction_util.h"/>
        <files mask="pcan_gain_control.h"/>
        <files mask="pcan_gain_control_util.h"/>
        <files mask="window.h"/>
        <files mask="window_util.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.eiq.tensorflow_lite_micro.neutron.MIMX9352" name="TensorFlow Lite Micro with Neutron kernels" brief="TensorFlow Lite Micro library with Neutron kernel implementations" version="2.6.0" full_name="TensorFlow Lite Micro library with Neutron kernel implementations" devices="MIMX9352xxxxM" category="Machine Learning/eIQ" user_visible="false" type="middleware" package_base_path="middleware/eiq/tensorflow-lite/tensorflow/lite/micro/kernels/neutron" project_base_path="eiq/tensorflow-lite/tensorflow/lite/micro/kernels/neutron">
      <dependencies>
        <all>
          <component_dependency value="middleware.eiq.tensorflow_lite_micro.MIMX9352"/>
          <component_dependency value="middleware.eiq.tensorflow_lite_micro.third_party.neutron_lib.binary.MIMX9352"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="neutron.cpp"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="neutron.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.eiq.tensorflow_lite_micro.reference.MIMX9352" name="TensorFlow Lite Micro with reference kernels" brief="TensorFlow Lite Micro library with reference kernel implementations" version="2.6.0" full_name="TensorFlow Lite Micro library with reference kernel implementations" devices="MIMX9352xxxxM" category="Machine Learning/eIQ" user_visible="true" type="middleware" package_base_path="middleware/eiq/tensorflow-lite" project_base_path="eiq/tensorflow-lite">
      <dependencies>
        <component_dependency value="middleware.eiq.tensorflow_lite_micro.MIMX9352"/>
      </dependencies>
      <source relative_path="tensorflow/lite/micro/kernels" type="src">
        <files mask="activations.cpp"/>
        <files mask="add.cpp"/>
        <files mask="conv.cpp"/>
        <files mask="depthwise_conv.cpp"/>
        <files mask="floor.cpp"/>
        <files mask="fully_connected.cpp"/>
        <files mask="leaky_relu.cpp"/>
        <files mask="logistic.cpp"/>
        <files mask="lstm_eval.cpp"/>
        <files mask="mul.cpp"/>
        <files mask="pad.cpp"/>
        <files mask="pooling.cpp"/>
        <files mask="quantize.cpp"/>
        <files mask="reduce.cpp"/>
        <files mask="reshape.cpp"/>
        <files mask="svdf.cpp"/>
        <files mask="softmax.cpp"/>
        <files mask="strided_slice.cpp"/>
        <files mask="sub.cpp"/>
        <files mask="transpose_conv.cpp"/>
        <files mask="unidirectional_sequence_lstm.cpp"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.eiq.tensorflow_lite_micro.third_party.cmsis_nn.MIMX9352" name="CMSIS-NN" brief="CMSIS-NN library" version="3.0.0" full_name="CMSIS-NN library" devices="MIMX9352xxxxM" category="Machine Learning/eIQ" user_visible="false" type="middleware" package_base_path="middleware/eiq/tensorflow-lite/third_party/cmsis" project_base_path="eiq/tensorflow-lite/third_party/cmsis">
      <source relative_path="CMSIS/Core/Include" type="c_include">
        <files mask="cachel1_armv7.h"/>
        <files mask="cmsis_armcc.h"/>
        <files mask="cmsis_armclang.h"/>
        <files mask="cmsis_armclang_ltm.h"/>
        <files mask="cmsis_compiler.h"/>
        <files mask="cmsis_gcc.h"/>
        <files mask="cmsis_iccarm.h"/>
        <files mask="cmsis_version.h"/>
        <files mask="core_armv81mml.h"/>
        <files mask="core_armv8mbl.h"/>
        <files mask="core_armv8mml.h"/>
        <files mask="core_cm0.h"/>
        <files mask="core_cm0plus.h"/>
        <files mask="core_cm1.h"/>
        <files mask="core_cm23.h"/>
        <files mask="core_cm3.h"/>
        <files mask="core_cm33.h"/>
        <files mask="core_cm35p.h"/>
        <files mask="core_cm4.h"/>
        <files mask="core_cm55.h"/>
        <files mask="core_cm7.h"/>
        <files mask="core_cm85.h"/>
        <files mask="core_sc000.h"/>
        <files mask="core_sc300.h"/>
        <files mask="core_star.h"/>
        <files mask="core_starmc1.h"/>
        <files mask="mpu_armv7.h"/>
        <files mask="mpu_armv8.h"/>
        <files mask="pac_armv81.h"/>
        <files mask="pmu_armv8.h"/>
        <files mask="tz_context.h"/>
      </source>
      <source relative_path="CMSIS/DSP/Include" type="c_include">
        <files mask="arm_common_tables.h"/>
        <files mask="arm_common_tables_f16.h"/>
        <files mask="arm_const_structs.h"/>
        <files mask="arm_const_structs_f16.h"/>
        <files mask="arm_helium_utils.h"/>
        <files mask="arm_math.h"/>
        <files mask="arm_math_f16.h"/>
        <files mask="arm_math_memory.h"/>
        <files mask="arm_math_types.h"/>
        <files mask="arm_math_types_f16.h"/>
        <files mask="arm_mve_tables.h"/>
        <files mask="arm_mve_tables_f16.h"/>
        <files mask="arm_vec_math.h"/>
        <files mask="arm_vec_math_f16.h"/>
      </source>
      <source relative_path="CMSIS/DSP/Include/dsp" type="c_include">
        <files mask="basic_math_functions.h"/>
        <files mask="basic_math_functions_f16.h"/>
        <files mask="bayes_functions.h"/>
        <files mask="bayes_functions_f16.h"/>
        <files mask="complex_math_functions.h"/>
        <files mask="complex_math_functions_f16.h"/>
        <files mask="controller_functions.h"/>
        <files mask="controller_functions_f16.h"/>
        <files mask="distance_functions.h"/>
        <files mask="distance_functions_f16.h"/>
        <files mask="fast_math_functions.h"/>
        <files mask="fast_math_functions_f16.h"/>
        <files mask="filtering_functions.h"/>
        <files mask="filtering_functions_f16.h"/>
        <files mask="interpolation_functions.h"/>
        <files mask="interpolation_functions_f16.h"/>
        <files mask="matrix_functions.h"/>
        <files mask="matrix_functions_f16.h"/>
        <files mask="none.h"/>
        <files mask="quaternion_math_functions.h"/>
        <files mask="statistics_functions.h"/>
        <files mask="statistics_functions_f16.h"/>
        <files mask="support_functions.h"/>
        <files mask="support_functions_f16.h"/>
        <files mask="svm_defines.h"/>
        <files mask="svm_functions.h"/>
        <files mask="svm_functions_f16.h"/>
        <files mask="transform_functions.h"/>
        <files mask="transform_functions_f16.h"/>
        <files mask="utils.h"/>
      </source>
      <source relative_path="CMSIS/NN" type="doc">
        <files mask="README.md"/>
      </source>
      <source relative_path="CMSIS/NN/Include" type="c_include">
        <files mask="arm_nn_math_types.h"/>
        <files mask="arm_nn_tables.h"/>
        <files mask="arm_nn_types.h"/>
        <files mask="arm_nnfunctions.h"/>
        <files mask="arm_nnsupportfunctions.h"/>
      </source>
      <source relative_path="CMSIS/NN/Source/ActivationFunctions" type="src">
        <files mask="arm_nn_activations_q15.c"/>
        <files mask="arm_nn_activations_q7.c"/>
        <files mask="arm_relu6_s8.c"/>
        <files mask="arm_relu_q15.c"/>
        <files mask="arm_relu_q7.c"/>
      </source>
      <source relative_path="CMSIS/NN/Source/BasicMathFunctions" type="src">
        <files mask="arm_elementwise_add_s16.c"/>
        <files mask="arm_elementwise_add_s8.c"/>
        <files mask="arm_elementwise_mul_s16.c"/>
        <files mask="arm_elementwise_mul_s8.c"/>
      </source>
      <source relative_path="CMSIS/NN/Source/ConcatenationFunctions" type="src">
        <files mask="arm_concatenation_s8_w.c"/>
        <files mask="arm_concatenation_s8_x.c"/>
        <files mask="arm_concatenation_s8_y.c"/>
        <files mask="arm_concatenation_s8_z.c"/>
      </source>
      <source relative_path="CMSIS/NN/Source/ConvolutionFunctions" type="src">
        <files mask="arm_convolve_1_x_n_s8.c"/>
        <files mask="arm_convolve_1x1_HWC_q7_fast_nonsquare.c"/>
        <files mask="arm_convolve_1x1_s8_fast.c"/>
        <files mask="arm_convolve_HWC_q15_basic.c"/>
        <files mask="arm_convolve_HWC_q15_fast.c"/>
        <files mask="arm_convolve_HWC_q15_fast_nonsquare.c"/>
        <files mask="arm_convolve_HWC_q7_RGB.c"/>
        <files mask="arm_convolve_HWC_q7_basic.c"/>
        <files mask="arm_convolve_HWC_q7_basic_nonsquare.c"/>
        <files mask="arm_convolve_HWC_q7_fast.c"/>
        <files mask="arm_convolve_HWC_q7_fast_nonsquare.c"/>
        <files mask="arm_convolve_fast_s16.c"/>
        <files mask="arm_convolve_s16.c"/>
        <files mask="arm_convolve_s8.c"/>
        <files mask="arm_convolve_wrapper_s16.c"/>
        <files mask="arm_convolve_wrapper_s8.c"/>
        <files mask="arm_depthwise_conv_3x3_s8.c"/>
        <files mask="arm_depthwise_conv_s16.c"/>
        <files mask="arm_depthwise_conv_s8.c"/>
        <files mask="arm_depthwise_conv_s8_opt.c"/>
        <files mask="arm_depthwise_conv_u8_basic_ver1.c"/>
        <files mask="arm_depthwise_conv_wrapper_s8.c"/>
        <files mask="arm_depthwise_separable_conv_HWC_q7.c"/>
        <files mask="arm_depthwise_separable_conv_HWC_q7_nonsquare.c"/>
        <files mask="arm_nn_depthwise_conv_s8_core.c"/>
        <files mask="arm_nn_mat_mult_kernel_q7_q15.c"/>
        <files mask="arm_nn_mat_mult_kernel_q7_q15_reordered.c"/>
        <files mask="arm_nn_mat_mult_kernel_s8_s16.c"/>
        <files mask="arm_nn_mat_mult_s8.c"/>
      </source>
      <source relative_path="CMSIS/NN/Source/FullyConnectedFunctions" type="src">
        <files mask="arm_fully_connected_mat_q7_vec_q15.c"/>
        <files mask="arm_fully_connected_mat_q7_vec_q15_opt.c"/>
        <files mask="arm_fully_connected_q15.c"/>
        <files mask="arm_fully_connected_q15_opt.c"/>
        <files mask="arm_fully_connected_q7.c"/>
        <files mask="arm_fully_connected_q7_opt.c"/>
        <files mask="arm_fully_connected_s16.c"/>
        <files mask="arm_fully_connected_s8.c"/>
      </source>
      <source relative_path="CMSIS/NN/Source/NNSupportFunctions" type="src">
        <files mask="arm_nn_accumulate_q7_to_q15.c"/>
        <files mask="arm_nn_add_q7.c"/>
        <files mask="arm_nn_depthwise_conv_nt_t_padded_s8.c"/>
        <files mask="arm_nn_depthwise_conv_nt_t_s8.c"/>
        <files mask="arm_nn_mat_mul_core_1x_s8.c"/>
        <files mask="arm_nn_mat_mul_core_4x_s8.c"/>
        <files mask="arm_nn_mat_mul_kernel_s16.c"/>
        <files mask="arm_nn_mat_mult_nt_t_s8.c"/>
        <files mask="arm_nn_mult_q15.c"/>
        <files mask="arm_nn_mult_q7.c"/>
        <files mask="arm_nn_vec_mat_mult_t_s16.c"/>
        <files mask="arm_nn_vec_mat_mult_t_s8.c"/>
        <files mask="arm_nn_vec_mat_mult_t_svdf_s8.c"/>
        <files mask="arm_nntables.c"/>
        <files mask="arm_q7_to_q15_no_shift.c"/>
        <files mask="arm_q7_to_q15_reordered_no_shift.c"/>
        <files mask="arm_q7_to_q15_reordered_with_offset.c"/>
        <files mask="arm_q7_to_q15_with_offset.c"/>
      </source>
      <source relative_path="CMSIS/NN/Source/PoolingFunctions" type="src">
        <files mask="arm_avgpool_s16.c"/>
        <files mask="arm_avgpool_s8.c"/>
        <files mask="arm_max_pool_s16.c"/>
        <files mask="arm_max_pool_s8.c"/>
        <files mask="arm_pool_q7_HWC.c"/>
      </source>
      <source relative_path="CMSIS/NN/Source/ReshapeFunctions" type="src">
        <files mask="arm_reshape_s8.c"/>
      </source>
      <source relative_path="CMSIS/NN/Source/SVDFunctions" type="src">
        <files mask="arm_svdf_s8.c"/>
        <files mask="arm_svdf_state_s16_s8.c"/>
      </source>
      <source relative_path="CMSIS/NN/Source/SoftmaxFunctions" type="src">
        <files mask="arm_nn_softmax_common_s8.c"/>
        <files mask="arm_softmax_q15.c"/>
        <files mask="arm_softmax_q7.c"/>
        <files mask="arm_softmax_s16.c"/>
        <files mask="arm_softmax_s8.c"/>
        <files mask="arm_softmax_s8_s16.c"/>
        <files mask="arm_softmax_u8.c"/>
        <files mask="arm_softmax_with_batch_q7.c"/>
      </source>
      <source relative_path="./" type="doc">
        <files mask="LICENSE.txt"/>
        <files mask="README.md"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="middleware_eiq_tensorflow_lite_micro_third_party_cmsis_nn_MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="CMSIS/NN/Include" type="c_include"/>
        <include_path relative_path="CMSIS/Core/Include" type="c_include"/>
        <include_path relative_path="CMSIS/DSP/Include" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.eiq.tensorflow_lite_micro.third_party.fft2d.MIMX9352" name="FFT2D" brief="General Purpose FFT (Fast Fourier/Cosine/Sine Transform) Package" version="1.0.0" full_name="FFT2D library" devices="MIMX9352xxxxM" category="Machine Learning/eIQ" user_visible="false" type="middleware" package_base_path="middleware/eiq" project_base_path="eiq/tensorflow-lite">
      <source relative_path="tensorflow-lite/third_party/fft2d" project_relative_path="third_party/fft2d" type="src">
        <files mask="fftsg.c"/>
      </source>
      <source relative_path="tensorflow-lite/third_party/fft2d" project_relative_path="third_party/fft2d" type="c_include">
        <files mask="fft.h"/>
        <files mask="fft2d.h"/>
      </source>
      <source relative_path="tensorflow-lite/third_party/fft2d" project_relative_path="third_party/fft2d" type="doc">
        <files mask="readme.txt"/>
        <files mask="LICENSE"/>
      </source>
      <include_paths>
        <include_path relative_path="tensorflow-lite/third_party/fft2d" project_relative_path="third_party/fft2d" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.eiq.tensorflow_lite_micro.third_party.flatbuffers.MIMX9352" name="Flatbuffers" brief="Flatbuffers library" version="1.12.0" full_name="Flatbuffers library" devices="MIMX9352xxxxM" category="Machine Learning/eIQ" user_visible="false" type="middleware" package_base_path="middleware/eiq" project_base_path="eiq/tensorflow-lite">
      <source relative_path="tensorflow-lite/third_party/flatbuffers" project_relative_path="third_party/flatbuffers" type="doc">
        <files mask="readme.md"/>
        <files mask="LICENSE.txt"/>
      </source>
      <source relative_path="tensorflow-lite/third_party/flatbuffers/include/flatbuffers" project_relative_path="third_party/flatbuffers/include/flatbuffers" type="c_include">
        <files mask="allocator.h"/>
        <files mask="array.h"/>
        <files mask="base.h"/>
        <files mask="buffer.h"/>
        <files mask="buffer_ref.h"/>
        <files mask="default_allocator.h"/>
        <files mask="detached_buffer.h"/>
        <files mask="flatbuffer_builder.h"/>
        <files mask="flatbuffers.h"/>
        <files mask="flexbuffers.h"/>
        <files mask="stl_emulation.h"/>
        <files mask="strings.h"/>
        <files mask="struct.h"/>
        <files mask="table.h"/>
        <files mask="util.h"/>
        <files mask="vector.h"/>
        <files mask="vector_downward.h"/>
        <files mask="verifier.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="middleware_eiq_tensorflow_lite_micro_third_party_flatbuffers_MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="tensorflow-lite/third_party/flatbuffers/include" project_relative_path="third_party/flatbuffers/include" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.eiq.tensorflow_lite_micro.third_party.gemmlowp.MIMX9352" name="Gemmlowp" brief="Gemmlowp library" version="1.0.0" full_name="Gemmlowp library" devices="MIMX9352xxxxM" category="Machine Learning/eIQ" user_visible="false" type="middleware" package_base_path="middleware/eiq" project_base_path="eiq/tensorflow-lite">
      <source relative_path="tensorflow-lite/third_party/gemmlowp" project_relative_path="third_party/gemmlowp" type="doc">
        <files mask="LICENSE"/>
        <files mask="README.md"/>
      </source>
      <source relative_path="tensorflow-lite/third_party/gemmlowp/fixedpoint" project_relative_path="third_party/gemmlowp/fixedpoint" type="c_include">
        <files mask="fixedpoint.h"/>
      </source>
      <source relative_path="tensorflow-lite/third_party/gemmlowp/internal" project_relative_path="third_party/gemmlowp/internal" type="c_include">
        <files mask="detect_platform.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="middleware_eiq_tensorflow_lite_micro_third_party_gemmlowp_MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="tensorflow-lite/third_party/gemmlowp" project_relative_path="third_party/gemmlowp" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.eiq.tensorflow_lite_micro.third_party.kissfft.MIMX9352" name="Kiss FFT" brief="A mixed-radix Fast Fourier Transform library" version="1.3.0" full_name="Kiss FFT library" devices="MIMX9352xxxxM" category="Machine Learning/eIQ" user_visible="false" type="middleware" package_base_path="middleware/eiq/tensorflow-lite/third_party/kissfft" project_base_path="eiq/tensorflow-lite/third_party/kissfft">
      <source relative_path="./" type="src">
        <files mask="kiss_fft.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="_kiss_fft_guts.h"/>
        <files mask="kiss_fft.h"/>
      </source>
      <source relative_path="./" type="other">
        <files mask="kissfft.hh"/>
      </source>
      <source relative_path="tools" type="src">
        <files mask="kfc.c"/>
        <files mask="kiss_fastfir.c"/>
        <files mask="kiss_fftnd.c"/>
        <files mask="kiss_fftndr.c"/>
        <files mask="kiss_fftr.c"/>
      </source>
      <source relative_path="tools" type="c_include">
        <files mask="kfc.h"/>
        <files mask="kiss_fftnd.h"/>
        <files mask="kiss_fftndr.h"/>
        <files mask="kiss_fftr.h"/>
      </source>
      <source relative_path="./" type="doc">
        <files mask="COPYING"/>
        <files mask="README"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.eiq.tensorflow_lite_micro.third_party.neutron_lib.binary.MIMX9352" name="Neutron library binary" brief="Neutron library binary" version="1.0.0" full_name="Neutron library binary" devices="MIMX9352xxxxM" category="Machine Learning/eIQ" user_visible="false" type="middleware" package_base_path="middleware/eiq/tensorflow-lite/third_party/neutron" project_base_path="eiq/tensorflow-lite/third_party/neutron">
      <source relative_path="firmware/include" type="c_include">
        <files mask="neutron-firmware.h"/>
      </source>
      <source relative_path="./" type="lib">
        <files mask="libnfw.a"/>
      </source>
      <include_paths>
        <include_path relative_path="firmware/include" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.eiq.tensorflow_lite_micro.third_party.ruy.MIMX9352" name="Ruy" brief="Ruy library" version="1.0.0" full_name="Ruy library" devices="MIMX9352xxxxM" category="Machine Learning/eIQ" user_visible="false" type="middleware" package_base_path="middleware/eiq" project_base_path="eiq/tensorflow-lite">
      <source relative_path="tensorflow-lite/third_party/ruy" project_relative_path="third_party/ruy" type="doc">
        <files mask="LICENSE"/>
        <files mask="README.md"/>
      </source>
      <source relative_path="tensorflow-lite/third_party/ruy/ruy/profiler" project_relative_path="third_party/ruy/ruy/profiler" type="c_include">
        <files mask="instrumentation.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="middleware_eiq_tensorflow_lite_micro_third_party_ruy_MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="tensorflow-lite/third_party/ruy" project_relative_path="third_party/ruy" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.eiq.tensorflow_lite_micro.third_party.xa_nnlib_hifi4.MIMX9352" name="Xtensa HiFi4 NN" brief="Xtensa HiFi4 NN library" version="2.4.1" full_name="Xtensa HiFi4 NN library" devices="MIMX9352xxxxM" category="Machine Learning/eIQ" user_visible="false" type="middleware" package_base_path="middleware/eiq/tensorflow-lite/third_party/xa_nnlib_hifi4" project_base_path="eiq/tensorflow-lite/third_party/xa_nnlib_hifi4">
      <source relative_path="algo/common/include" type="c_include">
        <files mask="xa_api_defs.h"/>
        <files mask="xa_nnlib_common.h"/>
        <files mask="xa_nnlib_common_internal.h"/>
        <files mask="xa_nnlib_common_macros.h"/>
        <files mask="xa_nnlib_definitions.h"/>
        <files mask="xa_nnlib_err_chk.h"/>
        <files mask="xa_nnlib_hifi_isa_compat.h"/>
        <files mask="xa_nnlib_quant_macros.h"/>
      </source>
      <source relative_path="algo/common/src" type="src">
        <files mask="xa_nnlib_common_api.c"/>
      </source>
      <source relative_path="algo/kernels/activations/hifi4" type="src">
        <files mask="xa_nn_activations_16_16.c"/>
        <files mask="xa_nn_activations_32_16.c"/>
        <files mask="xa_nn_activations_32_32.c"/>
        <files mask="xa_nn_activations_32_8.c"/>
        <files mask="xa_nn_activations_8_8.c"/>
        <files mask="xa_nn_activations_asym16_asym16.c"/>
        <files mask="xa_nn_activations_asym8_asym8.c"/>
        <files mask="xa_nn_activations_f32_f32.c"/>
        <files mask="xa_nn_softmax_asym8_asym8.c"/>
      </source>
      <source relative_path="algo/kernels/basic/hifi4" type="src">
        <files mask="xa_nn_broadcast_8_8.c"/>
        <files mask="xa_nn_dot_prod_16x16.c"/>
        <files mask="xa_nn_elm_abs_f32.c"/>
        <files mask="xa_nn_elm_add_f32.c"/>
        <files mask="xa_nn_elm_add_quant16.c"/>
        <files mask="xa_nn_elm_add_quant8.c"/>
        <files mask="xa_nn_elm_ceil_f32.c"/>
        <files mask="xa_nn_elm_compare_quant8.c"/>
        <files mask="xa_nn_elm_cosine_f32.c"/>
        <files mask="xa_nn_elm_div_f32.c"/>
        <files mask="xa_nn_elm_logical_bool.c"/>
        <files mask="xa_nn_elm_logn_f32.c"/>
        <files mask="xa_nn_elm_minmax_8.c"/>
        <files mask="xa_nn_elm_mul_16x16.c"/>
        <files mask="xa_nn_elm_mul_acc_f32.c"/>
        <files mask="xa_nn_elm_mul_f32.c"/>
        <files mask="xa_nn_elm_mul_quant8.c"/>
        <files mask="xa_nn_elm_neg_f32.c"/>
        <files mask="xa_nn_elm_quantize.c"/>
        <files mask="xa_nn_elm_round_f32.c"/>
        <files mask="xa_nn_elm_rsqrt_f32.c"/>
        <files mask="xa_nn_elm_sine_f32.c"/>
        <files mask="xa_nn_elm_sqrt_f32.c"/>
        <files mask="xa_nn_elm_square_f32.c"/>
        <files mask="xa_nn_elm_sub_broadcast_quant16.c"/>
        <files mask="xa_nn_elm_sub_f32.c"/>
        <files mask="xa_nn_elm_sub_quant8.c"/>
        <files mask="xa_nn_floor_f32.c"/>
        <files mask="xa_nn_memmove.c"/>
        <files mask="xa_nn_memmove_16.c"/>
        <files mask="xa_nn_memset_f32.c"/>
        <files mask="xa_nn_reduce_asym8s_asym8s.c"/>
        <files mask="xa_nn_vec_interpolation_q15.c"/>
      </source>
      <source relative_path="algo/kernels/basic/hifi4" type="c_include">
        <files mask="xa_nn_basic_state.h"/>
      </source>
      <source relative_path="algo/kernels/cnn/hifi4" type="src">
        <files mask="xa_nn_circ_buf.c"/>
        <files mask="xa_nn_conv1d_std_16x16.c"/>
        <files mask="xa_nn_conv1d_std_8x16.c"/>
        <files mask="xa_nn_conv1d_std_8x8.c"/>
        <files mask="xa_nn_conv1d_std_asym8xasym8.c"/>
        <files mask="xa_nn_conv1d_std_circ_buf.c"/>
        <files mask="xa_nn_conv1d_std_f32.c"/>
        <files mask="xa_nn_conv2d_depthwise.c"/>
        <files mask="xa_nn_conv2d_depthwise_16x16.c"/>
        <files mask="xa_nn_conv2d_depthwise_8x16.c"/>
        <files mask="xa_nn_conv2d_depthwise_8x8.c"/>
        <files mask="xa_nn_conv2d_depthwise_asym8xasym8.c"/>
        <files mask="xa_nn_conv2d_depthwise_f32.c"/>
        <files mask="xa_nn_conv2d_depthwise_sym8sxasym8s.c"/>
        <files mask="xa_nn_conv2d_pointwise_16x16.c"/>
        <files mask="xa_nn_conv2d_pointwise_8x16.c"/>
        <files mask="xa_nn_conv2d_pointwise_8x8.c"/>
        <files mask="xa_nn_conv2d_pointwise_asym8xasym8.c"/>
        <files mask="xa_nn_conv2d_pointwise_f32.c"/>
        <files mask="xa_nn_conv2d_pointwise_sym8sxasym8s.c"/>
        <files mask="xa_nn_conv2d_pointwise_sym8sxsym16s.c"/>
        <files mask="xa_nn_conv2d_std_16x16.c"/>
        <files mask="xa_nn_conv2d_std_8x16.c"/>
        <files mask="xa_nn_conv2d_std_8x8.c"/>
        <files mask="xa_nn_conv2d_std_asym8xasym8.c"/>
        <files mask="xa_nn_conv2d_std_circ_buf.c"/>
        <files mask="xa_nn_conv2d_std_f32.c"/>
        <files mask="xa_nn_conv2d_std_sym8sxasym8s.c"/>
        <files mask="xa_nn_conv2d_std_sym8sxsym16s.c"/>
        <files mask="xa_nn_matXvec_16x16_16_circ.c"/>
        <files mask="xa_nn_matXvec_16x16_16_circ_nb.c"/>
        <files mask="xa_nn_matXvec_8x16_16_circ.c"/>
        <files mask="xa_nn_matXvec_8x16_16_circ_nb.c"/>
        <files mask="xa_nn_matXvec_8x8_8_circ.c"/>
        <files mask="xa_nn_matXvec_8x8_8_circ_nb.c"/>
        <files mask="xa_nn_matXvec_asym8xasym8_asym8_circ.c"/>
        <files mask="xa_nn_matXvec_asym8xasym8_asym8_circ_nb.c"/>
        <files mask="xa_nn_matXvec_f32_circ.c"/>
        <files mask="xa_nn_matXvec_f32_circ_nb.c"/>
        <files mask="xa_nn_matXvec_sym8sxasym8s_asym8s_circ.c"/>
        <files mask="xa_nn_matXvec_sym8sxsym16s_sym16s_circ.c"/>
        <files mask="xa_nn_transpose_conv_sym8sxsym16s.c"/>
      </source>
      <source relative_path="algo/kernels/cnn/hifi4" type="c_include">
        <files mask="xa_nn_circ_buf.h"/>
        <files mask="xa_nn_conv1d_std_state.h"/>
        <files mask="xa_nn_conv2d_depthwise_state.h"/>
        <files mask="xa_nn_conv2d_std_state.h"/>
      </source>
      <source relative_path="algo/kernels/fc/hifi4" type="src">
        <files mask="xa_nn_fully_connected.c"/>
      </source>
      <source relative_path="algo/kernels/matXvec/hifi4" type="src">
        <files mask="xa_nn_matXvec_16x16.c"/>
        <files mask="xa_nn_matXvec_16x16_batch.c"/>
        <files mask="xa_nn_matXvec_16x8.c"/>
        <files mask="xa_nn_matXvec_8x16.c"/>
        <files mask="xa_nn_matXvec_8x16_batch.c"/>
        <files mask="xa_nn_matXvec_8x8.c"/>
        <files mask="xa_nn_matXvec_8x8_batch.c"/>
        <files mask="xa_nn_matXvec_asym8xasym8.c"/>
        <files mask="xa_nn_matXvec_asym8xasym8_batch.c"/>
        <files mask="xa_nn_matXvec_f32.c"/>
        <files mask="xa_nn_matXvec_f32_batch.c"/>
        <files mask="xa_nn_matXvec_sym8sxasym8s.c"/>
        <files mask="xa_nn_matmul_16x16.c"/>
        <files mask="xa_nn_matmul_8x16.c"/>
        <files mask="xa_nn_matmul_8x8.c"/>
        <files mask="xa_nn_matmul_asym8xasym8.c"/>
        <files mask="xa_nn_matmul_f32.c"/>
        <files mask="xa_nn_matmul_sym8sxasym8s.c"/>
        <files mask="xa_nn_matmul_sym8sxsym16s.c"/>
      </source>
      <source relative_path="algo/kernels/norm/hifi4" type="src">
        <files mask="xa_nn_l2_norm_asym8s.c"/>
        <files mask="xa_nn_l2_norm_f32.c"/>
      </source>
      <source relative_path="algo/kernels/pool/hifi4" type="src">
        <files mask="xa_nn_avgpool.c"/>
        <files mask="xa_nn_avgpool_16.c"/>
        <files mask="xa_nn_avgpool_16_nhwc.c"/>
        <files mask="xa_nn_avgpool_8.c"/>
        <files mask="xa_nn_avgpool_8_nhwc.c"/>
        <files mask="xa_nn_avgpool_asym8.c"/>
        <files mask="xa_nn_avgpool_asym8_nhwc.c"/>
        <files mask="xa_nn_avgpool_f32.c"/>
        <files mask="xa_nn_avgpool_f32_nhwc.c"/>
        <files mask="xa_nn_inv_256_tbl.c"/>
        <files mask="xa_nn_maxpool.c"/>
        <files mask="xa_nn_maxpool_16.c"/>
        <files mask="xa_nn_maxpool_16_nhwc.c"/>
        <files mask="xa_nn_maxpool_8.c"/>
        <files mask="xa_nn_maxpool_8_nhwc.c"/>
        <files mask="xa_nn_maxpool_asym8.c"/>
        <files mask="xa_nn_maxpool_asym8_nhwc.c"/>
        <files mask="xa_nn_maxpool_f32.c"/>
        <files mask="xa_nn_maxpool_f32_nhwc.c"/>
      </source>
      <source relative_path="algo/kernels/pool/hifi4" type="c_include">
        <files mask="xa_nn_avgpool_state.h"/>
        <files mask="xa_nn_maxpool_state.h"/>
      </source>
      <source relative_path="algo/kernels/reorg/hifi4" type="src">
        <files mask="xa_nn_batch_to_space_nd_8.c"/>
        <files mask="xa_nn_depth_to_space_8.c"/>
        <files mask="xa_nn_pad_16.c"/>
        <files mask="xa_nn_pad_8.c"/>
        <files mask="xa_nn_space_to_batch_nd_8.c"/>
        <files mask="xa_nn_space_to_depth_8.c"/>
        <files mask="xa_nn_stride_slice_int16.c"/>
      </source>
      <source relative_path="algo/layers/cnn/src" type="src">
        <files mask="xa_nn_cnn_api.c"/>
      </source>
      <source relative_path="algo/layers/gru/src" type="src">
        <files mask="xa_nn_gru_api.c"/>
      </source>
      <source relative_path="algo/layers/lstm/src" type="src">
        <files mask="xa_nn_lstm_api.c"/>
      </source>
      <source relative_path="algo/ndsp/hifi4/include" type="c_include">
        <files mask="NatureDSP_Signal_math.h"/>
        <files mask="NatureDSP_Signal_matop.h"/>
        <files mask="NatureDSP_types.h"/>
        <files mask="common.h"/>
        <files mask="common_fpu.h"/>
        <files mask="expf_tbl.h"/>
        <files mask="inff_tbl.h"/>
        <files mask="inv2pif_tbl.h"/>
        <files mask="lognf_tbl.h"/>
        <files mask="nan_tbl.h"/>
        <files mask="nanf_tbl.h"/>
        <files mask="pow2f_tbl.h"/>
        <files mask="sinf_tbl.h"/>
        <files mask="sqrt2f_tbl.h"/>
        <files mask="tanhf_tbl.h"/>
      </source>
      <source relative_path="algo/ndsp/hifi4/src" type="src">
        <files mask="expf_tbl.c"/>
        <files mask="inff_tbl.c"/>
        <files mask="inv2pif_tbl.c"/>
        <files mask="lognf_tbl.c"/>
        <files mask="nanf_tbl.c"/>
        <files mask="pow2f_tbl.c"/>
        <files mask="scl_sigmoidf_hifi4.c"/>
        <files mask="scl_tanhf_hifi4.c"/>
        <files mask="sinf_tbl.c"/>
        <files mask="sqrt2f_tbl.c"/>
        <files mask="tanhf_tbl.c"/>
        <files mask="vec_alognf_hifi4.c"/>
        <files mask="vec_cosinef_hifi4.c"/>
        <files mask="vec_lognf_hifi4.c"/>
        <files mask="vec_relu32x32_hifi4.c"/>
        <files mask="vec_reluf_hifi4.c"/>
        <files mask="vec_sigmoid32x32_hifi4.c"/>
        <files mask="vec_sigmoidf_hifi4.c"/>
        <files mask="vec_sinef_hifi4.c"/>
        <files mask="vec_softmax32x32_hifi4.c"/>
        <files mask="vec_softmaxf_hifi4.c"/>
        <files mask="vec_tanh32x32_hifi4.c"/>
        <files mask="vec_tanhf_hifi4.c"/>
      </source>
      <source relative_path="include" type="c_include">
        <files mask="xa_type_def.h"/>
      </source>
      <source relative_path="include/nnlib" type="c_include">
        <files mask="xa_nnlib_api.h"/>
        <files mask="xa_nnlib_cnn_api.h"/>
        <files mask="xa_nnlib_gru_api.h"/>
        <files mask="xa_nnlib_kernels_api.h"/>
        <files mask="xa_nnlib_lstm_api.h"/>
        <files mask="xa_nnlib_standards.h"/>
      </source>
      <source relative_path="./" type="doc">
        <files mask="README"/>
        <files mask="license.txt"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="algo/common/include" type="c_include"/>
        <include_path relative_path="algo/kernels/basic/hifi4" type="c_include"/>
        <include_path relative_path="algo/kernels/cnn/hifi4" type="c_include"/>
        <include_path relative_path="algo/kernels/pool/hifi4" type="c_include"/>
        <include_path relative_path="algo/ndsp/hifi4/include" type="c_include"/>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="include/nnlib" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.eiq.worker.MIMX9352" name="eiq_IWorker" brief="Video and audio interface layer" version="1.0.0" full_name="eiq_IWorker" devices="MIMX9352xxxxM" user_visible="false" type="middleware" package_base_path="middleware/eiq" project_base_path="source">
      <source relative_path="common" project_relative_path="./" type="c_include">
        <files mask="eiq_common.h"/>
        <files mask="eiq_iui.h"/>
        <files mask="eiq_iworker.h"/>
      </source>
      <include_paths>
        <include_path relative_path="common" project_relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.eiq.worker.audio.MIMX9352" name="eiq_AudioWorker" brief="Audio capture and play abstract layer" version="1.0.0" full_name="eiq_AudioWorker" devices="MIMX9352xxxxM" user_visible="false" type="middleware" package_base_path="middleware/eiq" project_base_path="source">
      <dependencies>
        <component_dependency value="middleware.eiq.worker.MIMX9352"/>
      </dependencies>
      <source relative_path="common/audio" project_relative_path="audio" type="src">
        <files mask="eiq_audio_worker.c"/>
        <files mask="eiq_micro.c"/>
        <files mask="eiq_speaker.c"/>
        <files mask="eiq_speaker_conf.c"/>
      </source>
      <source relative_path="common/audio" project_relative_path="audio" type="c_include">
        <files mask="audio.h"/>
        <files mask="eiq_audio_worker.h"/>
        <files mask="eiq_micro.h"/>
        <files mask="eiq_micro_conf.h"/>
        <files mask="eiq_speaker.h"/>
        <files mask="eiq_speaker_conf.h"/>
      </source>
      <include_paths>
        <include_path relative_path="common/audio" project_relative_path="audio" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.eiq.worker.video.MIMX9352" name="eiq_VideoWorker" brief="Video capture and display abstract layer" version="1.0.0" full_name="eiq_VideoWorker" devices="MIMX9352xxxxM" user_visible="false" type="middleware" package_base_path="middleware/eiq" project_base_path="source">
      <dependencies>
        <component_dependency value="middleware.eiq.worker.MIMX9352"/>
      </dependencies>
      <source relative_path="common/video" project_relative_path="video" type="src">
        <files mask="eiq_camera.c"/>
        <files mask="eiq_display.c"/>
        <files mask="eiq_pxp.c"/>
        <files mask="eiq_video_worker.c"/>
      </source>
      <source relative_path="common/video" project_relative_path="video" type="c_include">
        <files mask="eiq_camera.h"/>
        <files mask="eiq_camera_conf.h"/>
        <files mask="eiq_display.h"/>
        <files mask="eiq_display_conf.h"/>
        <files mask="eiq_pxp.h"/>
        <files mask="eiq_video_worker.h"/>
      </source>
      <include_paths>
        <include_path relative_path="common/video" project_relative_path="video" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.ethosu.application.MIMX9352" name="ethosu_core_software_application" brief="ethos-u core software application interface layer" version="1.0.0" full_name="ethosu_core_software_application" devices="MIMX9352xxxxM" user_visible="false" type="middleware" package_base_path="middleware/ethos-u-core-software" project_base_path="source">
      <source relative_path="include" project_relative_path="./" type="c_include">
        <files mask="ethosu_core_interface.h"/>
      </source>
      <source relative_path="applications/inference_process/include" project_relative_path="./" type="other">
        <files mask="inference_process.hpp"/>
        <files mask="inference_parser.hpp"/>
      </source>
      <source relative_path="applications/inference_process/src" project_relative_path="./" type="src">
        <files mask="inference_process.cpp"/>
      </source>
      <source relative_path="lib/arm_profiler/include" project_relative_path="./" type="other">
        <files mask="arm_profiler.hpp"/>
      </source>
      <source relative_path="lib/arm_profiler/src" project_relative_path="./" type="src">
        <files mask="arm_profiler.cpp"/>
      </source>
      <source relative_path="lib/crc/include" project_relative_path="./" type="other">
        <files mask="crc.hpp"/>
      </source>
      <source relative_path="lib/ethosu_log/include" project_relative_path="ethosu_log" type="c_include">
        <files mask="ethosu_log.h"/>
      </source>
      <source relative_path="lib/ethosu_monitor/src" project_relative_path="./" type="src">
        <files mask="ethosu_monitor.cpp"/>
      </source>
      <source relative_path="lib/ethosu_monitor/include" project_relative_path="./" type="other">
        <files mask="ethosu_monitor.hpp"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="middleware_ethosu_application_MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="applications/inference_process/include" project_relative_path="./" type="c_include"/>
        <include_path relative_path="lib/arm_profiler/include" project_relative_path="./" type="c_include"/>
        <include_path relative_path="lib/crc/include" project_relative_path="./" type="c_include"/>
        <include_path relative_path="lib/ethosu_log/include" project_relative_path="./" type="c_include"/>
        <include_path relative_path="lib/ethosu_monitor/include" project_relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.ethosu.core_driver.MIMX9352" name="ethosu_core_software_core_driver" brief="ethos-u core software core driver interface layer" version="1.0.0" full_name="ethosu_core_software_core_driver" devices="MIMX9352xxxxM" user_visible="false" type="middleware" package_base_path="middleware/ethos-u-core-software" project_base_path="source">
      <source relative_path="core_driver/src" project_relative_path="./" type="c_include">
        <files mask="ethosu_config_u65.h"/>
        <files mask="ethosu_device.h"/>
        <files mask="ethosu_log.h"/>
        <files mask="ethosu_interface.h"/>
        <files mask="ethosu65_interface.h"/>
      </source>
      <source relative_path="core_driver/src" project_relative_path="./" type="src">
        <files mask="ethosu_device_u55_u65.c"/>
        <files mask="ethosu_driver.c"/>
        <files mask="ethosu_pmu.c"/>
      </source>
      <source relative_path="core_driver/include" project_relative_path="./" type="c_include">
        <files mask="ethosu_driver.h"/>
        <files mask="ethosu_types.h"/>
        <files mask="pmu_ethosu.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="middleware_ethosu_core_driver_MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="core_driver/include" project_relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.ethosu.tensorflow_lite_micro_additional.MIMX9352" name="TensorFlow Lite Micro" brief="Additional TensorFlow Lite Micro library" version="2.7.0" full_name="TensorFlow Lite Micro library" devices="MIMX9352xxxxM" user_visible="false" type="middleware" package_base_path="middleware/eiq/tensorflow-lite" project_base_path="eiq/tensorflow-lite">
      <source relative_path="./" type="doc">
        <files mask="AUTHORS"/>
        <files mask="LICENSE"/>
        <files mask="NOTICE"/>
        <files mask="ChangeLogKSDK.txt"/>
        <files mask="readme.txt"/>
      </source>
      <source relative_path="tensorflow/lite/micro" type="c_include">
        <files mask="micro_string.h"/>
      </source>
      <source relative_path="tensorflow/lite/micro" type="src">
        <files mask="micro_string.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="middleware_ethosu_tensorflow_lite_micro_additional_MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-kernel.MIMX9352" name="FreeRTOS kernel" brief="FreeRTOS kernel" version="10.5.0" full_name="FreeRTOS kernel" devices="MIMX9352xxxxM" user_visible="true" type="OS" package_base_path="rtos/freertos/freertos-kernel" project_base_path="freertos/freertos-kernel">
      <defines>
        <define name="SDK_OS_FREE_RTOS" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.extension.MIMX9352"/>
          <component_dependency value="middleware.freertos-kernel.template.MIMX9352"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="croutine.c"/>
        <files mask="event_groups.c"/>
        <files mask="list.c"/>
        <files mask="queue.c"/>
        <files mask="stream_buffer.c"/>
        <files mask="tasks.c"/>
        <files mask="timers.c"/>
      </source>
      <source relative_path="include" type="c_include">
        <files mask="atomic.h"/>
        <files mask="croutine.h"/>
        <files mask="deprecated_definitions.h"/>
        <files mask="event_groups.h"/>
        <files mask="FreeRTOS.h"/>
        <files mask="list.h"/>
        <files mask="message_buffer.h"/>
        <files mask="mpu_prototypes.h"/>
        <files mask="mpu_wrappers.h"/>
        <files mask="portable.h"/>
        <files mask="projdefs.h"/>
        <files mask="queue.h"/>
        <files mask="semphr.h"/>
        <files mask="stack_macros.h"/>
        <files mask="StackMacros.h"/>
        <files mask="stream_buffer.h"/>
        <files mask="task.h"/>
        <files mask="timers.h"/>
      </source>
      <source relative_path="include" type="doc">
        <files mask="stdint.readme"/>
      </source>
      <source relative_path="portable/MemMang" type="other">
        <files mask="ReadMe.url"/>
      </source>
      <source relative_path="portable" type="doc">
        <files mask="readme.txt"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="middleware_freertos-kernel_MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-kernel.armv8m.MIMX9352" name="FreeRTOS port ARMv8M" brief="FreeRTOS port ARMv8M" version="10.5.0" full_name="FreeRTOS port ARMv8M" devices="MIMX9352xxxxM" category="Operating System/FreeRTOS kernel" user_visible="false" type="other" package_base_path="rtos/freertos/freertos-kernel" project_base_path="freertos/freertos-kernel">
      <dependencies>
        <component_dependency value="middleware.freertos-kernel.MIMX9352"/>
      </dependencies>
      <source relative_path="portable/ARMv8M" type="script">
        <files mask="copy_files.py"/>
      </source>
      <source relative_path="portable/ARMv8M/non_secure" type="src">
        <files mask="port.c"/>
      </source>
      <source relative_path="portable/ARMv8M/non_secure/portable/GCC/ARM_CM33" type="src">
        <files mask="portasm.c"/>
      </source>
      <source relative_path="portable/ARMv8M/non_secure/portable/GCC/ARM_CM33" type="c_include">
        <files mask="portmacro.h"/>
      </source>
      <source relative_path="portable/ARMv8M/non_secure/portable/GCC/ARM_CM33_NTZ" type="src">
        <files mask="portasm.c"/>
      </source>
      <source relative_path="portable/ARMv8M/non_secure/portable/GCC/ARM_CM33_NTZ" type="c_include">
        <files mask="portmacro.h"/>
      </source>
      <source relative_path="portable/ARMv8M/non_secure/portable/IAR/ARM_CM33" type="asm_include">
        <files mask="portasm.s"/>
      </source>
      <source relative_path="portable/ARMv8M/non_secure/portable/IAR/ARM_CM33" type="c_include">
        <files mask="portmacro.h"/>
      </source>
      <source relative_path="portable/ARMv8M/non_secure/portable/IAR/ARM_CM33_NTZ" type="asm_include">
        <files mask="portasm.s"/>
      </source>
      <source relative_path="portable/ARMv8M/non_secure/portable/IAR/ARM_CM33_NTZ" type="c_include">
        <files mask="portmacro.h"/>
      </source>
      <source relative_path="portable/ARMv8M/non_secure" type="c_include">
        <files mask="portasm.h"/>
        <files mask="portmacrocommon.h"/>
      </source>
      <source relative_path="portable/ARMv8M/non_secure" type="doc">
        <files mask="ReadMe.txt"/>
      </source>
      <source relative_path="portable/ARMv8M" type="doc">
        <files mask="ReadMe.txt"/>
      </source>
      <source relative_path="portable/ARMv8M/secure/context/portable/GCC/ARM_CM33" type="src">
        <files mask="secure_context_port.c"/>
      </source>
      <source relative_path="portable/ARMv8M/secure/context/portable/IAR/ARM_CM33" type="asm_include">
        <files mask="secure_context_port_asm.s"/>
      </source>
      <source relative_path="portable/ARMv8M/secure/context" type="src">
        <files mask="secure_context.c"/>
      </source>
      <source relative_path="portable/ARMv8M/secure/context" type="c_include">
        <files mask="secure_context.h"/>
      </source>
      <source relative_path="portable/ARMv8M/secure/heap" type="src">
        <files mask="secure_heap.c"/>
      </source>
      <source relative_path="portable/ARMv8M/secure/heap" type="c_include">
        <files mask="secure_heap.h"/>
      </source>
      <source relative_path="portable/ARMv8M/secure/init" type="src">
        <files mask="secure_init.c"/>
      </source>
      <source relative_path="portable/ARMv8M/secure/init" type="c_include">
        <files mask="secure_init.h"/>
      </source>
      <source relative_path="portable/ARMv8M/secure/macros" type="c_include">
        <files mask="secure_port_macros.h"/>
      </source>
      <source relative_path="portable/ARMv8M/secure" type="doc">
        <files mask="ReadMe.txt"/>
      </source>
      <include_paths>
        <include_path relative_path="portable/ARMv8M/non_secure/portable/GCC/ARM_CM33" type="c_include"/>
        <include_path relative_path="portable/ARMv8M/non_secure/portable/GCC/ARM_CM33_NTZ" type="c_include"/>
        <include_path relative_path="portable/ARMv8M/non_secure/portable/IAR/ARM_CM33" type="c_include"/>
        <include_path relative_path="portable/ARMv8M/non_secure/portable/IAR/ARM_CM33_NTZ" type="c_include"/>
        <include_path relative_path="portable/ARMv8M/non_secure" type="c_include"/>
        <include_path relative_path="portable/ARMv8M/secure/context" type="c_include"/>
        <include_path relative_path="portable/ARMv8M/secure/heap" type="c_include"/>
        <include_path relative_path="portable/ARMv8M/secure/init" type="c_include"/>
        <include_path relative_path="portable/ARMv8M/secure/macros" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-kernel.cm33_nonsecure_port.MIMX9352" name="cm33 nonsecure port" brief="FreeRTOS cm33 nonsecure port" version="10.5.0" full_name="FreeRTOS cm33 nonsecure port" devices="MIMX9352xxxxM" category="Operating System/FreeRTOS kernel" user_visible="true" type="middleware" package_base_path="rtos/freertos/freertos-kernel" project_base_path="freertos/freertos-kernel">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.MIMX9352"/>
          <component_dependency value="middleware.freertos-kernel.template.MIMX9352"/>
        </all>
      </dependencies>
      <source toolchain="armgcc" relative_path="portable/GCC/ARM_CM33_NTZ/non_secure" type="src" device_cores="cm33_MIMX9352xxxxM">
        <files mask="port.c"/>
        <files mask="portasm.c"/>
      </source>
      <source toolchain="armgcc" relative_path="portable/GCC/ARM_CM33_NTZ/non_secure" type="c_include" device_cores="cm33_MIMX9352xxxxM">
        <files mask="portasm.h"/>
        <files mask="portmacro.h"/>
        <files mask="portmacrocommon.h"/>
      </source>
      <source toolchain="iar" relative_path="portable/IAR/ARM_CM33_NTZ/non_secure" type="src" device_cores="cm33_MIMX9352xxxxM">
        <files mask="port.c"/>
      </source>
      <source toolchain="iar" relative_path="portable/IAR/ARM_CM33_NTZ/non_secure" type="c_include" device_cores="cm33_MIMX9352xxxxM">
        <files mask="portasm.h"/>
        <files mask="portmacro.h"/>
        <files mask="portmacrocommon.h"/>
      </source>
      <source toolchain="iar" relative_path="portable/IAR/ARM_CM33_NTZ/non_secure" type="asm_include" device_cores="cm33_MIMX9352xxxxM">
        <files mask="portasm.s"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="middleware_freertos-kernel_cm33_nonsecure_port_MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="portable/IAR/ARM_CM33_NTZ/non_secure" toolchain="iar" type="c_include" device_cores="cm33_MIMX9352xxxxM"/>
        <include_path relative_path="portable/GCC/ARM_CM33_NTZ/non_secure" toolchain="armgcc" type="c_include" device_cores="cm33_MIMX9352xxxxM"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-kernel.cm33_secure_port.MIMX9352" name="cm33 secure port" brief="FreeRTOS cm33 secure port" version="10.5.0" full_name="FreeRTOS cm33 secure port" devices="MIMX9352xxxxM" category="Operating System/FreeRTOS kernel" user_visible="false" type="middleware" package_base_path="rtos/freertos/freertos-kernel" project_base_path="freertos/freertos-kernel">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.MIMX9352"/>
          <component_dependency value="middleware.freertos-kernel.mpu_wrappers.MIMX9352"/>
        </all>
      </dependencies>
      <source toolchain="armgcc" relative_path="portable/GCC/ARM_CM33/non_secure" type="src" device_cores="cm33_MIMX9352xxxxM">
        <files mask="port.c"/>
        <files mask="portasm.c"/>
      </source>
      <source toolchain="armgcc" relative_path="portable/GCC/ARM_CM33/non_secure" type="c_include" device_cores="cm33_MIMX9352xxxxM">
        <files mask="portasm.h"/>
        <files mask="portmacro.h"/>
        <files mask="portmacrocommon.h"/>
      </source>
      <source toolchain="iar" relative_path="portable/IAR/ARM_CM33/non_secure" type="src" device_cores="cm33_MIMX9352xxxxM">
        <files mask="port.c"/>
      </source>
      <source toolchain="iar" relative_path="portable/IAR/ARM_CM33/non_secure" type="c_include" device_cores="cm33_MIMX9352xxxxM">
        <files mask="portasm.h"/>
        <files mask="portmacro.h"/>
        <files mask="portmacrocommon.h"/>
      </source>
      <source toolchain="iar" relative_path="portable/IAR/ARM_CM33/non_secure" type="asm_include" device_cores="cm33_MIMX9352xxxxM">
        <files mask="portasm.s"/>
      </source>
      <include_paths>
        <include_path relative_path="portable/IAR/ARM_CM33/non_secure" toolchain="iar" type="c_include" device_cores="cm33_MIMX9352xxxxM"/>
        <include_path relative_path="portable/GCC/ARM_CM33/non_secure" toolchain="armgcc" type="c_include" device_cores="cm33_MIMX9352xxxxM"/>
        <include_path relative_path="portable/IAR/ARM_CM33/secure" toolchain="iar" type="c_include" device_cores="cm33_MIMX9352xxxxM"/>
        <include_path relative_path="portable/GCC/ARM_CM33/secure" toolchain="armgcc" type="c_include" device_cores="cm33_MIMX9352xxxxM"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-kernel.doc.MIMX9352" name="Root FreeRTOS documents." brief="FreeRTOS root documents" version="10.5.0" full_name="FreeRTOS root documents" devices="MIMX9352xxxxM" category="Operating System/FreeRTOS kernel" user_visible="false" type="other" package_base_path="rtos/freertos/freertos-kernel" project_base_path="freertos/freertos-kernel">
      <source relative_path="./" type="doc">
        <files mask="ChangeLogKSDK.txt"/>
        <files mask="CMakeLists.txt"/>
        <files mask="History.txt"/>
      </source>
      <source relative_path="./" type="other">
        <files mask="GitHub-FreeRTOS-Kernel-Home.url"/>
        <files mask="LICENSE.md"/>
        <files mask="manifest.yml"/>
        <files mask="Quick_Start_Guide.url"/>
        <files mask="README.md"/>
        <files mask="sbom.spdx"/>
      </source>
      <source relative_path="portable/ARMClang" type="doc">
        <files mask="Use-the-GCC-ports.txt"/>
      </source>
    </component>
    <component id="middleware.freertos-kernel.extension.MIMX9352" name="FreeRTOS NXP extension" brief="FreeRTOS NXP extension" version="10.5.0" full_name="FreeRTOS NXP extension" devices="MIMX9352xxxxM" category="Operating System/FreeRTOS kernel extensions" user_visible="false" type="other" package_base_path="rtos/freertos/freertos-kernel" project_base_path="freertos/freertos-kernel">
      <source relative_path="include" type="c_include">
        <files mask="freertos_tasks_c_additions.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="middleware_freertos-kernel_extension_MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-kernel.heap_1.MIMX9352" name="FreeRTOS heap 1" brief="FreeRTOS heap 1" version="10.5.0" full_name="FreeRTOS heap 1" devices="MIMX9352xxxxM" category="Operating System/FreeRTOS kernel" user_visible="false" type="other" package_base_path="rtos/freertos/freertos-kernel" project_base_path="freertos/freertos-kernel">
      <dependencies>
        <component_dependency value="middleware.freertos-kernel.MIMX9352"/>
      </dependencies>
      <source relative_path="portable/MemMang" type="src">
        <files mask="heap_1.c"/>
      </source>
    </component>
    <component id="middleware.freertos-kernel.heap_2.MIMX9352" name="FreeRTOS heap 2" brief="FreeRTOS heap 2" version="10.5.0" full_name="FreeRTOS heap 2" devices="MIMX9352xxxxM" category="Operating System/FreeRTOS kernel" user_visible="false" type="other" package_base_path="rtos/freertos/freertos-kernel" project_base_path="freertos/freertos-kernel">
      <dependencies>
        <component_dependency value="middleware.freertos-kernel.MIMX9352"/>
      </dependencies>
      <source relative_path="portable/MemMang" type="src">
        <files mask="heap_2.c"/>
      </source>
    </component>
    <component id="middleware.freertos-kernel.heap_3.MIMX9352" name="FreeRTOS heap 3" brief="FreeRTOS heap 3" version="10.5.0" full_name="FreeRTOS heap_3" devices="MIMX9352xxxxM" category="Operating System/FreeRTOS kernel" user_visible="false" type="other" package_base_path="rtos/freertos/freertos-kernel" project_base_path="freertos/freertos-kernel">
      <dependencies>
        <component_dependency value="middleware.freertos-kernel.MIMX9352"/>
      </dependencies>
      <source relative_path="portable/MemMang" type="src">
        <files mask="heap_3.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="middleware_freertos-kernel_heap_3_MIMX9352.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.freertos-kernel.heap_4.MIMX9352" name="FreeRTOS heap 4" brief="FreeRTOS heap 4" version="10.5.0" full_name="FreeRTOS heap 4" devices="MIMX9352xxxxM" category="Operating System/FreeRTOS kernel" user_visible="false" type="other" package_base_path="rtos/freertos/freertos-kernel" project_base_path="freertos/freertos-kernel">
      <dependencies>
        <component_dependency value="middleware.freertos-kernel.MIMX9352"/>
      </dependencies>
      <source relative_path="portable/MemMang" type="src">
        <files mask="heap_4.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="middleware_freertos-kernel_heap_4_MIMX9352.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.freertos-kernel.heap_5.MIMX9352" name="FreeRTOS heap 5" brief="FreeRTOS heap 5" version="10.5.0" full_name="FreeRTOS heap 5" devices="MIMX9352xxxxM" category="Operating System/FreeRTOS kernel" user_visible="false" type="other" package_base_path="rtos/freertos/freertos-kernel" project_base_path="freertos/freertos-kernel">
      <dependencies>
        <component_dependency value="middleware.freertos-kernel.MIMX9352"/>
      </dependencies>
      <source relative_path="portable/MemMang" type="src">
        <files mask="heap_5.c"/>
      </source>
    </component>
    <component id="middleware.freertos-kernel.mpu_wrappers.MIMX9352" name="FreeRTOS MPU wrappers" brief="FreeRTOS MPU wrappers" version="10.5.0" full_name="FreeRTOS MPU wrappers" devices="MIMX9352xxxxM" category="Operating System/FreeRTOS kernel" user_visible="false" type="other" package_base_path="rtos/freertos/freertos-kernel" project_base_path="freertos/freertos-kernel">
      <dependencies>
        <component_dependency value="middleware.freertos-kernel.MIMX9352"/>
      </dependencies>
      <source relative_path="portable/Common" type="src">
        <files mask="mpu_wrappers.c"/>
      </source>
    </component>
    <component id="middleware.freertos-kernel.secure_context.MIMX9352" name="secure context" brief="FreeRTOS Secure Context" version="10.5.0" full_name="FreeRTOS Secure Context" devices="MIMX9352xxxxM" category="Operating System/FreeRTOS kernel" user_visible="true" type="middleware" package_base_path="rtos/freertos/freertos-kernel" project_base_path="freertos/freertos-kernel">
      <dependencies>
        <component_dependency value="middleware.freertos-kernel.template.MIMX9352"/>
      </dependencies>
      <source toolchain="armgcc" relative_path="portable/GCC/ARM_CM33/secure" type="src">
        <files mask="secure_context.c"/>
        <files mask="secure_context_port.c"/>
        <files mask="secure_heap.c"/>
        <files mask="secure_init.c"/>
      </source>
      <source toolchain="armgcc" relative_path="portable/GCC/ARM_CM33/secure" type="c_include">
        <files mask="secure_context.h"/>
        <files mask="secure_heap.h"/>
        <files mask="secure_init.h"/>
        <files mask="secure_port_macros.h"/>
      </source>
      <source toolchain="iar" relative_path="portable/IAR/ARM_CM33/secure" type="src">
        <files mask="secure_context.c"/>
        <files mask="secure_heap.c"/>
        <files mask="secure_init.c"/>
      </source>
      <source toolchain="iar" relative_path="portable/IAR/ARM_CM33/secure" type="c_include">
        <files mask="secure_context.h"/>
        <files mask="secure_heap.h"/>
        <files mask="secure_init.h"/>
        <files mask="secure_port_macros.h"/>
      </source>
      <source toolchain="iar" relative_path="portable/IAR/ARM_CM33/secure" type="asm_include">
        <files mask="secure_context_port_asm.s"/>
      </source>
      <include_paths>
        <include_path relative_path="portable/IAR/ARM_CM33/secure" toolchain="iar" type="c_include"/>
        <include_path relative_path="portable/GCC/ARM_CM33/secure" toolchain="armgcc" type="c_include"/>
        <include_path relative_path="portable/IAR/ARM_CM33/non_secure" toolchain="iar" type="c_include"/>
        <include_path relative_path="portable/GCC/ARM_CM33/non_secure" toolchain="armgcc" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-kernel.template.MIMX9352" name="FreeRTOS configuration template" brief="Template configuration file to be edited by user. Provides also memory allocator (heap_x), change variant if needed." version="10.5.0" full_name="FreeRTOS configuration template" devices="MIMX9352xxxxM" category="Operating System/FreeRTOS kernel" user_visible="false" type="project_template" package_base_path="rtos/freertos/freertos-kernel" project_base_path="freertos/freertos-kernel">
      <source toolchain="armgcc" relative_path="portable/GCC/ARM_CM33_NTZ/non_secure" type="src" device_cores="cm33_MIMX9352xxxxM">
        <files mask="port.c"/>
        <files mask="portasm.c"/>
      </source>
      <source toolchain="armgcc" relative_path="portable/GCC/ARM_CM33_NTZ/non_secure" type="c_include" device_cores="cm33_MIMX9352xxxxM">
        <files mask="portasm.h"/>
        <files mask="portmacro.h"/>
        <files mask="portmacrocommon.h"/>
      </source>
      <source toolchain="iar" relative_path="portable/IAR/ARM_CM33_NTZ/non_secure" type="src" device_cores="cm33_MIMX9352xxxxM">
        <files mask="port.c"/>
      </source>
      <source toolchain="iar" relative_path="portable/IAR/ARM_CM33_NTZ/non_secure" type="c_include" device_cores="cm33_MIMX9352xxxxM">
        <files mask="portasm.h"/>
        <files mask="portmacro.h"/>
        <files mask="portmacrocommon.h"/>
      </source>
      <source toolchain="iar" relative_path="portable/IAR/ARM_CM33_NTZ/non_secure" type="asm_include" device_cores="cm33_MIMX9352xxxxM">
        <files mask="portasm.s"/>
      </source>
      <source exclude="true" relative_path="portable/MemMang" type="src">
        <files mask="heap_1.c"/>
        <files mask="heap_2.c"/>
        <files mask="heap_3.c"/>
        <files mask="heap_5.c"/>
      </source>
      <source relative_path="portable/MemMang" type="src">
        <files mask="heap_4.c"/>
      </source>
      <source relative_path="template/ARM_CM33" project_relative_path="../../source" type="c_include" device_cores="cm33_MIMX9352xxxxM">
        <files mask="FreeRTOSConfig.h"/>
      </source>
      <include_paths>
        <include_path relative_path="template/ARM_CM33" project_relative_path="../../source" type="c_include" device_cores="cm33_MIMX9352xxxxM"/>
        <include_path relative_path="portable/IAR/ARM_CM33_NTZ/non_secure" toolchain="iar" type="c_include" device_cores="cm33_MIMX9352xxxxM"/>
        <include_path relative_path="portable/GCC/ARM_CM33_NTZ/non_secure" toolchain="armgcc" type="c_include" device_cores="cm33_MIMX9352xxxxM"/>
      </include_paths>
    </component>
    <component id="middleware.llhttp.MIMX9352" name="llhttp" brief="HTTP parser in LLVM IR" version="6.0.5" full_name="llhttp" devices="MIMX9352xxxxM" category="AWS IoT/llhttp" user_visible="true" type="middleware" package_base_path="middleware/llhttp" project_base_path="llhttp">
      <source relative_path="include" type="c_include">
        <files mask="llhttp.h"/>
      </source>
      <source relative_path="src" type="src">
        <files mask="api.c"/>
        <files mask="http.c"/>
        <files mask="llhttp.c"/>
      </source>
      <include_paths>
        <include_path relative_path="include" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.llhttp.unused.MIMX9352" name="llhttp - unused files" brief="HTTP parser in LLVM IR. Unused files." version="6.0.5" full_name="llhttp - unused files" devices="MIMX9352xxxxM" category="AWS IoT/llhttp" user_visible="false" type="middleware" package_base_path="middleware/llhttp" project_base_path="llhttp">
      <source relative_path="./" type="doc">
        <files mask="CMakeLists.txt"/>
      </source>
      <source relative_path="./" type="other">
        <files mask="common.gypi"/>
        <files mask="LICENSE-MIT"/>
        <files mask="llhttp.gyp"/>
        <files mask="README.md"/>
      </source>
    </component>
    <component id="middleware.lwip.MIMX9352" name="lwIP" brief="lwIP - A Lightweight TCP/IP Stack" version="2.2.0" revision="7" full_name="lwIP" devices="MIMX9352xxxxM" device_cores="cm33_MIMX9352xxxxM" category="Network/lwIP TCPIP Networking Stack" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <all>
          <component_dependency value="middleware.lwip.template.MIMX9352"/>
          <any_of>
            <component_dependency value="middleware.lwip.empty_ethernetif.MIMX9352"/>
            <component_dependency value="middleware.lwip.enet_ethernetif.MIMX9352"/>
          </any_of>
        </all>
      </dependencies>
      <source relative_path="./" type="doc">
        <files mask="BUILDING" hidden="true"/>
        <files mask="CHANGELOG" hidden="true"/>
        <files mask="COPYING" hidden="true"/>
        <files mask="FEATURES" hidden="true"/>
        <files mask="FILES" hidden="true"/>
        <files mask="README" hidden="true"/>
        <files mask="UPGRADING" hidden="true"/>
        <files mask="ChangeLogKSDK.txt" hidden="true"/>
      </source>
      <source relative_path="doc" type="doc">
        <files mask="contrib.txt" hidden="true"/>
        <files mask="mdns.txt" hidden="true"/>
        <files mask="mqtt_client.txt" hidden="true"/>
        <files mask="ppp.txt" hidden="true"/>
        <files mask="savannah.txt" hidden="true"/>
        <files mask="FILES" hidden="true"/>
      </source>
      <source exclude="true" relative_path="doc" type="doc">
        <files mask="NO_SYS_SampleCode.c" hidden="true"/>
        <files mask="ZeroCopyRx.c" hidden="true"/>
      </source>
      <source relative_path="doc/doxygen" type="doc">
        <files mask="main_page.h" hidden="true"/>
        <files mask="generate.sh" hidden="true"/>
        <files mask="lwip.Doxyfile.cmake.in" hidden="true"/>
        <files mask="lwip.Doxyfile" hidden="true"/>
        <files mask="generate.bat" hidden="true"/>
      </source>
      <source relative_path="doc/doxygen/output" type="doc">
        <files mask="index.html" hidden="true"/>
      </source>
      <source relative_path="port" type="src">
        <files mask="sys_arch.c"/>
      </source>
      <source relative_path="port/arch" type="c_include">
        <files mask="cc.h"/>
        <files mask="perf.h"/>
        <files mask="sys_arch.h"/>
      </source>
      <source relative_path="src" type="doc">
        <files mask="FILES" hidden="true"/>
      </source>
      <source relative_path="src/api" type="src">
        <files mask="sockets.c"/>
        <files mask="netifapi.c"/>
        <files mask="netdb.c"/>
        <files mask="netbuf.c"/>
        <files mask="tcpip.c"/>
        <files mask="api_msg.c"/>
        <files mask="err.c"/>
        <files mask="if_api.c"/>
        <files mask="api_lib.c"/>
      </source>
      <source relative_path="src/core" type="src">
        <files mask="memp.c"/>
        <files mask="def.c"/>
        <files mask="ip.c"/>
        <files mask="pbuf.c"/>
        <files mask="altcp.c"/>
        <files mask="tcp_out.c"/>
        <files mask="raw.c"/>
        <files mask="altcp_tcp.c"/>
        <files mask="sys.c"/>
        <files mask="init.c"/>
        <files mask="inet_chksum.c"/>
        <files mask="timeouts.c"/>
        <files mask="tcp_in.c"/>
        <files mask="netif.c"/>
        <files mask="mem.c"/>
        <files mask="udp.c"/>
        <files mask="tcp.c"/>
        <files mask="stats.c"/>
        <files mask="dns.c"/>
        <files mask="altcp_alloc.c"/>
      </source>
      <source relative_path="src/core/ipv6" type="src">
        <files mask="ethip6.c"/>
        <files mask="dhcp6.c"/>
        <files mask="ip6_addr.c"/>
        <files mask="nd6.c"/>
        <files mask="mld6.c"/>
        <files mask="icmp6.c"/>
        <files mask="ip6_frag.c"/>
        <files mask="ip6.c"/>
        <files mask="inet6.c"/>
      </source>
      <source relative_path="src/core/ipv4" type="src">
        <files mask="dhcp.c"/>
        <files mask="ip4.c"/>
        <files mask="autoip.c"/>
        <files mask="icmp.c"/>
        <files mask="acd.c"/>
        <files mask="etharp.c"/>
        <files mask="ip4_addr.c"/>
        <files mask="igmp.c"/>
        <files mask="ip4_frag.c"/>
      </source>
      <source relative_path="src/include/compat/stdc" type="c_include">
        <files mask="errno.h"/>
      </source>
      <source relative_path="src/include/compat/posix" type="c_include">
        <files mask="netdb.h"/>
      </source>
      <source relative_path="src/include/compat/posix/sys" type="c_include">
        <files mask="socket.h"/>
      </source>
      <source relative_path="src/include/compat/posix/net" type="c_include">
        <files mask="if.h"/>
      </source>
      <source relative_path="src/include/compat/posix/arpa" type="c_include">
        <files mask="inet.h"/>
      </source>
      <source relative_path="src/include/lwip" type="c_include">
        <files mask="acd.h"/>
        <files mask="altcp.h"/>
        <files mask="altcp_tcp.h"/>
        <files mask="altcp_tls.h"/>
        <files mask="api.h"/>
        <files mask="arch.h"/>
        <files mask="autoip.h"/>
        <files mask="debug.h"/>
        <files mask="def.h"/>
        <files mask="dhcp.h"/>
        <files mask="dhcp6.h"/>
        <files mask="dns.h"/>
        <files mask="err.h"/>
        <files mask="errno.h"/>
        <files mask="etharp.h"/>
        <files mask="ethip6.h"/>
        <files mask="icmp.h"/>
        <files mask="icmp6.h"/>
        <files mask="if_api.h"/>
        <files mask="igmp.h"/>
        <files mask="inet.h"/>
        <files mask="inet_chksum.h"/>
        <files mask="init.h"/>
        <files mask="ip.h"/>
        <files mask="ip4.h"/>
        <files mask="ip4_addr.h"/>
        <files mask="ip4_frag.h"/>
        <files mask="ip6.h"/>
        <files mask="ip6_addr.h"/>
        <files mask="ip6_frag.h"/>
        <files mask="ip6_zone.h"/>
        <files mask="ip_addr.h"/>
        <files mask="mem.h"/>
        <files mask="memp.h"/>
        <files mask="mld6.h"/>
        <files mask="nd6.h"/>
        <files mask="netbuf.h"/>
        <files mask="netdb.h"/>
        <files mask="netif.h"/>
        <files mask="netifapi.h"/>
        <files mask="opt.h"/>
        <files mask="pbuf.h"/>
        <files mask="raw.h"/>
        <files mask="sio.h"/>
        <files mask="snmp.h"/>
        <files mask="sockets.h"/>
        <files mask="stats.h"/>
        <files mask="sys.h"/>
        <files mask="tcp.h"/>
        <files mask="tcpbase.h"/>
        <files mask="tcpip.h"/>
        <files mask="timeouts.h"/>
        <files mask="udp.h"/>
      </source>
      <source relative_path="src/include/lwip/priv" type="c_include">
        <files mask="altcp_priv.h"/>
        <files mask="mem_priv.h"/>
        <files mask="memp_priv.h"/>
        <files mask="memp_std.h"/>
        <files mask="api_msg.h"/>
        <files mask="nd6_priv.h"/>
        <files mask="tcpip_priv.h"/>
        <files mask="tcp_priv.h"/>
        <files mask="raw_priv.h"/>
        <files mask="sockets_priv.h"/>
      </source>
      <source relative_path="src/include/lwip/prot" type="c_include">
        <files mask="ip6.h"/>
        <files mask="udp.h"/>
        <files mask="mld6.h"/>
        <files mask="ip4.h"/>
        <files mask="icmp.h"/>
        <files mask="igmp.h"/>
        <files mask="dhcp.h"/>
        <files mask="tcp.h"/>
        <files mask="autoip.h"/>
        <files mask="iana.h"/>
        <files mask="ieee.h"/>
        <files mask="dns.h"/>
        <files mask="icmp6.h"/>
        <files mask="ethernet.h"/>
        <files mask="nd6.h"/>
        <files mask="ip.h"/>
        <files mask="acd.h"/>
        <files mask="dhcp6.h"/>
        <files mask="etharp.h"/>
      </source>
      <source relative_path="src/include/netif" type="c_include">
        <files mask="bridgeif.h"/>
        <files mask="zepif.h"/>
        <files mask="lowpan6.h"/>
        <files mask="ieee802154.h"/>
        <files mask="ethernet.h"/>
        <files mask="lowpan6_common.h"/>
        <files mask="lowpan6_opts.h"/>
        <files mask="bridgeif_opts.h"/>
        <files mask="slipif.h"/>
        <files mask="lowpan6_ble.h"/>
        <files mask="etharp.h"/>
      </source>
      <source relative_path="src/include/netif/ppp" type="c_include">
        <files mask="ipv6cp.h"/>
        <files mask="pppapi.h"/>
        <files mask="magic.h"/>
        <files mask="ppp.h"/>
        <files mask="upap.h"/>
        <files mask="mppe.h"/>
        <files mask="pppol2tp.h"/>
        <files mask="pppoe.h"/>
        <files mask="ipcp.h"/>
        <files mask="pppdebug.h"/>
        <files mask="eap.h"/>
        <files mask="pppos.h"/>
        <files mask="ppp_opts.h"/>
        <files mask="pppcrypt.h"/>
        <files mask="vj.h"/>
        <files mask="chap-new.h"/>
        <files mask="eui64.h"/>
        <files mask="chap_ms.h"/>
        <files mask="ccp.h"/>
        <files mask="ecp.h"/>
        <files mask="lcp.h"/>
        <files mask="fsm.h"/>
        <files mask="ppp_impl.h"/>
        <files mask="chap-md5.h"/>
      </source>
      <source relative_path="src/include/netif/ppp/polarssl" type="c_include">
        <files mask="sha1.h"/>
        <files mask="des.h"/>
        <files mask="md5.h"/>
        <files mask="md4.h"/>
        <files mask="arc4.h"/>
      </source>
      <source relative_path="src/netif" type="src">
        <files mask="bridgeif.c"/>
        <files mask="bridgeif_fdb.c"/>
        <files mask="ethernet.c"/>
        <files mask="lowpan6.c"/>
        <files mask="lowpan6_ble.c"/>
        <files mask="lowpan6_common.c"/>
        <files mask="slipif.c"/>
        <files mask="zepif.c"/>
      </source>
      <source relative_path="src/netif" type="doc">
        <files mask="FILES" hidden="true"/>
      </source>
      <source relative_path="src/netif/ppp" type="src">
        <files mask="auth.c"/>
        <files mask="ccp.c"/>
        <files mask="chap-md5.c"/>
        <files mask="chap-new.c"/>
        <files mask="chap_ms.c"/>
        <files mask="demand.c"/>
        <files mask="eap.c"/>
        <files mask="ecp.c"/>
        <files mask="eui64.c"/>
        <files mask="fsm.c"/>
        <files mask="ipcp.c"/>
        <files mask="ipv6cp.c"/>
        <files mask="lcp.c"/>
        <files mask="magic.c"/>
        <files mask="mppe.c"/>
        <files mask="multilink.c"/>
        <files mask="ppp.c"/>
        <files mask="pppapi.c"/>
        <files mask="pppcrypt.c"/>
        <files mask="pppoe.c"/>
        <files mask="pppol2tp.c"/>
        <files mask="pppos.c"/>
        <files mask="upap.c"/>
        <files mask="utils.c"/>
        <files mask="vj.c"/>
      </source>
      <source relative_path="src/netif/ppp" type="doc">
        <files mask="PPPD_FOLLOWUP" hidden="true"/>
      </source>
      <source exclude="true" relative_path="src/netif/ppp/polarssl" type="src">
        <files mask="arc4.c" hidden="true"/>
        <files mask="des.c" hidden="true"/>
        <files mask="md4.c" hidden="true"/>
        <files mask="md5.c" hidden="true"/>
        <files mask="sha1.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="src/netif/ppp/polarssl" type="doc">
        <files mask="README" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="middleware_lwip_MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="port" type="c_include"/>
        <include_path relative_path="src" type="c_include"/>
        <include_path relative_path="src/include" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.apps.httpd.MIMX9352" name="lwIP_HTTPD" brief="lwIP HTTP Daemon" version="2.2.0" revision="7" full_name="lwIP HTTP Daemon" devices="MIMX9352xxxxM" device_cores="cm33_MIMX9352xxxxM" category="Network/lwIP TCPIP Application protocols" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <all>
          <component_dependency value="middleware.lwip.MIMX9352"/>
          <component_dependency value="middleware.lwip.apps.httpd.support.MIMX9352"/>
        </all>
      </dependencies>
      <source relative_path="src/apps/http" type="src">
        <files mask="httpd.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="middleware_lwip_apps_httpd_MIMX9352.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.lwip.apps.httpd.support.MIMX9352" name="lwIP_HTTPD_support" brief="lwIP HTTP Daemon Implementation Support Files" version="2.2.0" revision="7" full_name="lwIP HTTP Daemon Implementation Support Files" devices="MIMX9352xxxxM" device_cores="cm33_MIMX9352xxxxM" category="Network/lwIP TCPIP Application protocols" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <component_dependency value="middleware.lwip.MIMX9352"/>
      </dependencies>
      <source relative_path="src/apps/http" type="src">
        <files mask="fs.c"/>
      </source>
      <source relative_path="src/apps/http" type="c_include">
        <files mask="fsdata.h"/>
        <files mask="httpd_structs.h"/>
      </source>
      <source exclude="true" relative_path="src/apps/http" type="src">
        <files mask="fsdata.c" hidden="true"/>
      </source>
      <source relative_path="src/include/lwip/apps" type="c_include">
        <files mask="fs.h"/>
        <files mask="httpd.h"/>
        <files mask="httpd_opts.h"/>
      </source>
      <source relative_path="src/apps/http/fs" type="other">
        <files mask="index.html" hidden="true"/>
        <files mask="404.html" hidden="true"/>
      </source>
      <source relative_path="src/apps/http/fs/img" type="other">
        <files mask="sics.gif" hidden="true"/>
      </source>
      <source exclude="true" relative_path="src/apps/http/makefsdata" type="c_include">
        <files mask="tinydir.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="src/apps/http/makefsdata" type="src">
        <files mask="makefsdata.c" hidden="true"/>
      </source>
      <source relative_path="src/apps/http/makefsdata" type="doc">
        <files mask="readme.txt" hidden="true"/>
      </source>
      <source relative_path="src/apps/http/makefsdata" type="other">
        <files mask="makefsdata" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="middleware_lwip_apps_httpd_support_MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="src/apps/http" type="c_include"/>
        <include_path relative_path="src/include/lwip/apps" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.apps.httpsrv.MIMX9352" name="lwIP_HTTP_srv" brief="lwIP HTTP Server Implementation" version="2.2.0" revision="7" full_name="lwIP HTTP Server" devices="MIMX9352xxxxM" device_cores="cm33_MIMX9352xxxxM" category="Network/lwIP TCPIP Application protocols" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <all>
          <component_dependency value="middleware.lwip.MIMX9352"/>
          <component_dependency value="middleware.freertos-kernel.MIMX9352"/>
        </all>
      </dependencies>
      <source relative_path="src/apps/httpsrv" type="src">
        <files mask="httpsrv.c"/>
        <files mask="httpsrv_base64.c"/>
        <files mask="httpsrv_fs.c"/>
        <files mask="httpsrv_script.c"/>
        <files mask="httpsrv_sha1.c"/>
        <files mask="httpsrv_supp.c"/>
        <files mask="httpsrv_task.c"/>
        <files mask="httpsrv_tls.c"/>
        <files mask="httpsrv_utf8.c"/>
        <files mask="httpsrv_ws.c"/>
        <files mask="httpsrv_ws_api.c"/>
      </source>
      <source relative_path="src/apps/httpsrv" type="c_include">
        <files mask="httpsrv.h"/>
        <files mask="httpsrv_base64.h"/>
        <files mask="httpsrv_config.h"/>
        <files mask="httpsrv_fs.h"/>
        <files mask="httpsrv_port.h"/>
        <files mask="httpsrv_prv.h"/>
        <files mask="httpsrv_script.h"/>
        <files mask="httpsrv_sha1.h"/>
        <files mask="httpsrv_supp.h"/>
        <files mask="httpsrv_tls.h"/>
        <files mask="httpsrv_utf8.h"/>
        <files mask="httpsrv_ws.h"/>
        <files mask="httpsrv_ws_prv.h"/>
      </source>
      <source relative_path="src/apps/httpsrv/mkfs" type="other">
        <files mask="mkfs.pl" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="src/apps/httpsrv" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.apps.lwiperf.MIMX9352" name="lwIP_IPERF" brief="lwIP IPERF Implementation" version="2.2.0" revision="7" full_name="lwIP IPERF" devices="MIMX9352xxxxM" device_cores="cm33_MIMX9352xxxxM" category="Network/lwIP TCPIP Application protocols" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <all>
          <component_dependency value="middleware.lwip.MIMX9352"/>
          <any_of>
            <component_dependency value="middleware.freertos-kernel.MIMX9352"/>
            <component_dependency value="middleware.baremetal.MIMX9352"/>
          </any_of>
        </all>
      </dependencies>
      <source relative_path="src/apps/lwiperf" type="src">
        <files mask="lwiperf.c"/>
      </source>
      <source relative_path="src/include/lwip/apps" type="c_include">
        <files mask="lwiperf.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="middleware_lwip_apps_lwiperf_MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="src/include/lwip/apps" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.apps.mdns.MIMX9352" name="lwIP_MDNS" brief="lwIP mDNS Implementation" version="2.2.0" revision="7" full_name="lwIP mDNS" devices="MIMX9352xxxxM" device_cores="cm33_MIMX9352xxxxM" category="Network/lwIP TCPIP Application protocols" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <component_dependency value="middleware.lwip.MIMX9352"/>
      </dependencies>
      <source relative_path="src/apps/mdns" type="src">
        <files mask="mdns.c"/>
        <files mask="mdns_domain.c"/>
        <files mask="mdns_out.c"/>
      </source>
      <source relative_path="src/include/lwip/apps" type="c_include">
        <files mask="mdns.h"/>
        <files mask="mdns_domain.h"/>
        <files mask="mdns_priv.h"/>
        <files mask="mdns_opts.h"/>
        <files mask="mdns_out.h"/>
      </source>
      <include_paths>
        <include_path relative_path="src/include/lwip/apps" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.apps.mqtt.MIMX9352" name="lwIP_MQTT" brief="lwIP MQTT Client" version="2.2.0" revision="7" full_name="lwIP MQTT Client" devices="MIMX9352xxxxM" device_cores="cm33_MIMX9352xxxxM" category="Network/lwIP TCPIP Application protocols" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <component_dependency value="middleware.lwip.MIMX9352"/>
      </dependencies>
      <source relative_path="src/apps/mqtt" type="src">
        <files mask="mqtt.c"/>
      </source>
      <source relative_path="src/include/lwip/apps" type="c_include">
        <files mask="mqtt.h"/>
        <files mask="mqtt_opts.h"/>
        <files mask="mqtt_priv.h"/>
      </source>
      <include_paths>
        <include_path relative_path="src/include/lwip/apps" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.apps.sntp.MIMX9352" name="lwIP_SNTP" brief="lwIP SNTP" version="2.2.0" revision="7" full_name="lwIP SNTP" devices="MIMX9352xxxxM" device_cores="cm33_MIMX9352xxxxM" category="Network/lwIP TCPIP Application protocols" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <component_dependency value="middleware.lwip.MIMX9352"/>
      </dependencies>
      <source relative_path="src/include/lwip/apps" type="c_include">
        <files mask="sntp.h"/>
        <files mask="sntp_opts.h"/>
      </source>
      <source relative_path="src/apps/sntp" type="src">
        <files mask="sntp.c"/>
      </source>
      <include_paths>
        <include_path relative_path="src/include/lwip/apps" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.contrib.ping.MIMX9352" name="lwIP_ping" brief="lwIP Ping Sender contrib" version="2.2.0" revision="7" full_name="lwIP Ping Sender" devices="MIMX9352xxxxM" device_cores="cm33_MIMX9352xxxxM" category="Network/lwIP TCPIP Application protocols" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <component_dependency value="middleware.lwip.MIMX9352"/>
      </dependencies>
      <source relative_path="contrib/apps/ping" type="c_include">
        <files mask="ping.h"/>
      </source>
      <source relative_path="contrib/apps/ping" type="src">
        <files mask="ping.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="middleware_lwip_contrib_ping_MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="contrib/apps/ping" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.contrib.tcpecho.MIMX9352" name="lwIP_tcpecho" brief="lwIP TCP Echo contrib" version="2.2.0" revision="7" full_name="lwIP TCP Echo" devices="MIMX9352xxxxM" device_cores="cm33_MIMX9352xxxxM" category="Network/lwIP TCPIP Application protocols" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <component_dependency value="middleware.lwip.MIMX9352"/>
      </dependencies>
      <source relative_path="contrib/apps/tcpecho" type="c_include">
        <files mask="tcpecho.h"/>
      </source>
      <source relative_path="contrib/apps/tcpecho" type="src">
        <files mask="tcpecho.c"/>
      </source>
      <include_paths>
        <include_path relative_path="contrib/apps/tcpecho" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.contrib.tcpecho_raw.MIMX9352" name="lwIP_tcpecho_raw" brief="lwIP TCP Echo Raw API contrib" version="2.2.0" revision="7" full_name="lwIP TCP Echo Raw API" devices="MIMX9352xxxxM" device_cores="cm33_MIMX9352xxxxM" category="Network/lwIP TCPIP Application protocols" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <component_dependency value="middleware.lwip.MIMX9352"/>
      </dependencies>
      <source relative_path="contrib/apps/tcpecho_raw" type="src">
        <files mask="tcpecho_raw.c"/>
      </source>
      <source relative_path="contrib/apps/tcpecho_raw" type="c_include">
        <files mask="tcpecho_raw.h"/>
      </source>
      <include_paths>
        <include_path relative_path="contrib/apps/tcpecho_raw" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.contrib.udpecho.MIMX9352" name="lwIP_udpecho" brief="lwIP UDP Echo contrib" version="2.2.0" revision="7" full_name="lwIP UDP Echo" devices="MIMX9352xxxxM" device_cores="cm33_MIMX9352xxxxM" category="Network/lwIP TCPIP Application protocols" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <component_dependency value="middleware.lwip.MIMX9352"/>
      </dependencies>
      <source relative_path="contrib/apps/udpecho" type="c_include">
        <files mask="udpecho.h"/>
      </source>
      <source relative_path="contrib/apps/udpecho" type="src">
        <files mask="udpecho.c"/>
      </source>
      <include_paths>
        <include_path relative_path="contrib/apps/udpecho" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.contrib.udpecho_raw.MIMX9352" name="lwIP_udpecho_raw" brief="lwIP UDP Echo Raw API contrib" version="2.2.0" revision="7" full_name="lwIP UDP Echo Raw API" devices="MIMX9352xxxxM" device_cores="cm33_MIMX9352xxxxM" category="Network/lwIP TCPIP Application protocols" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <component_dependency value="middleware.lwip.MIMX9352"/>
      </dependencies>
      <source relative_path="contrib/apps/udpecho_raw" type="src">
        <files mask="udpecho_raw.c"/>
      </source>
      <source relative_path="contrib/apps/udpecho_raw" type="c_include">
        <files mask="udpecho_raw.h"/>
      </source>
      <include_paths>
        <include_path relative_path="contrib/apps/udpecho_raw" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.empty_ethernetif.MIMX9352" name="lwIP_empty_ethernetif" brief="lwIP Empty Ethernet Layer (do not use)" version="2.2.0" revision="7" full_name="lwIP Empty Ethernet Layer (do not use)" devices="MIMX9352xxxxM" device_cores="cm33_MIMX9352xxxxM" category="Network/lwIP TCPIP Networking Stack" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <all>
          <component_dependency value="middleware.lwip.MIMX9352"/>
          <component_dependency value="middleware.lwip.template.MIMX9352"/>
        </all>
      </dependencies>
    </component>
    <component id="middleware.lwip.enet_ethernetif.MIMX9352" name="Enet ethernet interface" brief="Enet ethernet interface" version="2.2.0" revision="7" full_name="Enet ethernet interface" devices="MIMX9352xxxxM" device_cores="cm33_MIMX9352xxxxM" category="Network/lwIP TCPIP Networking Stack" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <all>
          <component_dependency value="middleware.lwip.MIMX9352"/>
          <component_dependency value="middleware.lwip.template.MIMX9352"/>
          <component_dependency value="driver.phy-common.MIMX9352"/>
          <any_of>
            <component_dependency value="platform.drivers.enet.MIMX9352"/>
            <component_dependency value="platform.drivers.enet_qos.MIMX9352"/>
          </any_of>
        </all>
      </dependencies>
      <source relative_path="port" type="src">
        <files mask="enet_ethernetif.c"/>
        <files mask="ethernetif.c"/>
        <files mask="ethernetif_mmac.c"/>
      </source>
      <source relative_path="port" type="c_include">
        <files mask="ethernetif.h"/>
        <files mask="ethernetif_mmac.h"/>
        <files mask="ethernetif_priv.h"/>
        <files mask="enet_sanitychecks.h"/>
      </source>
      <source condition="platform.drivers.enet.MIMX9352" relative_path="port" type="src">
        <files mask="enet_ethernetif_kinetis.c"/>
      </source>
      <source condition="platform.drivers.enet_qos.MIMX9352" relative_path="port" type="src">
        <files mask="enet_ethernetif_qos.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="middleware_lwip_enet_ethernetif_MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="port" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.template.MIMX9352" name="lwIP_template" brief="lwIP Template" version="2.2.0" revision="7" full_name="lwIP Template Application" devices="MIMX9352xxxxM" user_visible="false" type="project_template" package_base_path="middleware/lwip" project_base_path="lwip">
      <source relative_path="template" type="c_include">
        <files mask="lwipopts.h"/>
      </source>
      <include_paths>
        <include_path relative_path="template" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.unused_files.MIMX9352" name="lwIP_unused_files" brief="lwIP files unused by projects" version="2.2.0" revision="7" full_name="lwIP - Files Unused by Projects" devices="MIMX9352xxxxM" user_visible="false" type="other" package_base_path="middleware/lwip" project_base_path="lwip">
      <source exclude="true" relative_path="./" type="other">
        <files mask="CMakeLists.txt" hidden="true"/>
      </source>
      <source exclude="true" relative_path="src" type="other">
        <files mask="Filelists.cmake" hidden="true"/>
        <files mask="Filelists.mk" hidden="true"/>
      </source>
      <source exclude="true" relative_path="test/sockets" type="src">
        <files mask="sockets_stresstest.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="test/sockets" type="c_include">
        <files mask="sockets_stresstest.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="test/fuzz" type="src">
        <files mask="fuzz3.c" hidden="true"/>
        <files mask="fuzz_common.c" hidden="true"/>
        <files mask="fuzz2.c" hidden="true"/>
        <files mask="fuzz.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="test/fuzz" type="c_include">
        <files mask="config.h" hidden="true"/>
        <files mask="lwipopts.h" hidden="true"/>
        <files mask="fuzz_common.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="test/fuzz/inputs/arp" type="binary">
        <files mask="arp_req.bin" hidden="true"/>
      </source>
      <source exclude="true" relative_path="test/fuzz/inputs/ipv6" type="binary">
        <files mask="neighbor_solicitation.bin" hidden="true"/>
        <files mask="router_adv.bin" hidden="true"/>
      </source>
      <source exclude="true" relative_path="test/fuzz/inputs/icmp" type="binary">
        <files mask="icmp_ping.bin" hidden="true"/>
      </source>
      <source exclude="true" relative_path="test/fuzz/inputs/udp" type="binary">
        <files mask="udp_port_5000.bin" hidden="true"/>
      </source>
      <source exclude="true" relative_path="test/fuzz/inputs/tcp" type="binary">
        <files mask="tcp_syn.bin" hidden="true"/>
      </source>
      <source exclude="true" relative_path="test/fuzz" type="other">
        <files mask="Makefile" hidden="true"/>
        <files mask="README" hidden="true"/>
      </source>
      <source exclude="true" relative_path="test/fuzz" type="script">
        <files mask="output_to_pcap.sh" hidden="true"/>
      </source>
      <source exclude="true" relative_path="test/unit/arch" type="c_include">
        <files mask="sys_arch.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="test/unit/arch" type="src">
        <files mask="sys_arch.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="test/unit" type="c_include">
        <files mask="lwip_check.h" hidden="true"/>
        <files mask="lwipopts.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="test/unit/ip6" type="c_include">
        <files mask="test_ip6.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="test/unit/ip6" type="src">
        <files mask="test_ip6.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="test/unit" type="script">
        <files mask="Filelists.cmake" hidden="true"/>
        <files mask="Filelists.mk" hidden="true"/>
      </source>
      <source exclude="true" relative_path="test/unit/dhcp" type="src">
        <files mask="test_dhcp.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="test/unit/dhcp" type="c_include">
        <files mask="test_dhcp.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="test/unit/mqtt" type="c_include">
        <files mask="test_mqtt.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="test/unit/mqtt" type="src">
        <files mask="test_mqtt.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="test/unit/api" type="c_include">
        <files mask="test_sockets.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="test/unit/api" type="src">
        <files mask="test_sockets.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="test/unit" type="other">
        <files mask="Makefile" hidden="true"/>
      </source>
      <source exclude="true" relative_path="test/unit/udp" type="src">
        <files mask="test_udp.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="test/unit/udp" type="c_include">
        <files mask="test_udp.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="test/unit/tcp" type="c_include">
        <files mask="test_tcp_oos.h" hidden="true"/>
        <files mask="test_tcp.h" hidden="true"/>
        <files mask="tcp_helper.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="test/unit/tcp" type="src">
        <files mask="tcp_helper.c" hidden="true"/>
        <files mask="test_tcp.c" hidden="true"/>
        <files mask="test_tcp_oos.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="test/unit/mdns" type="c_include">
        <files mask="test_mdns.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="test/unit/mdns" type="src">
        <files mask="test_mdns.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="test/unit" type="src">
        <files mask="lwip_unittests.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="test/unit/etharp" type="c_include">
        <files mask="test_etharp.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="test/unit/etharp" type="src">
        <files mask="test_etharp.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="test/unit/ip4" type="c_include">
        <files mask="test_ip4.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="test/unit/ip4" type="src">
        <files mask="test_ip4.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="test/unit/core" type="src">
        <files mask="test_timers.c" hidden="true"/>
        <files mask="test_mem.c" hidden="true"/>
        <files mask="test_dns.c" hidden="true"/>
        <files mask="test_netif.c" hidden="true"/>
        <files mask="test_def.c" hidden="true"/>
        <files mask="test_pbuf.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="test/unit/core" type="c_include">
        <files mask="test_pbuf.h" hidden="true"/>
        <files mask="test_timers.h" hidden="true"/>
        <files mask="test_mem.h" hidden="true"/>
        <files mask="test_dns.h" hidden="true"/>
        <files mask="test_def.h" hidden="true"/>
        <files mask="test_netif.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib" type="script">
        <files mask="Filelists.cmake" hidden="true"/>
        <files mask="Filelists.mk" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/addons/tcp_isn" type="src">
        <files mask="tcp_isn.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/addons/tcp_isn" type="c_include">
        <files mask="tcp_isn.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/addons/ipv6_static_routing" type="c_include">
        <files mask="ip6_route_table.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/addons/ipv6_static_routing" type="src">
        <files mask="ip6_route_table.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/addons/ipv6_static_routing" type="other">
        <files mask="README" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/addons/netconn/external_resolve" type="c_include">
        <files mask="dnssd.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/addons/netconn/external_resolve" type="src">
        <files mask="dnssd.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/addons/tcp_md5" type="src">
        <files mask="tcp_md5.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/addons/tcp_md5" type="other">
        <files mask="README" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/addons/tcp_md5" type="c_include">
        <files mask="tcp_md5.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/apps/chargen" type="src">
        <files mask="chargen.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/apps/chargen" type="c_include">
        <files mask="chargen.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/apps/chargen" type="other">
        <files mask="README" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/apps/httpserver" type="src">
        <files mask="httpserver-netconn.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/apps/httpserver" type="other">
        <files mask="README" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/apps/httpserver" type="c_include">
        <files mask="httpserver-netconn.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/apps/netio" type="src">
        <files mask="netio.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/apps/netio" type="c_include">
        <files mask="netio.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/apps/rtp" type="c_include">
        <files mask="rtpdata.h" hidden="true"/>
        <files mask="rtp.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/apps/rtp" type="src">
        <files mask="rtp.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/apps/shell" type="src">
        <files mask="shell.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/apps/shell" type="c_include">
        <files mask="shell.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/apps/socket_examples" type="src">
        <files mask="socket_examples.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/apps/socket_examples" type="c_include">
        <files mask="socket_examples.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/Coverity" type="src">
        <files mask="coverity.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/examples/httpd/genfiles_example" type="src">
        <files mask="genfiles_example.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/examples/httpd/genfiles_example" type="c_include">
        <files mask="genfiles_example.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/examples/httpd/post_example" type="src">
        <files mask="post_example.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/examples/httpd/https_example" type="c_include">
        <files mask="https_example.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/examples/httpd/https_example" type="src">
        <files mask="https_example.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/examples/httpd/cgi_example" type="c_include">
        <files mask="cgi_example.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/examples/httpd/cgi_example" type="src">
        <files mask="cgi_example.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/examples/httpd/fs_example" type="c_include">
        <files mask="fs_example.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/examples/httpd/fs_example" type="src">
        <files mask="fs_example.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/examples/httpd/examples_fs" type="doc">
        <files mask="loginfail.html" hidden="true"/>
        <files mask="index.html" hidden="true"/>
        <files mask="session.html" hidden="true"/>
        <files mask="login.html" hidden="true"/>
        <files mask="404.html" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/examples/httpd/examples_fs" type="other">
        <files mask="ssi.shtml" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/examples/httpd/examples_fs/img" type="image">
        <files mask="sics.gif" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/examples/httpd/ssi_example" type="src">
        <files mask="ssi_example.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/examples/httpd/ssi_example" type="c_include">
        <files mask="ssi_example.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/examples/httpd" type="src">
        <files mask="examples_fsdata.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/examples/ethernetif" type="src">
        <files mask="ethernetif.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/examples/tftp" type="src">
        <files mask="tftp_example.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/examples/tftp" type="c_include">
        <files mask="tftp_example.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/examples/lwiperf" type="c_include">
        <files mask="lwiperf_example.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/examples/lwiperf" type="src">
        <files mask="lwiperf_example.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/examples/mqtt" type="c_include">
        <files mask="mqtt_example.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/examples/mqtt" type="src">
        <files mask="mqtt_example.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/examples/ppp" type="c_include">
        <files mask="pppos_example.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/examples/ppp" type="src">
        <files mask="pppos_example.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/examples/snmp" type="c_include">
        <files mask="snmp_example.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/examples/snmp/snmp_private_mib" type="c_include">
        <files mask="private_mib.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/examples/snmp/snmp_private_mib" type="src">
        <files mask="lwip_prvmib.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/examples/snmp/snmp_v3" type="c_include">
        <files mask="snmpv3_dummy.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/examples/snmp/snmp_v3" type="src">
        <files mask="snmpv3_dummy.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/examples/snmp" type="src">
        <files mask="snmp_example.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/examples/example_app" type="c_include">
        <files mask="lwippools.h" hidden="true"/>
        <files mask="default_netif.h" hidden="true"/>
        <files mask="ppp_settings.h" hidden="true"/>
        <files mask="lwipopts.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/examples/example_app" type="other">
        <files mask="lwipcfg.h.example" hidden="true"/>
        <files mask="lwipcfg.h.ci" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/examples/example_app/test_configs" type="c_include">
        <files mask="opt_nosys_ipv6.h" hidden="true"/>
        <files mask="opt_no_tcp_dualstack.h" hidden="true"/>
        <files mask="opt_ipv6only.h" hidden="true"/>
        <files mask="opt_nosys_dual.h" hidden="true"/>
        <files mask="opt_no_udp_ipv6only.h" hidden="true"/>
        <files mask="opt_default.h" hidden="true"/>
        <files mask="opt_nosys_ipv4.h" hidden="true"/>
        <files mask="opt_no_tcp_ipv4only.h" hidden="true"/>
        <files mask="opt_none.h" hidden="true"/>
        <files mask="opt_no_udp_dualstack.h" hidden="true"/>
        <files mask="opt_no_tcp_ipv6only.h" hidden="true"/>
        <files mask="opt_dualstack.h" hidden="true"/>
        <files mask="opt_no_udp_ipv4only.h" hidden="true"/>
        <files mask="opt_ipv4only.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/examples/example_app" type="src">
        <files mask="test.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/examples/mdns" type="src">
        <files mask="mdns_example.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/examples/mdns" type="c_include">
        <files mask="mdns_example.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/examples/sntp" type="c_include">
        <files mask="sntp_example.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/examples/sntp" type="src">
        <files mask="sntp_example.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/ports/freertos/include/arch" type="c_include">
        <files mask="sys_arch.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/ports/freertos" type="src">
        <files mask="sys_arch.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/ports/unix" type="script">
        <files mask="Filelists.cmake" hidden="true"/>
        <files mask="Common.mk" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/ports/unix" type="other">
        <files mask="setup-tapif" hidden="true"/>
        <files mask="README" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/ports/unix/port" type="src">
        <files mask="perf.c" hidden="true"/>
        <files mask="sys_arch.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/ports/unix/port/include/arch" type="c_include">
        <files mask="sys_arch.h" hidden="true"/>
        <files mask="perf.h" hidden="true"/>
        <files mask="cc.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/ports/unix/port/include/netif" type="c_include">
        <files mask="list.h" hidden="true"/>
        <files mask="pcapif.h" hidden="true"/>
        <files mask="sio.h" hidden="true"/>
        <files mask="fifo.h" hidden="true"/>
        <files mask="tapif.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/ports/unix/port/netif" type="src">
        <files mask="list.c" hidden="true"/>
        <files mask="tapif.c" hidden="true"/>
        <files mask="pcapif.c" hidden="true"/>
        <files mask="sio.c" hidden="true"/>
        <files mask="fifo.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/ports/unix/example_app" type="doc">
        <files mask="CMakeLists.txt" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/ports/unix/example_app" type="other">
        <files mask="Makefile" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/ports/unix/example_app" type="script">
        <files mask="iteropts.sh" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/ports/unix/example_app" type="src">
        <files mask="default_netif.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/ports/unix/lib" type="doc">
        <files mask="CMakeLists.txt" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/ports/unix/lib" type="other">
        <files mask="README" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/ports/unix/lib" type="c_include">
        <files mask="lwipopts.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/ports/unix/check" type="c_include">
        <files mask="config.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/ports/unix/check" type="doc">
        <files mask="CMakeLists.txt" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/ports/unix/check" type="other">
        <files mask="Makefile" hidden="true"/>
        <files mask="README" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/ports/win32" type="c_include">
        <files mask="pcapif.h" hidden="true"/>
        <files mask="pcapif_helper.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/ports/win32" type="script">
        <files mask="Filelists.cmake" hidden="true"/>
        <files mask="Common.mk" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/ports/win32/include/arch" type="c_include">
        <files mask="epstruct.h" hidden="true"/>
        <files mask="sys_arch.h" hidden="true"/>
        <files mask="bpstruct.h" hidden="true"/>
        <files mask="perf.h" hidden="true"/>
        <files mask="cc.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/ports/win32" type="doc">
        <files mask="readme.txt" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/ports/win32" type="src">
        <files mask="pcapif.c" hidden="true"/>
        <files mask="sio.c" hidden="true"/>
        <files mask="sys_arch.c" hidden="true"/>
        <files mask="pcapif_helper.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/ports/win32/msvc" type="other">
        <files mask="lwip_unittests.vcxproj.filters" hidden="true"/>
        <files mask="makefsdata.vcxproj.filters" hidden="true"/>
        <files mask="lwIP.vcxproj" hidden="true"/>
        <files mask="lwIP_unittests.sln" hidden="true"/>
        <files mask="lwIP_Test.vcxproj" hidden="true"/>
        <files mask="lwip_unittests.vcxproj" hidden="true"/>
        <files mask="lwIP.vcxproj.filters" hidden="true"/>
        <files mask="lwIP_pcapif.vcxproj.filters" hidden="true"/>
        <files mask="makefsdata.vcxproj" hidden="true"/>
        <files mask="libcheck.vcxproj" hidden="true"/>
        <files mask="libcheck.vcxproj.filters" hidden="true"/>
        <files mask="lwIP_pcapif.vcxproj" hidden="true"/>
        <files mask="lwIP_Test.sln" hidden="true"/>
        <files mask="lwIP_Test.vcxproj.filters" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/ports/win32/msvc" type="script">
        <files mask="build_coverity.cmd" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/ports/win32/example_app" type="doc">
        <files mask="CMakeLists.txt" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/ports/win32/example_app" type="other">
        <files mask="Makefile" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/ports/win32/example_app" type="src">
        <files mask="default_netif.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/ports/win32/check" type="c_include">
        <files mask="stdbool.h" hidden="true"/>
        <files mask="check_stdint.h" hidden="true"/>
        <files mask="config.h" hidden="true"/>
        <files mask="unistd.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/ports/win32/check/sys" type="c_include">
        <files mask="time.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/ports/win32/check" type="src">
        <files mask="time.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/ports" type="script">
        <files mask="Common.allports.mk" hidden="true"/>
        <files mask="CMakeCommon.cmake" hidden="true"/>
      </source>
      <source exclude="true" relative_path="src/apps/altcp_tls" type="c_include">
        <files mask="altcp_tls_mbedtls_mem.h" hidden="true"/>
        <files mask="altcp_tls_mbedtls_structs.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="src/apps/altcp_tls" type="src">
        <files mask="altcp_tls_mbedtls_mem.c" hidden="true"/>
        <files mask="altcp_tls_mbedtls.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="src/apps/http" type="src">
        <files mask="altcp_proxyconnect.c" hidden="true"/>
        <files mask="http_client.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="src/apps/netbiosns" type="src">
        <files mask="netbiosns.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="src/apps/smtp" type="src">
        <files mask="smtp.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="src/apps/snmp" type="src">
        <files mask="snmp_mib2_tcp.c" hidden="true"/>
        <files mask="snmp_table.c" hidden="true"/>
        <files mask="snmp_scalar.c" hidden="true"/>
        <files mask="snmp_netconn.c" hidden="true"/>
        <files mask="snmp_mib2_ip.c" hidden="true"/>
        <files mask="snmp_traps.c" hidden="true"/>
        <files mask="snmp_msg.c" hidden="true"/>
        <files mask="snmp_mib2_udp.c" hidden="true"/>
        <files mask="snmp_mib2_icmp.c" hidden="true"/>
        <files mask="snmp_mib2_snmp.c" hidden="true"/>
        <files mask="snmp_mib2.c" hidden="true"/>
        <files mask="snmpv3.c" hidden="true"/>
        <files mask="snmp_raw.c" hidden="true"/>
        <files mask="snmp_threadsync.c" hidden="true"/>
        <files mask="snmp_snmpv2_usm.c" hidden="true"/>
        <files mask="snmp_pbuf_stream.c" hidden="true"/>
        <files mask="snmp_snmpv2_framework.c" hidden="true"/>
        <files mask="snmp_mib2_interfaces.c" hidden="true"/>
        <files mask="snmpv3_mbedtls.c" hidden="true"/>
        <files mask="snmp_mib2_system.c" hidden="true"/>
        <files mask="snmp_asn1.c" hidden="true"/>
        <files mask="snmp_core.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="src/apps/snmp" type="c_include">
        <files mask="snmp_asn1.h" hidden="true"/>
        <files mask="snmp_core_priv.h" hidden="true"/>
        <files mask="snmpv3_priv.h" hidden="true"/>
        <files mask="snmp_pbuf_stream.h" hidden="true"/>
        <files mask="snmp_msg.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="src/apps/tftp" type="src">
        <files mask="tftp.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="src/include/lwip" type="other">
        <files mask="init.h.cmake.in" hidden="true"/>
      </source>
      <source exclude="true" relative_path="src/include/lwip/apps" type="c_include">
        <files mask="altcp_proxyconnect.h" hidden="true"/>
        <files mask="altcp_tls_mbedtls_opts.h" hidden="true"/>
        <files mask="http_client.h" hidden="true"/>
        <files mask="netbiosns.h" hidden="true"/>
        <files mask="netbiosns_opts.h" hidden="true"/>
        <files mask="smtp.h" hidden="true"/>
        <files mask="smtp_opts.h" hidden="true"/>
        <files mask="snmp.h" hidden="true"/>
        <files mask="snmpv3.h" hidden="true"/>
        <files mask="snmp_core.h" hidden="true"/>
        <files mask="snmp_mib2.h" hidden="true"/>
        <files mask="snmp_opts.h" hidden="true"/>
        <files mask="snmp_scalar.h" hidden="true"/>
        <files mask="snmp_snmpv2_framework.h" hidden="true"/>
        <files mask="snmp_snmpv2_usm.h" hidden="true"/>
        <files mask="snmp_table.h" hidden="true"/>
        <files mask="snmp_threadsync.h" hidden="true"/>
        <files mask="tftp_client.h" hidden="true"/>
        <files mask="tftp_common.h" hidden="true"/>
        <files mask="tftp_opts.h" hidden="true"/>
        <files mask="tftp_server.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="src/include/lwip/apps" type="other">
        <files mask="FILES" hidden="true"/>
      </source>
    </component>
    <component id="middleware.multicore.MIMX9352" name="multicore middleware" brief="Multicore SDK" version="2.13.0" full_name="Multicore Software Development Kit" devices="MIMX9352xxxxM" user_visible="true" type="other" package_base_path="middleware/multicore" project_base_path="multicore">
      <source relative_path="./" type="doc">
        <files mask="readme.txt" hidden="true"/>
        <files mask="ChangeLogKSDK.txt" hidden="true"/>
      </source>
    </component>
    <component id="middleware.multicore.remoteproc.loadscript.MIMX9352" name="remoteproc_load_script" brief="remoteproc-load script" version="1.0.0" full_name="remoteproc-load script" devices="MIMX9352xxxxM" user_visible="true" type="other" package_base_path="middleware/multicore" project_base_path="multicore">
      <source relative_path="tools/remoteproc-load" type="other">
        <files mask="Readme.md"/>
        <files mask="remote.cfg"/>
      </source>
      <source relative_path="tools/remoteproc-load" type="script">
        <files mask="load.sh"/>
      </source>
    </component>
    <component id="middleware.multicore.rpmsg_lite.MIMX9352" name="rpmsg_lite" brief="RPMsg-Lite" version="5.0.0" full_name="Remote Procedure Messaging Lite library" devices="MIMX9352xxxxM" category="Multicore/RPMsg-Lite" user_visible="false" type="middleware" package_base_path="middleware/multicore" project_base_path="rpmsg_lite">
      <dependencies>
        <any_of>
          <component_dependency value="middleware.multicore.rpmsg_lite.bm.MIMX9352"/>
          <component_dependency value="middleware.multicore.rpmsg_lite.xos.MIMX9352"/>
          <component_dependency value="middleware.multicore.rpmsg_lite.freertos.MIMX9352"/>
        </any_of>
      </dependencies>
      <source relative_path="rpmsg_lite/lib/include" project_relative_path="include" type="c_include">
        <files mask="rpmsg_lite.h"/>
        <files mask="rpmsg_ns.h"/>
        <files mask="llist.h"/>
        <files mask="rpmsg_default_config.h"/>
        <files mask="virtio_ring.h"/>
        <files mask="virtqueue.h"/>
        <files mask="rpmsg_compiler.h"/>
        <files mask="rpmsg_env.h"/>
      </source>
      <source relative_path="rpmsg_lite/lib/common" project_relative_path="common" type="src">
        <files mask="llist.c"/>
      </source>
      <source relative_path="rpmsg_lite/lib/rpmsg_lite" project_relative_path="rpmsg_lite" type="src">
        <files mask="rpmsg_lite.c"/>
        <files mask="rpmsg_ns.c"/>
      </source>
      <source relative_path="rpmsg_lite/lib/virtio" project_relative_path="virtio" type="src">
        <files mask="virtqueue.c"/>
      </source>
      <source relative_path="rpmsg_lite" project_relative_path="./" type="doc">
        <files mask="readme.txt" hidden="true"/>
      </source>
      <source relative_path="rpmsg_lite/doc" project_relative_path="doc" type="image">
        <files mask="arrowdown.png" hidden="true"/>
        <files mask="arrowright.png" hidden="true"/>
        <files mask="bc_s.png" hidden="true"/>
        <files mask="bdwn.png" hidden="true"/>
        <files mask="closed.png" hidden="true"/>
        <files mask="doc.png" hidden="true"/>
        <files mask="doxygen.png" hidden="true"/>
        <files mask="folderclosed.png" hidden="true"/>
        <files mask="folderopen.png" hidden="true"/>
        <files mask="nav_f.png" hidden="true"/>
        <files mask="nav_g.png" hidden="true"/>
        <files mask="nav_h.png" hidden="true"/>
        <files mask="nxp_logo_small.png" hidden="true"/>
        <files mask="open.png" hidden="true"/>
        <files mask="rpmsg_isoosi.png" hidden="true"/>
        <files mask="rpmsg_lite_arch.png" hidden="true"/>
        <files mask="rpmsg_lite_send_receive.png" hidden="true"/>
        <files mask="splitbar.png" hidden="true"/>
        <files mask="sync_off.png" hidden="true"/>
        <files mask="sync_on.png" hidden="true"/>
        <files mask="tab_a.png" hidden="true"/>
        <files mask="tab_b.png" hidden="true"/>
        <files mask="tab_h.png" hidden="true"/>
        <files mask="tab_s.png" hidden="true"/>
      </source>
      <source relative_path="rpmsg_lite/doc" project_relative_path="doc" type="doc">
        <files mask="customdoxygen.css" hidden="true"/>
        <files mask="dir_5a30104352ef4255dc24354b02eb2d20.html" hidden="true"/>
        <files mask="dir_97aefd0d527b934f1d99a682da8fe6a9.html" hidden="true"/>
        <files mask="doxygen.css" hidden="true"/>
        <files mask="group__config.html" hidden="true"/>
        <files mask="group__rpmsg__lite.html" hidden="true"/>
        <files mask="group__rpmsg__ns.html" hidden="true"/>
        <files mask="group__rpmsg__queue.html" hidden="true"/>
        <files mask="index.html" hidden="true"/>
        <files mask="modules.html" hidden="true"/>
        <files mask="navtree.css" hidden="true"/>
        <files mask="rpmsg__default__config_8h.html" hidden="true"/>
        <files mask="rpmsg__default__config_8h_source.html" hidden="true"/>
        <files mask="rpmsg__lite_8h_source.html" hidden="true"/>
        <files mask="rpmsg__ns_8h_source.html" hidden="true"/>
        <files mask="rpmsg__queue_8h_source.html" hidden="true"/>
        <files mask="tabs.css" hidden="true"/>
      </source>
      <source relative_path="rpmsg_lite/doc" project_relative_path="doc" type="script">
        <files mask="dynsections.js" hidden="true"/>
        <files mask="group__config.js" hidden="true"/>
        <files mask="group__rpmsg__lite.js" hidden="true"/>
        <files mask="group__rpmsg__ns.js" hidden="true"/>
        <files mask="group__rpmsg__queue.js" hidden="true"/>
        <files mask="jquery.js" hidden="true"/>
        <files mask="modules.js" hidden="true"/>
        <files mask="navtree.js" hidden="true"/>
        <files mask="navtreedata.js" hidden="true"/>
        <files mask="navtreeindex0.js" hidden="true"/>
        <files mask="resize.js" hidden="true"/>
      </source>
      <source relative_path="rpmsg_lite/doc/search" project_relative_path="doc" type="doc">
        <files mask="all_0.html" hidden="true"/>
        <files mask="all_1.html" hidden="true"/>
        <files mask="all_2.html" hidden="true"/>
        <files mask="all_3.html" hidden="true"/>
        <files mask="all_4.html" hidden="true"/>
        <files mask="all_5.html" hidden="true"/>
        <files mask="all_6.html" hidden="true"/>
        <files mask="all_7.html" hidden="true"/>
        <files mask="classes_0.html" hidden="true"/>
        <files mask="files_0.html" hidden="true"/>
        <files mask="functions_0.html" hidden="true"/>
        <files mask="groups_0.html" hidden="true"/>
        <files mask="nomatches.html" hidden="true"/>
        <files mask="pages_0.html" hidden="true"/>
        <files mask="search.css" hidden="true"/>
        <files mask="typedefs_0.html" hidden="true"/>
        <files mask="variables_0.html" hidden="true"/>
        <files mask="variables_1.html" hidden="true"/>
        <files mask="variables_2.html" hidden="true"/>
        <files mask="variables_3.html" hidden="true"/>
        <files mask="variables_4.html" hidden="true"/>
        <files mask="variables_5.html" hidden="true"/>
        <files mask="variables_6.html" hidden="true"/>
        <files mask="variables_7.html" hidden="true"/>
      </source>
      <source relative_path="rpmsg_lite/doc/search" project_relative_path="doc" type="script">
        <files mask="all_0.js" hidden="true"/>
        <files mask="all_1.js" hidden="true"/>
        <files mask="all_2.js" hidden="true"/>
        <files mask="all_3.js" hidden="true"/>
        <files mask="all_4.js" hidden="true"/>
        <files mask="all_5.js" hidden="true"/>
        <files mask="all_6.js" hidden="true"/>
        <files mask="all_7.js" hidden="true"/>
        <files mask="classes_0.js" hidden="true"/>
        <files mask="files_0.js" hidden="true"/>
        <files mask="functions_0.js" hidden="true"/>
        <files mask="groups_0.js" hidden="true"/>
        <files mask="pages_0.js" hidden="true"/>
        <files mask="search.js" hidden="true"/>
        <files mask="searchdata.js" hidden="true"/>
        <files mask="typedefs_0.js" hidden="true"/>
        <files mask="variables_0.js" hidden="true"/>
        <files mask="variables_1.js" hidden="true"/>
        <files mask="variables_2.js" hidden="true"/>
        <files mask="variables_3.js" hidden="true"/>
        <files mask="variables_4.js" hidden="true"/>
        <files mask="variables_5.js" hidden="true"/>
        <files mask="variables_6.js" hidden="true"/>
        <files mask="variables_7.js" hidden="true"/>
      </source>
      <source relative_path="rpmsg_lite/doc/search" project_relative_path="doc" type="image">
        <files mask="close.png" hidden="true"/>
        <files mask="mag_sel.png" hidden="true"/>
        <files mask="search_l.png" hidden="true"/>
        <files mask="search_m.png" hidden="true"/>
        <files mask="search_r.png" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="middleware_multicore_rpmsg_lite_MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="rpmsg_lite/lib/include" project_relative_path="include" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.rpmsg_lite.bm.MIMX9352" name="rpmsg_lite" brief="RPMsg-Lite BM environment sources" version="5.0.0" full_name="RPMsg-Lite baremetal environment layer sources" devices="MIMX9352xxxxM" category="Multicore/RPMsg-Lite" user_visible="false" type="middleware" package_base_path="middleware/multicore" project_base_path="rpmsg_lite">
      <source condition="middleware.baremetal.MIMX9352" relative_path="rpmsg_lite/lib/rpmsg_lite/porting/environment" project_relative_path="rpmsg_lite/porting/environment" type="src">
        <files mask="rpmsg_env_bm.c"/>
      </source>
      <source relative_path="rpmsg_lite/lib/include/environment/bm" project_relative_path="include/environment/bm" type="c_include">
        <files mask="rpmsg_env_specific.h"/>
      </source>
      <include_paths>
        <include_path relative_path="rpmsg_lite/lib/include/environment/bm" project_relative_path="include/environment/bm" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.rpmsg_lite.bm.config.MIMX9352" name="rpmsg_lite_bm_config" brief="RPMsg-Lite baremetal application configuration" version="5.0.0" full_name="Remote Procedure Messaging Lite BM configuration" devices="MIMX9352xxxxM" category="Multicore/RPMsg-Lite BM" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="source">
      <dependencies>
        <all>
          <component_dependency value="middleware.multicore.rpmsg_lite.MIMX9352"/>
          <component_dependency value="middleware.multicore.rpmsg_lite.imx93_m33_bm.MIMX9352"/>
        </all>
      </dependencies>
      <source relative_path="rpmsg_lite/template_application" project_relative_path="./" type="c_include">
        <files mask="rpmsg_config.h"/>
      </source>
      <include_paths>
        <include_path relative_path="rpmsg_lite/template_application" project_relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.rpmsg_lite.freertos.MIMX9352" name="rpmsg_lite" brief="RPMsg-Lite FreeRTOS environment sources" version="5.0.0" full_name="RPMsg-Lite FreeRTOS environment layer sources" devices="MIMX9352xxxxM" category="Multicore/RPMsg-Lite" user_visible="false" type="middleware" package_base_path="middleware/multicore" project_base_path="rpmsg_lite">
      <source condition="middleware.freertos-kernel.MIMX9352" relative_path="rpmsg_lite/lib/rpmsg_lite/porting/environment" project_relative_path="rpmsg_lite/porting/environment" type="src">
        <files mask="rpmsg_env_freertos.c"/>
      </source>
      <source condition="middleware.freertos-kernel.MIMX9352" relative_path="rpmsg_lite/lib/include" project_relative_path="include" type="c_include">
        <files mask="rpmsg_queue.h"/>
      </source>
      <source condition="middleware.freertos-kernel.MIMX9352" relative_path="rpmsg_lite/lib/rpmsg_lite" project_relative_path="rpmsg_lite" type="src">
        <files mask="rpmsg_queue.c"/>
      </source>
      <source relative_path="rpmsg_lite/lib/include/environment/freertos" project_relative_path="include/environment/freertos" type="c_include">
        <files mask="rpmsg_env_specific.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="middleware_multicore_rpmsg_lite_freertos_MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="rpmsg_lite/lib/include/environment/freertos" project_relative_path="include/environment/freertos" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.rpmsg_lite.freertos.config.MIMX9352" name="rpmsg_lite_freertos_config" brief="RPMsg-Lite FreeRTOS application configuration" version="5.0.0" full_name="Remote Procedure Messaging Lite FreeRTOS configuration" devices="MIMX9352xxxxM" category="Multicore/RPMsg-Lite FreeRTOS" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="source">
      <dependencies>
        <all>
          <component_dependency value="middleware.multicore.rpmsg_lite.MIMX9352"/>
          <component_dependency value="middleware.multicore.rpmsg_lite.imx93_m33_freertos.MIMX9352"/>
        </all>
      </dependencies>
      <source relative_path="rpmsg_lite/template_application" project_relative_path="./" type="c_include">
        <files mask="rpmsg_config.h"/>
      </source>
      <include_paths>
        <include_path relative_path="rpmsg_lite/template_application" project_relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.rpmsg_lite.imx93_m33_bm.MIMX9352" name="rpmsg_lite_imx93_m33_bm" brief="RPMsg-Lite for i.MX93 baremetal application" version="5.0.0" full_name="Remote Procedure Messaging Lite porting layer for i.MX93 board" devices="MIMX9352xxxxM" user_visible="false" type="middleware" package_base_path="middleware/multicore" project_base_path="rpmsg_lite">
      <source relative_path="rpmsg_lite/lib/include/platform/imx93_m33" project_relative_path="include/platform/imx93_m33" type="c_include">
        <files mask="rpmsg_platform.h"/>
      </source>
      <source relative_path="rpmsg_lite/lib/rpmsg_lite/porting/platform/imx93_m33" project_relative_path="rpmsg_lite/porting/platform/imx93_m33" type="src">
        <files mask="rpmsg_platform.c"/>
      </source>
      <include_paths>
        <include_path relative_path="rpmsg_lite/lib/include/platform/imx93_m33" project_relative_path="include/platform/imx93_m33" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.rpmsg_lite.imx93_m33_freertos.MIMX9352" name="rpmsg_lite_imx93_m33_freertos" brief="RPMsg-Lite for i.MX93 FreeRTOS application" version="5.0.0" full_name="Remote Procedure Messaging Lite porting layer for i.MX93 board" devices="MIMX9352xxxxM" user_visible="false" type="middleware" package_base_path="middleware/multicore" project_base_path="rpmsg_lite">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.MIMX9352"/>
          <component_dependency value="middleware.freertos-kernel.heap_4.MIMX9352"/>
        </all>
      </dependencies>
      <source relative_path="rpmsg_lite/lib/include/platform/imx93_m33" project_relative_path="include/platform/imx93_m33" type="c_include">
        <files mask="rpmsg_platform.h"/>
      </source>
      <source relative_path="rpmsg_lite/lib/rpmsg_lite/porting/platform/imx93_m33" project_relative_path="rpmsg_lite/porting/platform/imx93_m33" type="src">
        <files mask="rpmsg_platform.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="middleware_multicore_rpmsg_lite_imx93_m33_freertos_MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="rpmsg_lite/lib/include/platform/imx93_m33" project_relative_path="include/platform/imx93_m33" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.rpmsg_lite.xos.MIMX9352" name="rpmsg_lite xos" brief="RPMsg-Lite XOS environment layer sources" version="1.0.0" full_name="RPMsg-Lite XOS environment layer sources" devices="MIMX9352xxxxM" category="Multicore/RPMsg-Lite" user_visible="false" type="middleware" package_base_path="middleware/multicore" project_base_path="rpmsg_lite">
      <defines>
        <define name="FSL_RTOS_XOS" value="1"/>
      </defines>
      <source relative_path="rpmsg_lite/lib/rpmsg_lite/porting/environment" project_relative_path="env/xos" type="src">
        <files mask="rpmsg_env_xos.c"/>
      </source>
      <source relative_path="rpmsg_lite/lib/include" project_relative_path="./" type="c_include">
        <files mask="rpmsg_queue.h"/>
      </source>
      <source relative_path="rpmsg_lite/lib/rpmsg_lite" project_relative_path="env/xos" type="src">
        <files mask="rpmsg_queue.c"/>
      </source>
      <source relative_path="rpmsg_lite/lib/include/environment/xos" project_relative_path="include/environment/xos" type="c_include">
        <files mask="rpmsg_env_specific.h"/>
      </source>
      <include_paths>
        <include_path relative_path="rpmsg_lite/lib/include/environment/xos" project_relative_path="include/environment/xos" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.pkcs11.MIMX9352" name="pkcs11" brief="Public Key Cryptography Standard #11 defines generic cryptographic token interface." version="2.40.1" full_name="pkcs11" devices="MIMX9352xxxxM" category="AWS IoT/OASIS PKCS #11" user_visible="true" type="middleware" package_base_path="middleware/pkcs11" project_base_path="pkcs11">
      <source relative_path="./" type="other">
        <files mask="README.md"/>
        <files mask="LICENSE.md"/>
        <files mask="CONTRIBUTING.md"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="pkcs11t.h"/>
        <files mask="pkcs11f.h"/>
        <files mask="pkcs11.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.tinycbor.MIMX9352" name="tinycbor" brief="Concise Binary Object Representation (CBOR) Library" version="0.6.0" full_name="TinyCBOR" devices="MIMX9352xxxxM" category="TinyCBOR/TinyCBOR" user_visible="true" type="middleware" package_base_path="middleware/tinycbor" project_base_path="tinycbor">
      <source relative_path="src" type="c_include">
        <files mask="cbor.h"/>
        <files mask="cborinternal_p.h"/>
        <files mask="compilersupport_p.h"/>
        <files mask="tinycbor-version.h"/>
        <files mask="utf8_p.h"/>
      </source>
      <source relative_path="src" type="src">
        <files mask="cborencoder.c"/>
        <files mask="cborencoder_close_container_checked.c"/>
        <files mask="cborerrorstrings.c"/>
        <files mask="cborparser.c"/>
        <files mask="cborparser_dup_string.c"/>
        <files mask="cborpretty.c"/>
        <files mask="cborvalidation.c"/>
      </source>
      <include_paths>
        <include_path relative_path="src" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.tinycbor.unused.MIMX9352" name="tinycbor - unused files" brief="Concise Binary Object Representation (CBOR) Library. Unused files." version="0.6.0" full_name="TinyCBOR - unused files" devices="MIMX9352xxxxM" category="TinyCBOR/TinyCBOR" user_visible="false" type="middleware" package_base_path="middleware/tinycbor" project_base_path="tinycbor">
      <source relative_path="./" type="other">
        <files mask="Doxyfile"/>
        <files mask="LICENSE"/>
        <files mask="Makefile"/>
        <files mask="Makefile.configure"/>
        <files mask="Makefile.nmake"/>
        <files mask="README"/>
        <files mask="TODO"/>
        <files mask="VERSION"/>
        <files mask="tinycbor.pc.in"/>
      </source>
      <source relative_path="examples" type="other">
        <files mask="examples.pro"/>
        <files mask="simplereader.pro"/>
      </source>
      <source relative_path="examples" type="src">
        <files mask="simplereader.c"/>
      </source>
      <source relative_path="scripts" type="other">
        <files mask="maketag.pl"/>
      </source>
      <source relative_path="scripts" type="script">
        <files mask="update-docs.sh"/>
      </source>
      <source relative_path="src" type="other">
        <files mask="cbor.dox"/>
        <files mask="parsetags.pl"/>
        <files mask="src.pri"/>
        <files mask="tinycbor.pro"/>
      </source>
      <source relative_path="src" type="src">
        <files mask="cborencoder_float.c"/>
        <files mask="cborparser_float.c"/>
        <files mask="cborpretty_stdio.c"/>
        <files mask="cbortojson.c"/>
        <files mask="open_memstream.c"/>
      </source>
      <source relative_path="src" type="c_include">
        <files mask="cborjson.h"/>
      </source>
      <source relative_path="src" type="doc">
        <files mask="tags.txt"/>
      </source>
      <source relative_path="tests" type="other">
        <files mask=".gitignore"/>
        <files mask="tests.pro"/>
      </source>
      <source relative_path="tests/c90" type="other">
        <files mask="c90.pro"/>
      </source>
      <source relative_path="tests/c90" type="src">
        <files mask="tst_c90.c"/>
      </source>
      <source relative_path="tests/cpp" type="other">
        <files mask="cpp.pro"/>
      </source>
      <source relative_path="tests/cpp" type="src">
        <files mask="tst_cpp.cpp"/>
      </source>
      <source relative_path="tests/encoder" type="other">
        <files mask="encoder.pro"/>
      </source>
      <source relative_path="tests/encoder" type="src">
        <files mask="tst_encoder.cpp"/>
      </source>
      <source relative_path="tests/parser" type="other">
        <files mask="parser.pro"/>
      </source>
      <source relative_path="tests/parser" type="src">
        <files mask="tst_parser.cpp"/>
      </source>
      <source relative_path="tests/tojson" type="other">
        <files mask="tojson.pro"/>
      </source>
      <source relative_path="tests/tojson" type="src">
        <files mask="tst_tojson.cpp"/>
      </source>
      <source relative_path="tools/cbordump" type="src">
        <files mask="cbordump.c"/>
      </source>
      <source relative_path="tools/cbordump" type="other">
        <files mask="cbordump.pro"/>
      </source>
      <source relative_path="tools/json2cbor" type="src">
        <files mask="json2cbor.c"/>
      </source>
      <source relative_path="tools/json2cbor" type="other">
        <files mask="json2cbor.pro"/>
      </source>
      <source relative_path="tools" type="other">
        <files mask="Makefile"/>
      </source>
      <include_paths>
        <include_path relative_path="src" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.utilities.misc_utilities.MIMX9352" name="misc_utilities" brief="Utilities which is needed for particular toolchain like the SBRK function required to address limitation between HEAP and STACK in GCC toolchain library." version="1.1.1" full_name="Utilities miscellaneous" devices="MIMX9352xxxxM" user_visible="true" type="utilities" package_base_path="devices/MIMX9352/utilities" project_base_path="utilities">
      <source toolchain="armgcc" relative_path="./" type="src">
        <files mask="fsl_sbrk.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="asm_include" device_cores="cm33_MIMX9352xxxxM">
        <files mask="fsl_memcpy.S"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="utilities_misc_utilities_MIMX9352.cmake" hidden="true"/>
      </source>
    </component>
    <component id="platform.utilities.assert.MIMX9352" name="assert" brief="Utility assert" version="1.0.0" full_name="Utility assert" devices="MIMX9352xxxxM" device_cores="cm33_MIMX9352xxxxM" user_visible="true" type="utilities" package_base_path="devices/MIMX9352/utilities" project_base_path="utilities">
      <dependencies>
        <component_dependency value="utility.debug_console.MIMX9352"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_assert.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="utility_assert_MIMX9352.cmake" hidden="true"/>
      </source>
    </component>
    <component id="platform.utilities.assert_lite.MIMX9352" name="assert_lite" brief="Utility assert_lite" version="1.0.0" full_name="Utility assert_lite" devices="MIMX9352xxxxM" device_cores="cm33_MIMX9352xxxxM" user_visible="true" type="utilities" package_base_path="devices/MIMX9352/utilities/debug_console_lite" project_base_path="utilities">
      <dependencies>
        <component_dependency value="utility.debug_console_lite.MIMX9352"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_assert.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="utility_assert_lite_MIMX9352.cmake" hidden="true"/>
      </source>
    </component>
    <component id="utility.debug_console.MIMX9352" name="debug_console" brief="Utility debug_console" version="1.0.1" full_name="Utility debug_console" devices="MIMX9352xxxxM" device_cores="cm33_MIMX9352xxxxM" user_visible="true" type="utilities" package_base_path="devices/MIMX9352/utilities" project_base_path="utilities">
      <dependencies>
        <all>
          <component_dependency value="component.serial_manager.MIMX9352"/>
          <component_dependency value="platform.drivers.common.MIMX9352"/>
        </all>
      </dependencies>
      <source relative_path="str" project_relative_path="./" type="src">
        <files mask="fsl_str.c"/>
      </source>
      <source relative_path="str" project_relative_path="./" type="c_include">
        <files mask="fsl_str.h"/>
      </source>
      <source relative_path="debug_console" project_relative_path="./" type="src">
        <files mask="fsl_debug_console.c"/>
      </source>
      <source relative_path="debug_console" project_relative_path="./" type="c_include">
        <files mask="fsl_debug_console.h"/>
        <files mask="fsl_debug_console_conf.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="utility_debug_console_MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="str" project_relative_path="./" type="c_include"/>
        <include_path relative_path="debug_console" project_relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="utility.debug_console_lite.MIMX9352" name="debug_console_lite" brief="Utility debug_console_lite" version="1.0.0" full_name="Utility debug_console_lite" devices="MIMX9352xxxxM" device_cores="cm33_MIMX9352xxxxM" user_visible="true" type="utilities" package_base_path="devices/MIMX9352/utilities" project_base_path="utilities">
      <dependencies>
        <all>
          <component_dependency value="component.lpuart_adapter.MIMX9352"/>
          <component_dependency value="platform.drivers.common.MIMX9352"/>
        </all>
      </dependencies>
      <source relative_path="str" project_relative_path="./" type="src">
        <files mask="fsl_str.c"/>
      </source>
      <source relative_path="str" project_relative_path="./" type="c_include">
        <files mask="fsl_str.h"/>
      </source>
      <source relative_path="debug_console_lite" project_relative_path="./" type="src">
        <files mask="fsl_debug_console.c"/>
      </source>
      <source relative_path="debug_console_lite" project_relative_path="./" type="c_include">
        <files mask="fsl_debug_console.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="utility_debug_console_lite_MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="str" project_relative_path="./" type="c_include"/>
        <include_path relative_path="debug_console_lite" project_relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.utilities.notifier.MIMX9352" name="notifier" brief="Utility notifier" version="1.0.0" full_name="Utility notifier" devices="MIMX9352xxxxM" device_cores="cm33_MIMX9352xxxxM" user_visible="true" type="utilities" package_base_path="devices/MIMX9352/utilities" project_base_path="utilities/utilities">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMX9352"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_notifier.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_notifier.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="utility.shell.MIMX9352" name="shell" brief="Utility shell" version="1.0.0" full_name="Utility shell" devices="MIMX9352xxxxM" device_cores="cm33_MIMX9352xxxxM" user_visible="true" type="utilities" package_base_path="devices/MIMX9352/utilities" project_base_path="utilities">
      <defines>
        <define name="DEBUG_CONSOLE_RX_ENABLE" value="0"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="utility.str.MIMX9352"/>
          <component_dependency value="component.lists.MIMX9352"/>
          <component_dependency value="platform.drivers.common.MIMX9352"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_shell.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_shell.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="utility.str.MIMX9352" name="utility_str" brief="Utility str" version="1.0.0" full_name="Utility str" devices="MIMX9352xxxxM" device_cores="cm33_MIMX9352xxxxM" user_visible="true" type="utilities" package_base_path="devices/MIMX9352/utilities" project_base_path="utilities">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMX9352"/>
      </dependencies>
      <source relative_path="str" project_relative_path="./" type="src">
        <files mask="fsl_str.c"/>
      </source>
      <source relative_path="str" project_relative_path="./" type="c_include">
        <files mask="fsl_str.h"/>
      </source>
      <include_paths>
        <include_path relative_path="str" project_relative_path="./" type="c_include"/>
      </include_paths>
    </component>
  </components>
</ksdk:manifest>
